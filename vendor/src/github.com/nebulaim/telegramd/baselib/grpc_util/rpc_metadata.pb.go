// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc_metadata.proto

/*
Package grpc_util is a generated protocol buffer package.

It is generated from these files:
	rpc_metadata.proto

It has these top-level messages:
	RpcMetadata
*/
package grpc_util

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RpcMetadata struct {
	ServerId        int32  `protobuf:"varint,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	NetlibSessionId int64  `protobuf:"varint,2,opt,name=netlib_session_id,json=netlibSessionId" json:"netlib_session_id,omitempty"`
	ClientAddr      string `protobuf:"bytes,3,opt,name=client_addr,json=clientAddr" json:"client_addr,omitempty"`
	AuthId          int64  `protobuf:"varint,4,opt,name=auth_id,json=authId" json:"auth_id,omitempty"`
	SessionId       int64  `protobuf:"varint,5,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	TraceId         int64  `protobuf:"varint,6,opt,name=trace_id,json=traceId" json:"trace_id,omitempty"`
	SpanId          int64  `protobuf:"varint,7,opt,name=span_id,json=spanId" json:"span_id,omitempty"`
	ReceiveTime     int64  `protobuf:"varint,8,opt,name=receive_time,json=receiveTime" json:"receive_time,omitempty"`
	From            string `protobuf:"bytes,9,opt,name=from" json:"from,omitempty"`
	To              string `protobuf:"bytes,10,opt,name=to" json:"to,omitempty"`
	// 用户ID
	UserId      int32 `protobuf:"varint,11,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	ClientMsgId int64 `protobuf:"varint,12,opt,name=client_msg_id,json=clientMsgId" json:"client_msg_id,omitempty"`
	// mtproto
	Layer int32 `protobuf:"varint,13,opt,name=layer" json:"layer,omitempty"`
	// extend
	Extend *google_protobuf.Any `protobuf:"bytes,15,opt,name=extend" json:"extend,omitempty"`
}

func (m *RpcMetadata) Reset()                    { *m = RpcMetadata{} }
func (m *RpcMetadata) String() string            { return proto.CompactTextString(m) }
func (*RpcMetadata) ProtoMessage()               {}
func (*RpcMetadata) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RpcMetadata) GetServerId() int32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *RpcMetadata) GetNetlibSessionId() int64 {
	if m != nil {
		return m.NetlibSessionId
	}
	return 0
}

func (m *RpcMetadata) GetClientAddr() string {
	if m != nil {
		return m.ClientAddr
	}
	return ""
}

func (m *RpcMetadata) GetAuthId() int64 {
	if m != nil {
		return m.AuthId
	}
	return 0
}

func (m *RpcMetadata) GetSessionId() int64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *RpcMetadata) GetTraceId() int64 {
	if m != nil {
		return m.TraceId
	}
	return 0
}

func (m *RpcMetadata) GetSpanId() int64 {
	if m != nil {
		return m.SpanId
	}
	return 0
}

func (m *RpcMetadata) GetReceiveTime() int64 {
	if m != nil {
		return m.ReceiveTime
	}
	return 0
}

func (m *RpcMetadata) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *RpcMetadata) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *RpcMetadata) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *RpcMetadata) GetClientMsgId() int64 {
	if m != nil {
		return m.ClientMsgId
	}
	return 0
}

func (m *RpcMetadata) GetLayer() int32 {
	if m != nil {
		return m.Layer
	}
	return 0
}

func (m *RpcMetadata) GetExtend() *google_protobuf.Any {
	if m != nil {
		return m.Extend
	}
	return nil
}

func init() {
	proto.RegisterType((*RpcMetadata)(nil), "grpc_util.RpcMetadata")
}

func init() { proto.RegisterFile("rpc_metadata.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 371 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x91, 0x51, 0xef, 0x93, 0x30,
	0x14, 0xc5, 0x03, 0xfb, 0x8f, 0x8d, 0xcb, 0x7f, 0x2e, 0xab, 0x4b, 0x64, 0x1a, 0x23, 0xee, 0x89,
	0x98, 0x85, 0x25, 0xfa, 0x09, 0xb6, 0xf8, 0x20, 0x0f, 0x4b, 0x16, 0xf4, 0xc9, 0x17, 0x52, 0xe8,
	0x1d, 0x36, 0x01, 0x4a, 0xda, 0xb2, 0x38, 0xbf, 0x92, 0x5f, 0xd2, 0xb4, 0x45, 0xe3, 0x13, 0x9c,
	0xf3, 0x3b, 0xf7, 0x40, 0x7b, 0x81, 0xc8, 0xa1, 0x2e, 0x3b, 0xd4, 0x94, 0x51, 0x4d, 0xb3, 0x41,
	0x0a, 0x2d, 0x48, 0xd8, 0x18, 0x73, 0xd4, 0xbc, 0x7d, 0xbd, 0x6b, 0x84, 0x68, 0x5a, 0x3c, 0x5a,
	0x50, 0x8d, 0xb7, 0x23, 0xed, 0x1f, 0x2e, 0xb5, 0xff, 0x3d, 0x83, 0xa8, 0x18, 0xea, 0xcb, 0x34,
	0x4b, 0xde, 0x40, 0xa8, 0x50, 0xde, 0x51, 0x96, 0x9c, 0xc5, 0x5e, 0xe2, 0xa5, 0xf3, 0x62, 0xe9,
	0x8c, 0x9c, 0x91, 0x0f, 0xb0, 0xe9, 0x51, 0xb7, 0xbc, 0x2a, 0x15, 0x2a, 0xc5, 0x45, 0x6f, 0x42,
	0x7e, 0xe2, 0xa5, 0xb3, 0x62, 0xed, 0xc0, 0x57, 0xe7, 0xe7, 0x8c, 0xbc, 0x83, 0xa8, 0x6e, 0x39,
	0xf6, 0xba, 0xa4, 0x8c, 0xc9, 0x78, 0x96, 0x78, 0x69, 0x58, 0x80, 0xb3, 0x4e, 0x8c, 0x49, 0xf2,
	0x0a, 0x16, 0x74, 0xd4, 0x3f, 0x4c, 0xc5, 0x93, 0xad, 0x08, 0x8c, 0xcc, 0x19, 0x79, 0x0b, 0xf0,
	0x5f, 0xfd, 0xdc, 0xb2, 0x50, 0xfd, 0x2b, 0xde, 0xc1, 0x52, 0x4b, 0x5a, 0xa3, 0x81, 0x81, 0x85,
	0x0b, 0xab, 0x73, 0x66, 0x2a, 0xd5, 0x40, 0xed, 0xd8, 0xc2, 0x55, 0x1a, 0x99, 0x33, 0xf2, 0x1e,
	0x9e, 0x25, 0xd6, 0xc8, 0xef, 0x58, 0x6a, 0xde, 0x61, 0xbc, 0xb4, 0x34, 0x9a, 0xbc, 0x6f, 0xbc,
	0x43, 0x42, 0xe0, 0xe9, 0x26, 0x45, 0x17, 0x87, 0xf6, 0x47, 0xed, 0x3b, 0x79, 0x01, 0xbe, 0x16,
	0x31, 0x58, 0xc7, 0xd7, 0xc2, 0xf4, 0x8f, 0xca, 0x5d, 0x4d, 0x64, 0xaf, 0x26, 0x30, 0x32, 0x67,
	0x64, 0x0f, 0xab, 0xe9, 0xb0, 0x9d, 0x6a, 0x0c, 0x7e, 0x76, 0x1f, 0x70, 0xe6, 0x45, 0x35, 0x39,
	0x23, 0x5b, 0x98, 0xb7, 0xf4, 0x81, 0x32, 0x5e, 0xd9, 0x51, 0x27, 0xc8, 0x01, 0x02, 0xfc, 0xa9,
	0xb1, 0x67, 0xf1, 0x3a, 0xf1, 0xd2, 0xe8, 0xe3, 0x36, 0x73, 0xbb, 0xca, 0xfe, 0xee, 0x2a, 0x3b,
	0xf5, 0x8f, 0x62, 0xca, 0x9c, 0x0f, 0xf0, 0xb2, 0x16, 0x5d, 0xd6, 0x63, 0x35, 0xb6, 0x94, 0x77,
	0xd9, 0x2f, 0x9b, 0x3a, 0x6f, 0xbe, 0x5f, 0xcd, 0x73, 0xda, 0xe3, 0x67, 0xaa, 0xe9, 0x17, 0xff,
	0xea, 0x55, 0x81, 0xa5, 0x9f, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0xac, 0x3d, 0x27, 0xa4, 0x1e,
	0x02, 0x00, 0x00,
}
