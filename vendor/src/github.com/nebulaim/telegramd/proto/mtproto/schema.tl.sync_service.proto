/*
* WARNING! All changes made in this file will be lost!
* Created from 'scheme.tl' by 'mtprotoc'
*
*  Copyright (c) 2018, https://github.com/nebulaim
*  All rights reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

syntax = "proto3";

package mtproto;

option java_package = "com.nebulaim.engine.mtproto";
option java_outer_classname = "MTProto";
option optimize_for = CODE_SIZE;

import "schema.tl.core_types.proto";
import "schema.tl.sync.proto";


///////////////////////////////////////////////////////////////////////////////
// langpack.getLanguages#800fd57d = Vector<LangPackLanguage>;
message TL_langpack_getLanguagesLayer70 {
}

///////////////////////////////////////////////////////////////////////////////
// help.getScheme#dbb69a9e version:int = Scheme;
message TL_help_getScheme {
    int32 version = 1;
}

///////////////////////////////////////////////////////////////////////////////
// messages.readHistory#b04f2510 peer:InputPeer max_id:int offset:int = messages.AffectedHistory;
message TL_messages_readHistoryLayer2 {
    InputPeer peer = 1;
    int32 max_id = 2;
    int32 offset = 3;
}

///////////////////////////////////////////////////////////////////////////////
// help.getInviteText#a4a95186 lang_code:string = help.InviteText;
message TL_help_getInviteTextLayer46 {
    string lang_code = 1;
}

///////////////////////////////////////////////////////////////////////////////
// help.getAppUpdate#c812ac7e device_model:string system_version:string app_version:string lang_code:string = help.AppUpdate;
message TL_help_getAppUpdateLayer46 {
    string device_model = 1;
    string system_version = 2;
    string app_version = 3;
    string lang_code = 4;
}

///////////////////////////////////////////////////////////////////////////////
// updates.getChannelDifference#bb32d7c0 channel:InputChannel filter:ChannelMessagesFilter pts:int limit:int = updates.ChannelDifference;
message TL_updates_getChannelDifferenceLayer46 {
    InputChannel channel = 1;
    ChannelMessagesFilter filter = 2;
    int32 pts = 3;
    int32 limit = 4;
}

///////////////////////////////////////////////////////////////////////////////
// auth.sendCode#ccfd70cf flags:# allow_flashcall:flags.0?true phone_number:string current_number:flags.0?Bool api_id:int api_hash:string lang_code:string = auth.SentCode;
message TL_auth_sendCodeLayer51 {
    bool allow_flashcall = 2;
    string phone_number = 3;
    Bool current_number = 4;
    int32 api_id = 5;
    string api_hash = 6;
    string lang_code = 7;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getHistory#afa92846 peer:InputPeer offset_id:int offset_date:int add_offset:int limit:int max_id:int min_id:int = messages.Messages;
message TL_messages_getHistoryLayer51 {
    InputPeer peer = 1;
    int32 offset_id = 2;
    int32 offset_date = 3;
    int32 add_offset = 4;
    int32 limit = 5;
    int32 max_id = 6;
    int32 min_id = 7;
}

///////////////////////////////////////////////////////////////////////////////
// initConnection#c7481da6 {X:Type} api_id:int device_model:string system_version:string app_version:string system_lang_code:string lang_pack:string lang_code:string query:!X = X;
message TL_initConnectionLayer68 {
    int32 api_id = 1;
    string device_model = 2;
    string system_version = 3;
    string app_version = 4;
    string system_lang_code = 5;
    string lang_pack = 6;
    string lang_code = 7;
    bytes query = 8;
}

///////////////////////////////////////////////////////////////////////////////
// messages.search#f288a275 flags:# peer:InputPeer q:string from_id:flags.0?InputUser filter:MessagesFilter min_date:int max_date:int offset:int max_id:int limit:int = messages.Messages;
message TL_messages_searchLayer68 {
    InputPeer peer = 2;
    string q = 3;
    InputUser from_id = 4;
    MessagesFilter filter = 5;
    int32 min_date = 6;
    int32 max_date = 7;
    int32 offset = 8;
    int32 max_id = 9;
    int32 limit = 10;
}

///////////////////////////////////////////////////////////////////////////////
// account.registerDevice#637ea878 token_type:int token:string = Bool;
message TL_account_registerDeviceLayer71 {
    int32 token_type = 1;
    string token = 2;
}

///////////////////////////////////////////////////////////////////////////////
// account.unregisterDevice#65c55b40 token_type:int token:string = Bool;
message TL_account_unregisterDeviceLayer71 {
    int32 token_type = 1;
    string token = 2;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getMessages#4222fa74 id:Vector<int> = messages.Messages;
message TL_messages_getMessagesLayer71 {
    repeated int32 id = 1;
}

///////////////////////////////////////////////////////////////////////////////
// langpack.getLangPack#9ab5c58e lang_code:string = LangPackDifference;
message TL_langpack_getLangPackLayer71 {
    string lang_code = 1;
}

///////////////////////////////////////////////////////////////////////////////
// invokeAfterMsg#cb9f372d {X:Type} msg_id:long query:!X = X;
message TL_invokeAfterMsg {
    int64 msg_id = 1;
    bytes query = 2;
}

///////////////////////////////////////////////////////////////////////////////
// invokeAfterMsgs#3dc4b4f0 {X:Type} msg_ids:Vector<long> query:!X = X;
message TL_invokeAfterMsgs {
    repeated int64 msg_ids = 1;
    bytes query = 2;
}

///////////////////////////////////////////////////////////////////////////////
// initConnection#785188b8 {X:Type} flags:# api_id:int device_model:string system_version:string app_version:string system_lang_code:string lang_pack:string lang_code:string proxy:flags.0?InputClientProxy query:!X = X;
message TL_initConnection {
    int32 api_id = 2;
    string device_model = 3;
    string system_version = 4;
    string app_version = 5;
    string system_lang_code = 6;
    string lang_pack = 7;
    string lang_code = 8;
    InputClientProxy proxy = 9;
    bytes query = 10;
}

///////////////////////////////////////////////////////////////////////////////
// invokeWithLayer#da9b0d0d {X:Type} layer:int query:!X = X;
message TL_invokeWithLayer {
    int32 layer = 1;
    bytes query = 2;
}

///////////////////////////////////////////////////////////////////////////////
// invokeWithoutUpdates#bf9459b7 {X:Type} query:!X = X;
message TL_invokeWithoutUpdates {
    bytes query = 1;
}

///////////////////////////////////////////////////////////////////////////////
// invokeWithMessagesRange#365275f2 {X:Type} range:MessageRange query:!X = X;
message TL_invokeWithMessagesRange {
    MessageRange range = 1;
    bytes query = 2;
}

///////////////////////////////////////////////////////////////////////////////
// invokeWithTakeout#aca9fd2e {X:Type} takeout_id:long query:!X = X;
message TL_invokeWithTakeout {
    int64 takeout_id = 1;
    bytes query = 2;
}

///////////////////////////////////////////////////////////////////////////////
// auth.sendCode#86aef0ec flags:# allow_flashcall:flags.0?true phone_number:string current_number:flags.0?Bool api_id:int api_hash:string = auth.SentCode;
message TL_auth_sendCode {
    bool allow_flashcall = 2;
    string phone_number = 3;
    Bool current_number = 4;
    int32 api_id = 5;
    string api_hash = 6;
}

///////////////////////////////////////////////////////////////////////////////
// auth.signUp#1b067634 phone_number:string phone_code_hash:string phone_code:string first_name:string last_name:string = auth.Authorization;
message TL_auth_signUp {
    string phone_number = 1;
    string phone_code_hash = 2;
    string phone_code = 3;
    string first_name = 4;
    string last_name = 5;
}

///////////////////////////////////////////////////////////////////////////////
// auth.signIn#bcd51581 phone_number:string phone_code_hash:string phone_code:string = auth.Authorization;
message TL_auth_signIn {
    string phone_number = 1;
    string phone_code_hash = 2;
    string phone_code = 3;
}

///////////////////////////////////////////////////////////////////////////////
// auth.logOut#5717da40 = Bool;
message TL_auth_logOut {
}

///////////////////////////////////////////////////////////////////////////////
// auth.resetAuthorizations#9fab0d1a = Bool;
message TL_auth_resetAuthorizations {
}

///////////////////////////////////////////////////////////////////////////////
// auth.exportAuthorization#e5bfffcd dc_id:int = auth.ExportedAuthorization;
message TL_auth_exportAuthorization {
    int32 dc_id = 1;
}

///////////////////////////////////////////////////////////////////////////////
// auth.importAuthorization#e3ef9613 id:int bytes:bytes = auth.Authorization;
message TL_auth_importAuthorization {
    int32 id = 1;
    bytes bytes = 2;
}

///////////////////////////////////////////////////////////////////////////////
// auth.bindTempAuthKey#cdd42a05 perm_auth_key_id:long nonce:long expires_at:int encrypted_message:bytes = Bool;
message TL_auth_bindTempAuthKey {
    int64 perm_auth_key_id = 1;
    int64 nonce = 2;
    int32 expires_at = 3;
    bytes encrypted_message = 4;
}

///////////////////////////////////////////////////////////////////////////////
// auth.importBotAuthorization#67a3ff2c flags:int api_id:int api_hash:string bot_auth_token:string = auth.Authorization;
message TL_auth_importBotAuthorization {
    int32 flags = 1;
    int32 api_id = 2;
    string api_hash = 3;
    string bot_auth_token = 4;
}

///////////////////////////////////////////////////////////////////////////////
// auth.checkPassword#d18b4d16 password:InputCheckPasswordSRP = auth.Authorization;
message TL_auth_checkPassword {
    InputCheckPasswordSRP password = 1;
}

///////////////////////////////////////////////////////////////////////////////
// auth.requestPasswordRecovery#d897bc66 = auth.PasswordRecovery;
message TL_auth_requestPasswordRecovery {
}

///////////////////////////////////////////////////////////////////////////////
// auth.recoverPassword#4ea56e92 code:string = auth.Authorization;
message TL_auth_recoverPassword {
    string code = 1;
}

///////////////////////////////////////////////////////////////////////////////
// auth.resendCode#3ef1a9bf phone_number:string phone_code_hash:string = auth.SentCode;
message TL_auth_resendCode {
    string phone_number = 1;
    string phone_code_hash = 2;
}

///////////////////////////////////////////////////////////////////////////////
// auth.cancelCode#1f040578 phone_number:string phone_code_hash:string = Bool;
message TL_auth_cancelCode {
    string phone_number = 1;
    string phone_code_hash = 2;
}

///////////////////////////////////////////////////////////////////////////////
// auth.dropTempAuthKeys#8e48a188 except_auth_keys:Vector<long> = Bool;
message TL_auth_dropTempAuthKeys {
    repeated int64 except_auth_keys = 1;
}

///////////////////////////////////////////////////////////////////////////////
// account.registerDevice#5cbea590 token_type:int token:string app_sandbox:Bool secret:bytes other_uids:Vector<int> = Bool;
message TL_account_registerDevice {
    int32 token_type = 1;
    string token = 2;
    Bool app_sandbox = 3;
    bytes secret = 4;
    repeated int32 other_uids = 5;
}

///////////////////////////////////////////////////////////////////////////////
// account.unregisterDevice#3076c4bf token_type:int token:string other_uids:Vector<int> = Bool;
message TL_account_unregisterDevice {
    int32 token_type = 1;
    string token = 2;
    repeated int32 other_uids = 3;
}

///////////////////////////////////////////////////////////////////////////////
// account.updateNotifySettings#84be5b93 peer:InputNotifyPeer settings:InputPeerNotifySettings = Bool;
message TL_account_updateNotifySettings {
    InputNotifyPeer peer = 1;
    InputPeerNotifySettings settings = 2;
}

///////////////////////////////////////////////////////////////////////////////
// account.getNotifySettings#12b3ad31 peer:InputNotifyPeer = PeerNotifySettings;
message TL_account_getNotifySettings {
    InputNotifyPeer peer = 1;
}

///////////////////////////////////////////////////////////////////////////////
// account.resetNotifySettings#db7e1747 = Bool;
message TL_account_resetNotifySettings {
}

///////////////////////////////////////////////////////////////////////////////
// account.updateProfile#78515775 flags:# first_name:flags.0?string last_name:flags.1?string about:flags.2?string = User;
message TL_account_updateProfile {
    string first_name = 2;
    string last_name = 3;
    string about = 4;
}

///////////////////////////////////////////////////////////////////////////////
// account.updateStatus#6628562c offline:Bool = Bool;
message TL_account_updateStatus {
    Bool offline = 1;
}

///////////////////////////////////////////////////////////////////////////////
// account.getWallPapers#c04cfac2 = Vector<WallPaper>;
message TL_account_getWallPapers {
}

///////////////////////////////////////////////////////////////////////////////
// account.reportPeer#ae189d5f peer:InputPeer reason:ReportReason = Bool;
message TL_account_reportPeer {
    InputPeer peer = 1;
    ReportReason reason = 2;
}

///////////////////////////////////////////////////////////////////////////////
// account.checkUsername#2714d86c username:string = Bool;
message TL_account_checkUsername {
    string username = 1;
}

///////////////////////////////////////////////////////////////////////////////
// account.updateUsername#3e0bdd7c username:string = User;
message TL_account_updateUsername {
    string username = 1;
}

///////////////////////////////////////////////////////////////////////////////
// account.getPrivacy#dadbc950 key:InputPrivacyKey = account.PrivacyRules;
message TL_account_getPrivacy {
    InputPrivacyKey key = 1;
}

///////////////////////////////////////////////////////////////////////////////
// account.setPrivacy#c9f81ce8 key:InputPrivacyKey rules:Vector<InputPrivacyRule> = account.PrivacyRules;
message TL_account_setPrivacy {
    InputPrivacyKey key = 1;
    repeated InputPrivacyRule rules = 2;
}

///////////////////////////////////////////////////////////////////////////////
// account.deleteAccount#418d4e0b reason:string = Bool;
message TL_account_deleteAccount {
    string reason = 1;
}

///////////////////////////////////////////////////////////////////////////////
// account.getAccountTTL#8fc711d = AccountDaysTTL;
message TL_account_getAccountTTL {
}

///////////////////////////////////////////////////////////////////////////////
// account.setAccountTTL#2442485e ttl:AccountDaysTTL = Bool;
message TL_account_setAccountTTL {
    AccountDaysTTL ttl = 1;
}

///////////////////////////////////////////////////////////////////////////////
// account.sendChangePhoneCode#8e57deb flags:# allow_flashcall:flags.0?true phone_number:string current_number:flags.0?Bool = auth.SentCode;
message TL_account_sendChangePhoneCode {
    bool allow_flashcall = 2;
    string phone_number = 3;
    Bool current_number = 4;
}

///////////////////////////////////////////////////////////////////////////////
// account.changePhone#70c32edb phone_number:string phone_code_hash:string phone_code:string = User;
message TL_account_changePhone {
    string phone_number = 1;
    string phone_code_hash = 2;
    string phone_code = 3;
}

///////////////////////////////////////////////////////////////////////////////
// account.updateDeviceLocked#38df3532 period:int = Bool;
message TL_account_updateDeviceLocked {
    int32 period = 1;
}

///////////////////////////////////////////////////////////////////////////////
// account.getAuthorizations#e320c158 = account.Authorizations;
message TL_account_getAuthorizations {
}

///////////////////////////////////////////////////////////////////////////////
// account.resetAuthorization#df77f3bc hash:long = Bool;
message TL_account_resetAuthorization {
    int64 hash = 1;
}

///////////////////////////////////////////////////////////////////////////////
// account.getPassword#548a30f5 = account.Password;
message TL_account_getPassword {
}

///////////////////////////////////////////////////////////////////////////////
// account.getPasswordSettings#9cd4eaf9 password:InputCheckPasswordSRP = account.PasswordSettings;
message TL_account_getPasswordSettings {
    InputCheckPasswordSRP password = 1;
}

///////////////////////////////////////////////////////////////////////////////
// account.updatePasswordSettings#a59b102f password:InputCheckPasswordSRP new_settings:account.PasswordInputSettings = Bool;
message TL_account_updatePasswordSettings {
    InputCheckPasswordSRP password = 1;
    account_PasswordInputSettings new_settings = 2;
}

///////////////////////////////////////////////////////////////////////////////
// account.sendConfirmPhoneCode#1516d7bd flags:# allow_flashcall:flags.0?true hash:string current_number:flags.0?Bool = auth.SentCode;
message TL_account_sendConfirmPhoneCode {
    bool allow_flashcall = 2;
    string hash = 3;
    Bool current_number = 4;
}

///////////////////////////////////////////////////////////////////////////////
// account.confirmPhone#5f2178c3 phone_code_hash:string phone_code:string = Bool;
message TL_account_confirmPhone {
    string phone_code_hash = 1;
    string phone_code = 2;
}

///////////////////////////////////////////////////////////////////////////////
// account.getTmpPassword#449e0b51 password:InputCheckPasswordSRP period:int = account.TmpPassword;
message TL_account_getTmpPassword {
    InputCheckPasswordSRP password = 1;
    int32 period = 2;
}

///////////////////////////////////////////////////////////////////////////////
// account.getWebAuthorizations#182e6d6f = account.WebAuthorizations;
message TL_account_getWebAuthorizations {
}

///////////////////////////////////////////////////////////////////////////////
// account.resetWebAuthorization#2d01b9ef hash:long = Bool;
message TL_account_resetWebAuthorization {
    int64 hash = 1;
}

///////////////////////////////////////////////////////////////////////////////
// account.resetWebAuthorizations#682d2594 = Bool;
message TL_account_resetWebAuthorizations {
}

///////////////////////////////////////////////////////////////////////////////
// account.getAllSecureValues#b288bc7d = Vector<SecureValue>;
message TL_account_getAllSecureValues {
}

///////////////////////////////////////////////////////////////////////////////
// account.getSecureValue#73665bc2 types:Vector<SecureValueType> = Vector<SecureValue>;
message TL_account_getSecureValue {
    repeated SecureValueType types = 1;
}

///////////////////////////////////////////////////////////////////////////////
// account.saveSecureValue#899fe31d value:InputSecureValue secure_secret_id:long = SecureValue;
message TL_account_saveSecureValue {
    InputSecureValue value = 1;
    int64 secure_secret_id = 2;
}

///////////////////////////////////////////////////////////////////////////////
// account.deleteSecureValue#b880bc4b types:Vector<SecureValueType> = Bool;
message TL_account_deleteSecureValue {
    repeated SecureValueType types = 1;
}

///////////////////////////////////////////////////////////////////////////////
// account.getAuthorizationForm#b86ba8e1 bot_id:int scope:string public_key:string = account.AuthorizationForm;
message TL_account_getAuthorizationForm {
    int32 bot_id = 1;
    string scope = 2;
    string public_key = 3;
}

///////////////////////////////////////////////////////////////////////////////
// account.acceptAuthorization#e7027c94 bot_id:int scope:string public_key:string value_hashes:Vector<SecureValueHash> credentials:SecureCredentialsEncrypted = Bool;
message TL_account_acceptAuthorization {
    int32 bot_id = 1;
    string scope = 2;
    string public_key = 3;
    repeated SecureValueHash value_hashes = 4;
    SecureCredentialsEncrypted credentials = 5;
}

///////////////////////////////////////////////////////////////////////////////
// account.sendVerifyPhoneCode#823380b4 flags:# allow_flashcall:flags.0?true phone_number:string current_number:flags.0?Bool = auth.SentCode;
message TL_account_sendVerifyPhoneCode {
    bool allow_flashcall = 2;
    string phone_number = 3;
    Bool current_number = 4;
}

///////////////////////////////////////////////////////////////////////////////
// account.verifyPhone#4dd3a7f6 phone_number:string phone_code_hash:string phone_code:string = Bool;
message TL_account_verifyPhone {
    string phone_number = 1;
    string phone_code_hash = 2;
    string phone_code = 3;
}

///////////////////////////////////////////////////////////////////////////////
// account.sendVerifyEmailCode#7011509f email:string = account.SentEmailCode;
message TL_account_sendVerifyEmailCode {
    string email = 1;
}

///////////////////////////////////////////////////////////////////////////////
// account.verifyEmail#ecba39db email:string code:string = Bool;
message TL_account_verifyEmail {
    string email = 1;
    string code = 2;
}

///////////////////////////////////////////////////////////////////////////////
// account.initTakeoutSession#f05b4804 flags:# contacts:flags.0?true message_users:flags.1?true message_chats:flags.2?true message_megagroups:flags.3?true message_channels:flags.4?true files:flags.5?true file_max_size:flags.5?int = account.Takeout;
message TL_account_initTakeoutSession {
    bool contacts = 2;
    bool message_users = 3;
    bool message_chats = 4;
    bool message_megagroups = 5;
    bool message_channels = 6;
    bool files = 7;
    int32 file_max_size = 8;
}

///////////////////////////////////////////////////////////////////////////////
// account.finishTakeoutSession#1d2652ee flags:# success:flags.0?true = Bool;
message TL_account_finishTakeoutSession {
    bool success = 2;
}

///////////////////////////////////////////////////////////////////////////////
// users.getUsers#d91a548 id:Vector<InputUser> = Vector<User>;
message TL_users_getUsers {
    repeated InputUser id = 1;
}

///////////////////////////////////////////////////////////////////////////////
// users.getFullUser#ca30a5b1 id:InputUser = UserFull;
message TL_users_getFullUser {
    InputUser id = 1;
}

///////////////////////////////////////////////////////////////////////////////
// users.setSecureValueErrors#90c894b5 id:InputUser errors:Vector<SecureValueError> = Bool;
message TL_users_setSecureValueErrors {
    InputUser id = 1;
    repeated SecureValueError errors = 2;
}

///////////////////////////////////////////////////////////////////////////////
// contacts.getStatuses#c4a353ee = Vector<ContactStatus>;
message TL_contacts_getStatuses {
}

///////////////////////////////////////////////////////////////////////////////
// contacts.getContacts#c023849f hash:int = contacts.Contacts;
message TL_contacts_getContacts {
    int32 hash = 1;
}

///////////////////////////////////////////////////////////////////////////////
// contacts.importContacts#2c800be5 contacts:Vector<InputContact> = contacts.ImportedContacts;
message TL_contacts_importContacts {
    repeated InputContact contacts = 1;
}

///////////////////////////////////////////////////////////////////////////////
// contacts.deleteContact#8e953744 id:InputUser = contacts.Link;
message TL_contacts_deleteContact {
    InputUser id = 1;
}

///////////////////////////////////////////////////////////////////////////////
// contacts.deleteContacts#59ab389e id:Vector<InputUser> = Bool;
message TL_contacts_deleteContacts {
    repeated InputUser id = 1;
}

///////////////////////////////////////////////////////////////////////////////
// contacts.block#332b49fc id:InputUser = Bool;
message TL_contacts_block {
    InputUser id = 1;
}

///////////////////////////////////////////////////////////////////////////////
// contacts.unblock#e54100bd id:InputUser = Bool;
message TL_contacts_unblock {
    InputUser id = 1;
}

///////////////////////////////////////////////////////////////////////////////
// contacts.getBlocked#f57c350f offset:int limit:int = contacts.Blocked;
message TL_contacts_getBlocked {
    int32 offset = 1;
    int32 limit = 2;
}

///////////////////////////////////////////////////////////////////////////////
// contacts.exportCard#84e53737 = Vector<int>;
message TL_contacts_exportCard {
}

///////////////////////////////////////////////////////////////////////////////
// contacts.importCard#4fe196fe export_card:Vector<int> = User;
message TL_contacts_importCard {
    repeated int32 export_card = 1;
}

///////////////////////////////////////////////////////////////////////////////
// contacts.search#11f812d8 q:string limit:int = contacts.Found;
message TL_contacts_search {
    string q = 1;
    int32 limit = 2;
}

///////////////////////////////////////////////////////////////////////////////
// contacts.resolveUsername#f93ccba3 username:string = contacts.ResolvedPeer;
message TL_contacts_resolveUsername {
    string username = 1;
}

///////////////////////////////////////////////////////////////////////////////
// contacts.getTopPeers#d4982db5 flags:# correspondents:flags.0?true bots_pm:flags.1?true bots_inline:flags.2?true phone_calls:flags.3?true groups:flags.10?true channels:flags.15?true offset:int limit:int hash:int = contacts.TopPeers;
message TL_contacts_getTopPeers {
    bool correspondents = 2;
    bool bots_pm = 3;
    bool bots_inline = 4;
    bool phone_calls = 5;
    bool groups = 6;
    bool channels = 7;
    int32 offset = 8;
    int32 limit = 9;
    int32 hash = 10;
}

///////////////////////////////////////////////////////////////////////////////
// contacts.resetTopPeerRating#1ae373ac category:TopPeerCategory peer:InputPeer = Bool;
message TL_contacts_resetTopPeerRating {
    TopPeerCategory category = 1;
    InputPeer peer = 2;
}

///////////////////////////////////////////////////////////////////////////////
// contacts.resetSaved#879537f1 = Bool;
message TL_contacts_resetSaved {
}

///////////////////////////////////////////////////////////////////////////////
// contacts.getSaved#82f1e39f = Vector<SavedContact>;
message TL_contacts_getSaved {
}

///////////////////////////////////////////////////////////////////////////////
// contacts.toggleTopPeers#8514bdda enabled:Bool = Bool;
message TL_contacts_toggleTopPeers {
    Bool enabled = 1;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getMessages#63c66506 id:Vector<InputMessage> = messages.Messages;
message TL_messages_getMessages {
    repeated InputMessage id = 1;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getDialogs#b098aee6 flags:# exclude_pinned:flags.0?true offset_date:int offset_id:int offset_peer:InputPeer limit:int hash:int = messages.Dialogs;
message TL_messages_getDialogs {
    bool exclude_pinned = 2;
    int32 offset_date = 3;
    int32 offset_id = 4;
    InputPeer offset_peer = 5;
    int32 limit = 6;
    int32 hash = 7;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getHistory#dcbb8260 peer:InputPeer offset_id:int offset_date:int add_offset:int limit:int max_id:int min_id:int hash:int = messages.Messages;
message TL_messages_getHistory {
    InputPeer peer = 1;
    int32 offset_id = 2;
    int32 offset_date = 3;
    int32 add_offset = 4;
    int32 limit = 5;
    int32 max_id = 6;
    int32 min_id = 7;
    int32 hash = 8;
}

///////////////////////////////////////////////////////////////////////////////
// messages.search#8614ef68 flags:# peer:InputPeer q:string from_id:flags.0?InputUser filter:MessagesFilter min_date:int max_date:int offset_id:int add_offset:int limit:int max_id:int min_id:int hash:int = messages.Messages;
message TL_messages_search {
    InputPeer peer = 2;
    string q = 3;
    InputUser from_id = 4;
    MessagesFilter filter = 5;
    int32 min_date = 6;
    int32 max_date = 7;
    int32 offset_id = 8;
    int32 add_offset = 9;
    int32 limit = 10;
    int32 max_id = 11;
    int32 min_id = 12;
    int32 hash = 13;
}

///////////////////////////////////////////////////////////////////////////////
// messages.readHistory#e306d3a peer:InputPeer max_id:int = messages.AffectedMessages;
message TL_messages_readHistory {
    InputPeer peer = 1;
    int32 max_id = 2;
}

///////////////////////////////////////////////////////////////////////////////
// messages.deleteHistory#1c015b09 flags:# just_clear:flags.0?true peer:InputPeer max_id:int = messages.AffectedHistory;
message TL_messages_deleteHistory {
    bool just_clear = 2;
    InputPeer peer = 3;
    int32 max_id = 4;
}

///////////////////////////////////////////////////////////////////////////////
// messages.deleteMessages#e58e95d2 flags:# revoke:flags.0?true id:Vector<int> = messages.AffectedMessages;
message TL_messages_deleteMessages {
    bool revoke = 2;
    repeated int32 id = 3;
}

///////////////////////////////////////////////////////////////////////////////
// messages.receivedMessages#5a954c0 max_id:int = Vector<ReceivedNotifyMessage>;
message TL_messages_receivedMessages {
    int32 max_id = 1;
}

///////////////////////////////////////////////////////////////////////////////
// messages.setTyping#a3825e50 peer:InputPeer action:SendMessageAction = Bool;
message TL_messages_setTyping {
    InputPeer peer = 1;
    SendMessageAction action = 2;
}

///////////////////////////////////////////////////////////////////////////////
// messages.sendMessage#fa88427a flags:# no_webpage:flags.1?true silent:flags.5?true background:flags.6?true clear_draft:flags.7?true peer:InputPeer reply_to_msg_id:flags.0?int message:string random_id:long reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> = Updates;
message TL_messages_sendMessage {
    bool no_webpage = 2;
    bool silent = 3;
    bool background = 4;
    bool clear_draft = 5;
    InputPeer peer = 6;
    int32 reply_to_msg_id = 7;
    string message = 8;
    int64 random_id = 9;
    ReplyMarkup reply_markup = 10;
    repeated MessageEntity entities = 11;
}

///////////////////////////////////////////////////////////////////////////////
// messages.sendMedia#b8d1262b flags:# silent:flags.5?true background:flags.6?true clear_draft:flags.7?true peer:InputPeer reply_to_msg_id:flags.0?int media:InputMedia message:string random_id:long reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> = Updates;
message TL_messages_sendMedia {
    bool silent = 2;
    bool background = 3;
    bool clear_draft = 4;
    InputPeer peer = 5;
    int32 reply_to_msg_id = 6;
    InputMedia media = 7;
    string message = 8;
    int64 random_id = 9;
    ReplyMarkup reply_markup = 10;
    repeated MessageEntity entities = 11;
}

///////////////////////////////////////////////////////////////////////////////
// messages.forwardMessages#708e0195 flags:# silent:flags.5?true background:flags.6?true with_my_score:flags.8?true grouped:flags.9?true from_peer:InputPeer id:Vector<int> random_id:Vector<long> to_peer:InputPeer = Updates;
message TL_messages_forwardMessages {
    bool silent = 2;
    bool background = 3;
    bool with_my_score = 4;
    bool grouped = 5;
    InputPeer from_peer = 6;
    repeated int32 id = 7;
    repeated int64 random_id = 8;
    InputPeer to_peer = 9;
}

///////////////////////////////////////////////////////////////////////////////
// messages.reportSpam#cf1592db peer:InputPeer = Bool;
message TL_messages_reportSpam {
    InputPeer peer = 1;
}

///////////////////////////////////////////////////////////////////////////////
// messages.hideReportSpam#a8f1709b peer:InputPeer = Bool;
message TL_messages_hideReportSpam {
    InputPeer peer = 1;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getPeerSettings#3672e09c peer:InputPeer = PeerSettings;
message TL_messages_getPeerSettings {
    InputPeer peer = 1;
}

///////////////////////////////////////////////////////////////////////////////
// messages.report#bd82b658 peer:InputPeer id:Vector<int> reason:ReportReason = Bool;
message TL_messages_report {
    InputPeer peer = 1;
    repeated int32 id = 2;
    ReportReason reason = 3;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getChats#3c6aa187 id:Vector<int> = messages.Chats;
message TL_messages_getChats {
    repeated int32 id = 1;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getFullChat#3b831c66 chat_id:int = messages.ChatFull;
message TL_messages_getFullChat {
    int32 chat_id = 1;
}

///////////////////////////////////////////////////////////////////////////////
// messages.editChatTitle#dc452855 chat_id:int title:string = Updates;
message TL_messages_editChatTitle {
    int32 chat_id = 1;
    string title = 2;
}

///////////////////////////////////////////////////////////////////////////////
// messages.editChatPhoto#ca4c79d8 chat_id:int photo:InputChatPhoto = Updates;
message TL_messages_editChatPhoto {
    int32 chat_id = 1;
    InputChatPhoto photo = 2;
}

///////////////////////////////////////////////////////////////////////////////
// messages.addChatUser#f9a0aa09 chat_id:int user_id:InputUser fwd_limit:int = Updates;
message TL_messages_addChatUser {
    int32 chat_id = 1;
    InputUser user_id = 2;
    int32 fwd_limit = 3;
}

///////////////////////////////////////////////////////////////////////////////
// messages.deleteChatUser#e0611f16 chat_id:int user_id:InputUser = Updates;
message TL_messages_deleteChatUser {
    int32 chat_id = 1;
    InputUser user_id = 2;
}

///////////////////////////////////////////////////////////////////////////////
// messages.createChat#9cb126e users:Vector<InputUser> title:string = Updates;
message TL_messages_createChat {
    repeated InputUser users = 1;
    string title = 2;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getDhConfig#26cf8950 version:int random_length:int = messages.DhConfig;
message TL_messages_getDhConfig {
    int32 version = 1;
    int32 random_length = 2;
}

///////////////////////////////////////////////////////////////////////////////
// messages.requestEncryption#f64daf43 user_id:InputUser random_id:int g_a:bytes = EncryptedChat;
message TL_messages_requestEncryption {
    InputUser user_id = 1;
    int32 random_id = 2;
    bytes g_a = 3;
}

///////////////////////////////////////////////////////////////////////////////
// messages.acceptEncryption#3dbc0415 peer:InputEncryptedChat g_b:bytes key_fingerprint:long = EncryptedChat;
message TL_messages_acceptEncryption {
    InputEncryptedChat peer = 1;
    bytes g_b = 2;
    int64 key_fingerprint = 3;
}

///////////////////////////////////////////////////////////////////////////////
// messages.discardEncryption#edd923c5 chat_id:int = Bool;
message TL_messages_discardEncryption {
    int32 chat_id = 1;
}

///////////////////////////////////////////////////////////////////////////////
// messages.setEncryptedTyping#791451ed peer:InputEncryptedChat typing:Bool = Bool;
message TL_messages_setEncryptedTyping {
    InputEncryptedChat peer = 1;
    Bool typing = 2;
}

///////////////////////////////////////////////////////////////////////////////
// messages.readEncryptedHistory#7f4b690a peer:InputEncryptedChat max_date:int = Bool;
message TL_messages_readEncryptedHistory {
    InputEncryptedChat peer = 1;
    int32 max_date = 2;
}

///////////////////////////////////////////////////////////////////////////////
// messages.sendEncrypted#a9776773 peer:InputEncryptedChat random_id:long data:bytes = messages.SentEncryptedMessage;
message TL_messages_sendEncrypted {
    InputEncryptedChat peer = 1;
    int64 random_id = 2;
    bytes data = 3;
}

///////////////////////////////////////////////////////////////////////////////
// messages.sendEncryptedFile#9a901b66 peer:InputEncryptedChat random_id:long data:bytes file:InputEncryptedFile = messages.SentEncryptedMessage;
message TL_messages_sendEncryptedFile {
    InputEncryptedChat peer = 1;
    int64 random_id = 2;
    bytes data = 3;
    InputEncryptedFile file = 4;
}

///////////////////////////////////////////////////////////////////////////////
// messages.sendEncryptedService#32d439a4 peer:InputEncryptedChat random_id:long data:bytes = messages.SentEncryptedMessage;
message TL_messages_sendEncryptedService {
    InputEncryptedChat peer = 1;
    int64 random_id = 2;
    bytes data = 3;
}

///////////////////////////////////////////////////////////////////////////////
// messages.receivedQueue#55a5bb66 max_qts:int = Vector<long>;
message TL_messages_receivedQueue {
    int32 max_qts = 1;
}

///////////////////////////////////////////////////////////////////////////////
// messages.reportEncryptedSpam#4b0c8c0f peer:InputEncryptedChat = Bool;
message TL_messages_reportEncryptedSpam {
    InputEncryptedChat peer = 1;
}

///////////////////////////////////////////////////////////////////////////////
// messages.readMessageContents#36a73f77 id:Vector<int> = messages.AffectedMessages;
message TL_messages_readMessageContents {
    repeated int32 id = 1;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getStickers#43d4f2c emoticon:string hash:int = messages.Stickers;
message TL_messages_getStickers {
    string emoticon = 1;
    int32 hash = 2;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getAllStickers#1c9618b1 hash:int = messages.AllStickers;
message TL_messages_getAllStickers {
    int32 hash = 1;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getWebPagePreview#8b68b0cc flags:# message:string entities:flags.3?Vector<MessageEntity> = MessageMedia;
message TL_messages_getWebPagePreview {
    string message = 2;
    repeated MessageEntity entities = 3;
}

///////////////////////////////////////////////////////////////////////////////
// messages.exportChatInvite#7d885289 chat_id:int = ExportedChatInvite;
message TL_messages_exportChatInvite {
    int32 chat_id = 1;
}

///////////////////////////////////////////////////////////////////////////////
// messages.checkChatInvite#3eadb1bb hash:string = ChatInvite;
message TL_messages_checkChatInvite {
    string hash = 1;
}

///////////////////////////////////////////////////////////////////////////////
// messages.importChatInvite#6c50051c hash:string = Updates;
message TL_messages_importChatInvite {
    string hash = 1;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getStickerSet#2619a90e stickerset:InputStickerSet = messages.StickerSet;
message TL_messages_getStickerSet {
    InputStickerSet stickerset = 1;
}

///////////////////////////////////////////////////////////////////////////////
// messages.installStickerSet#c78fe460 stickerset:InputStickerSet archived:Bool = messages.StickerSetInstallResult;
message TL_messages_installStickerSet {
    InputStickerSet stickerset = 1;
    Bool archived = 2;
}

///////////////////////////////////////////////////////////////////////////////
// messages.uninstallStickerSet#f96e55de stickerset:InputStickerSet = Bool;
message TL_messages_uninstallStickerSet {
    InputStickerSet stickerset = 1;
}

///////////////////////////////////////////////////////////////////////////////
// messages.startBot#e6df7378 bot:InputUser peer:InputPeer random_id:long start_param:string = Updates;
message TL_messages_startBot {
    InputUser bot = 1;
    InputPeer peer = 2;
    int64 random_id = 3;
    string start_param = 4;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getMessagesViews#c4c8a55d peer:InputPeer id:Vector<int> increment:Bool = Vector<int>;
message TL_messages_getMessagesViews {
    InputPeer peer = 1;
    repeated int32 id = 2;
    Bool increment = 3;
}

///////////////////////////////////////////////////////////////////////////////
// messages.toggleChatAdmins#ec8bd9e1 chat_id:int enabled:Bool = Updates;
message TL_messages_toggleChatAdmins {
    int32 chat_id = 1;
    Bool enabled = 2;
}

///////////////////////////////////////////////////////////////////////////////
// messages.editChatAdmin#a9e69f2e chat_id:int user_id:InputUser is_admin:Bool = Bool;
message TL_messages_editChatAdmin {
    int32 chat_id = 1;
    InputUser user_id = 2;
    Bool is_admin = 3;
}

///////////////////////////////////////////////////////////////////////////////
// messages.migrateChat#15a3b8e3 chat_id:int = Updates;
message TL_messages_migrateChat {
    int32 chat_id = 1;
}

///////////////////////////////////////////////////////////////////////////////
// messages.searchGlobal#9e3cacb0 q:string offset_date:int offset_peer:InputPeer offset_id:int limit:int = messages.Messages;
message TL_messages_searchGlobal {
    string q = 1;
    int32 offset_date = 2;
    InputPeer offset_peer = 3;
    int32 offset_id = 4;
    int32 limit = 5;
}

///////////////////////////////////////////////////////////////////////////////
// messages.reorderStickerSets#78337739 flags:# masks:flags.0?true order:Vector<long> = Bool;
message TL_messages_reorderStickerSets {
    bool masks = 2;
    repeated int64 order = 3;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getDocumentByHash#338e2464 sha256:bytes size:int mime_type:string = Document;
message TL_messages_getDocumentByHash {
    bytes sha256 = 1;
    int32 size = 2;
    string mime_type = 3;
}

///////////////////////////////////////////////////////////////////////////////
// messages.searchGifs#bf9a776b q:string offset:int = messages.FoundGifs;
message TL_messages_searchGifs {
    string q = 1;
    int32 offset = 2;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getSavedGifs#83bf3d52 hash:int = messages.SavedGifs;
message TL_messages_getSavedGifs {
    int32 hash = 1;
}

///////////////////////////////////////////////////////////////////////////////
// messages.saveGif#327a30cb id:InputDocument unsave:Bool = Bool;
message TL_messages_saveGif {
    InputDocument id = 1;
    Bool unsave = 2;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getInlineBotResults#514e999d flags:# bot:InputUser peer:InputPeer geo_point:flags.0?InputGeoPoint query:string offset:string = messages.BotResults;
message TL_messages_getInlineBotResults {
    InputUser bot = 2;
    InputPeer peer = 3;
    InputGeoPoint geo_point = 4;
    string query = 5;
    string offset = 6;
}

///////////////////////////////////////////////////////////////////////////////
// messages.setInlineBotResults#eb5ea206 flags:# gallery:flags.0?true private:flags.1?true query_id:long results:Vector<InputBotInlineResult> cache_time:int next_offset:flags.2?string switch_pm:flags.3?InlineBotSwitchPM = Bool;
message TL_messages_setInlineBotResults {
    bool gallery = 2;
    bool private = 3;
    int64 query_id = 4;
    repeated InputBotInlineResult results = 5;
    int32 cache_time = 6;
    string next_offset = 7;
    InlineBotSwitchPM switch_pm = 8;
}

///////////////////////////////////////////////////////////////////////////////
// messages.sendInlineBotResult#b16e06fe flags:# silent:flags.5?true background:flags.6?true clear_draft:flags.7?true peer:InputPeer reply_to_msg_id:flags.0?int random_id:long query_id:long id:string = Updates;
message TL_messages_sendInlineBotResult {
    bool silent = 2;
    bool background = 3;
    bool clear_draft = 4;
    InputPeer peer = 5;
    int32 reply_to_msg_id = 6;
    int64 random_id = 7;
    int64 query_id = 8;
    string id = 9;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getMessageEditData#fda68d36 peer:InputPeer id:int = messages.MessageEditData;
message TL_messages_getMessageEditData {
    InputPeer peer = 1;
    int32 id = 2;
}

///////////////////////////////////////////////////////////////////////////////
// messages.editMessage#c000e4c8 flags:# no_webpage:flags.1?true stop_geo_live:flags.12?true peer:InputPeer id:int message:flags.11?string media:flags.14?InputMedia reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> geo_point:flags.13?InputGeoPoint = Updates;
message TL_messages_editMessage {
    bool no_webpage = 2;
    bool stop_geo_live = 3;
    InputPeer peer = 4;
    int32 id = 5;
    string message = 6;
    InputMedia media = 7;
    ReplyMarkup reply_markup = 8;
    repeated MessageEntity entities = 9;
    InputGeoPoint geo_point = 10;
}

///////////////////////////////////////////////////////////////////////////////
// messages.editInlineBotMessage#adc3e828 flags:# no_webpage:flags.1?true stop_geo_live:flags.12?true id:InputBotInlineMessageID message:flags.11?string media:flags.14?InputMedia reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> geo_point:flags.13?InputGeoPoint = Bool;
message TL_messages_editInlineBotMessage {
    bool no_webpage = 2;
    bool stop_geo_live = 3;
    InputBotInlineMessageID id = 4;
    string message = 5;
    InputMedia media = 6;
    ReplyMarkup reply_markup = 7;
    repeated MessageEntity entities = 8;
    InputGeoPoint geo_point = 9;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getBotCallbackAnswer#810a9fec flags:# game:flags.1?true peer:InputPeer msg_id:int data:flags.0?bytes = messages.BotCallbackAnswer;
message TL_messages_getBotCallbackAnswer {
    bool game = 2;
    InputPeer peer = 3;
    int32 msg_id = 4;
    bytes data = 5;
}

///////////////////////////////////////////////////////////////////////////////
// messages.setBotCallbackAnswer#d58f130a flags:# alert:flags.1?true query_id:long message:flags.0?string url:flags.2?string cache_time:int = Bool;
message TL_messages_setBotCallbackAnswer {
    bool alert = 2;
    int64 query_id = 3;
    string message = 4;
    string url = 5;
    int32 cache_time = 6;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getPeerDialogs#e470bcfd peers:Vector<InputDialogPeer> = messages.PeerDialogs;
message TL_messages_getPeerDialogs {
    repeated InputDialogPeer peers = 1;
}

///////////////////////////////////////////////////////////////////////////////
// messages.saveDraft#bc39e14b flags:# no_webpage:flags.1?true reply_to_msg_id:flags.0?int peer:InputPeer message:string entities:flags.3?Vector<MessageEntity> = Bool;
message TL_messages_saveDraft {
    bool no_webpage = 2;
    int32 reply_to_msg_id = 3;
    InputPeer peer = 4;
    string message = 5;
    repeated MessageEntity entities = 6;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getAllDrafts#6a3f8d65 = Updates;
message TL_messages_getAllDrafts {
}

///////////////////////////////////////////////////////////////////////////////
// messages.getFeaturedStickers#2dacca4f hash:int = messages.FeaturedStickers;
message TL_messages_getFeaturedStickers {
    int32 hash = 1;
}

///////////////////////////////////////////////////////////////////////////////
// messages.readFeaturedStickers#5b118126 id:Vector<long> = Bool;
message TL_messages_readFeaturedStickers {
    repeated int64 id = 1;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getRecentStickers#5ea192c9 flags:# attached:flags.0?true hash:int = messages.RecentStickers;
message TL_messages_getRecentStickers {
    bool attached = 2;
    int32 hash = 3;
}

///////////////////////////////////////////////////////////////////////////////
// messages.saveRecentSticker#392718f8 flags:# attached:flags.0?true id:InputDocument unsave:Bool = Bool;
message TL_messages_saveRecentSticker {
    bool attached = 2;
    InputDocument id = 3;
    Bool unsave = 4;
}

///////////////////////////////////////////////////////////////////////////////
// messages.clearRecentStickers#8999602d flags:# attached:flags.0?true = Bool;
message TL_messages_clearRecentStickers {
    bool attached = 2;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getArchivedStickers#57f17692 flags:# masks:flags.0?true offset_id:long limit:int = messages.ArchivedStickers;
message TL_messages_getArchivedStickers {
    bool masks = 2;
    int64 offset_id = 3;
    int32 limit = 4;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getMaskStickers#65b8c79f hash:int = messages.AllStickers;
message TL_messages_getMaskStickers {
    int32 hash = 1;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getAttachedStickers#cc5b67cc media:InputStickeredMedia = Vector<StickerSetCovered>;
message TL_messages_getAttachedStickers {
    InputStickeredMedia media = 1;
}

///////////////////////////////////////////////////////////////////////////////
// messages.setGameScore#8ef8ecc0 flags:# edit_message:flags.0?true force:flags.1?true peer:InputPeer id:int user_id:InputUser score:int = Updates;
message TL_messages_setGameScore {
    bool edit_message = 2;
    bool force = 3;
    InputPeer peer = 4;
    int32 id = 5;
    InputUser user_id = 6;
    int32 score = 7;
}

///////////////////////////////////////////////////////////////////////////////
// messages.setInlineGameScore#15ad9f64 flags:# edit_message:flags.0?true force:flags.1?true id:InputBotInlineMessageID user_id:InputUser score:int = Bool;
message TL_messages_setInlineGameScore {
    bool edit_message = 2;
    bool force = 3;
    InputBotInlineMessageID id = 4;
    InputUser user_id = 5;
    int32 score = 6;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getGameHighScores#e822649d peer:InputPeer id:int user_id:InputUser = messages.HighScores;
message TL_messages_getGameHighScores {
    InputPeer peer = 1;
    int32 id = 2;
    InputUser user_id = 3;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getInlineGameHighScores#f635e1b id:InputBotInlineMessageID user_id:InputUser = messages.HighScores;
message TL_messages_getInlineGameHighScores {
    InputBotInlineMessageID id = 1;
    InputUser user_id = 2;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getCommonChats#d0a48c4 user_id:InputUser max_id:int limit:int = messages.Chats;
message TL_messages_getCommonChats {
    InputUser user_id = 1;
    int32 max_id = 2;
    int32 limit = 3;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getAllChats#eba80ff0 except_ids:Vector<int> = messages.Chats;
message TL_messages_getAllChats {
    repeated int32 except_ids = 1;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getWebPage#32ca8f91 url:string hash:int = WebPage;
message TL_messages_getWebPage {
    string url = 1;
    int32 hash = 2;
}

///////////////////////////////////////////////////////////////////////////////
// messages.toggleDialogPin#a731e257 flags:# pinned:flags.0?true peer:InputDialogPeer = Bool;
message TL_messages_toggleDialogPin {
    bool pinned = 2;
    InputDialogPeer peer = 3;
}

///////////////////////////////////////////////////////////////////////////////
// messages.reorderPinnedDialogs#5b51d63f flags:# force:flags.0?true order:Vector<InputDialogPeer> = Bool;
message TL_messages_reorderPinnedDialogs {
    bool force = 2;
    repeated InputDialogPeer order = 3;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getPinnedDialogs#e254d64e = messages.PeerDialogs;
message TL_messages_getPinnedDialogs {
}

///////////////////////////////////////////////////////////////////////////////
// messages.setBotShippingResults#e5f672fa flags:# query_id:long error:flags.0?string shipping_options:flags.1?Vector<ShippingOption> = Bool;
message TL_messages_setBotShippingResults {
    int64 query_id = 2;
    string error = 3;
    repeated ShippingOption shipping_options = 4;
}

///////////////////////////////////////////////////////////////////////////////
// messages.setBotPrecheckoutResults#9c2dd95 flags:# success:flags.1?true query_id:long error:flags.0?string = Bool;
message TL_messages_setBotPrecheckoutResults {
    bool success = 2;
    int64 query_id = 3;
    string error = 4;
}

///////////////////////////////////////////////////////////////////////////////
// messages.uploadMedia#519bc2b1 peer:InputPeer media:InputMedia = MessageMedia;
message TL_messages_uploadMedia {
    InputPeer peer = 1;
    InputMedia media = 2;
}

///////////////////////////////////////////////////////////////////////////////
// messages.sendScreenshotNotification#c97df020 peer:InputPeer reply_to_msg_id:int random_id:long = Updates;
message TL_messages_sendScreenshotNotification {
    InputPeer peer = 1;
    int32 reply_to_msg_id = 2;
    int64 random_id = 3;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getFavedStickers#21ce0b0e hash:int = messages.FavedStickers;
message TL_messages_getFavedStickers {
    int32 hash = 1;
}

///////////////////////////////////////////////////////////////////////////////
// messages.faveSticker#b9ffc55b id:InputDocument unfave:Bool = Bool;
message TL_messages_faveSticker {
    InputDocument id = 1;
    Bool unfave = 2;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getUnreadMentions#46578472 peer:InputPeer offset_id:int add_offset:int limit:int max_id:int min_id:int = messages.Messages;
message TL_messages_getUnreadMentions {
    InputPeer peer = 1;
    int32 offset_id = 2;
    int32 add_offset = 3;
    int32 limit = 4;
    int32 max_id = 5;
    int32 min_id = 6;
}

///////////////////////////////////////////////////////////////////////////////
// messages.readMentions#f0189d3 peer:InputPeer = messages.AffectedHistory;
message TL_messages_readMentions {
    InputPeer peer = 1;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getRecentLocations#bbc45b09 peer:InputPeer limit:int hash:int = messages.Messages;
message TL_messages_getRecentLocations {
    InputPeer peer = 1;
    int32 limit = 2;
    int32 hash = 3;
}

///////////////////////////////////////////////////////////////////////////////
// messages.sendMultiMedia#2095512f flags:# silent:flags.5?true background:flags.6?true clear_draft:flags.7?true peer:InputPeer reply_to_msg_id:flags.0?int multi_media:Vector<InputSingleMedia> = Updates;
message TL_messages_sendMultiMedia {
    bool silent = 2;
    bool background = 3;
    bool clear_draft = 4;
    InputPeer peer = 5;
    int32 reply_to_msg_id = 6;
    repeated InputSingleMedia multi_media = 7;
}

///////////////////////////////////////////////////////////////////////////////
// messages.uploadEncryptedFile#5057c497 peer:InputEncryptedChat file:InputEncryptedFile = EncryptedFile;
message TL_messages_uploadEncryptedFile {
    InputEncryptedChat peer = 1;
    InputEncryptedFile file = 2;
}

///////////////////////////////////////////////////////////////////////////////
// messages.searchStickerSets#c2b7d08b flags:# exclude_featured:flags.0?true q:string hash:int = messages.FoundStickerSets;
message TL_messages_searchStickerSets {
    bool exclude_featured = 2;
    string q = 3;
    int32 hash = 4;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getSplitRanges#1cff7e08 = Vector<MessageRange>;
message TL_messages_getSplitRanges {
}

///////////////////////////////////////////////////////////////////////////////
// messages.markDialogUnread#c286d98f flags:# unread:flags.0?true peer:InputDialogPeer = Bool;
message TL_messages_markDialogUnread {
    bool unread = 2;
    InputDialogPeer peer = 3;
}

///////////////////////////////////////////////////////////////////////////////
// messages.getDialogUnreadMarks#22e24e22 = Vector<DialogPeer>;
message TL_messages_getDialogUnreadMarks {
}

///////////////////////////////////////////////////////////////////////////////
// messages.clearAllDrafts#7e58ee9c = Bool;
message TL_messages_clearAllDrafts {
}

///////////////////////////////////////////////////////////////////////////////
// updates.getState#edd4882a = updates.State;
message TL_updates_getState {
}

///////////////////////////////////////////////////////////////////////////////
// updates.getDifference#25939651 flags:# pts:int pts_total_limit:flags.0?int date:int qts:int = updates.Difference;
message TL_updates_getDifference {
    int32 pts = 2;
    int32 pts_total_limit = 3;
    int32 date = 4;
    int32 qts = 5;
}

///////////////////////////////////////////////////////////////////////////////
// updates.getChannelDifference#3173d78 flags:# force:flags.0?true channel:InputChannel filter:ChannelMessagesFilter pts:int limit:int = updates.ChannelDifference;
message TL_updates_getChannelDifference {
    bool force = 2;
    InputChannel channel = 3;
    ChannelMessagesFilter filter = 4;
    int32 pts = 5;
    int32 limit = 6;
}

///////////////////////////////////////////////////////////////////////////////
// photos.updateProfilePhoto#f0bb5152 id:InputPhoto = UserProfilePhoto;
message TL_photos_updateProfilePhoto {
    InputPhoto id = 1;
}

///////////////////////////////////////////////////////////////////////////////
// photos.uploadProfilePhoto#4f32c098 file:InputFile = photos.Photo;
message TL_photos_uploadProfilePhoto {
    InputFile file = 1;
}

///////////////////////////////////////////////////////////////////////////////
// photos.deletePhotos#87cf7f2f id:Vector<InputPhoto> = Vector<long>;
message TL_photos_deletePhotos {
    repeated InputPhoto id = 1;
}

///////////////////////////////////////////////////////////////////////////////
// photos.getUserPhotos#91cd32a8 user_id:InputUser offset:int max_id:long limit:int = photos.Photos;
message TL_photos_getUserPhotos {
    InputUser user_id = 1;
    int32 offset = 2;
    int64 max_id = 3;
    int32 limit = 4;
}

///////////////////////////////////////////////////////////////////////////////
// upload.saveFilePart#b304a621 file_id:long file_part:int bytes:bytes = Bool;
message TL_upload_saveFilePart {
    int64 file_id = 1;
    int32 file_part = 2;
    bytes bytes = 3;
}

///////////////////////////////////////////////////////////////////////////////
// upload.getFile#e3a6cfb5 location:InputFileLocation offset:int limit:int = upload.File;
message TL_upload_getFile {
    InputFileLocation location = 1;
    int32 offset = 2;
    int32 limit = 3;
}

///////////////////////////////////////////////////////////////////////////////
// upload.saveBigFilePart#de7b673d file_id:long file_part:int file_total_parts:int bytes:bytes = Bool;
message TL_upload_saveBigFilePart {
    int64 file_id = 1;
    int32 file_part = 2;
    int32 file_total_parts = 3;
    bytes bytes = 4;
}

///////////////////////////////////////////////////////////////////////////////
// upload.getWebFile#24e6818d location:InputWebFileLocation offset:int limit:int = upload.WebFile;
message TL_upload_getWebFile {
    InputWebFileLocation location = 1;
    int32 offset = 2;
    int32 limit = 3;
}

///////////////////////////////////////////////////////////////////////////////
// upload.getCdnFile#2000bcc3 file_token:bytes offset:int limit:int = upload.CdnFile;
message TL_upload_getCdnFile {
    bytes file_token = 1;
    int32 offset = 2;
    int32 limit = 3;
}

///////////////////////////////////////////////////////////////////////////////
// upload.reuploadCdnFile#9b2754a8 file_token:bytes request_token:bytes = Vector<FileHash>;
message TL_upload_reuploadCdnFile {
    bytes file_token = 1;
    bytes request_token = 2;
}

///////////////////////////////////////////////////////////////////////////////
// upload.getCdnFileHashes#4da54231 file_token:bytes offset:int = Vector<FileHash>;
message TL_upload_getCdnFileHashes {
    bytes file_token = 1;
    int32 offset = 2;
}

///////////////////////////////////////////////////////////////////////////////
// upload.getFileHashes#c7025931 location:InputFileLocation offset:int = Vector<FileHash>;
message TL_upload_getFileHashes {
    InputFileLocation location = 1;
    int32 offset = 2;
}

///////////////////////////////////////////////////////////////////////////////
// help.getConfig#c4f9186b = Config;
message TL_help_getConfig {
}

///////////////////////////////////////////////////////////////////////////////
// help.getNearestDc#1fb33026 = NearestDc;
message TL_help_getNearestDc {
}

///////////////////////////////////////////////////////////////////////////////
// help.getAppUpdate#522d5a7d source:string = help.AppUpdate;
message TL_help_getAppUpdate {
    string source = 1;
}

///////////////////////////////////////////////////////////////////////////////
// help.saveAppLog#6f02f748 events:Vector<InputAppEvent> = Bool;
message TL_help_saveAppLog {
    repeated InputAppEvent events = 1;
}

///////////////////////////////////////////////////////////////////////////////
// help.getInviteText#4d392343 = help.InviteText;
message TL_help_getInviteText {
}

///////////////////////////////////////////////////////////////////////////////
// help.getSupport#9cdf08cd = help.Support;
message TL_help_getSupport {
}

///////////////////////////////////////////////////////////////////////////////
// help.getAppChangelog#9010ef6f prev_app_version:string = Updates;
message TL_help_getAppChangelog {
    string prev_app_version = 1;
}

///////////////////////////////////////////////////////////////////////////////
// help.setBotUpdatesStatus#ec22cfcd pending_updates_count:int message:string = Bool;
message TL_help_setBotUpdatesStatus {
    int32 pending_updates_count = 1;
    string message = 2;
}

///////////////////////////////////////////////////////////////////////////////
// help.getCdnConfig#52029342 = CdnConfig;
message TL_help_getCdnConfig {
}

///////////////////////////////////////////////////////////////////////////////
// help.getRecentMeUrls#3dc0f114 referer:string = help.RecentMeUrls;
message TL_help_getRecentMeUrls {
    string referer = 1;
}

///////////////////////////////////////////////////////////////////////////////
// help.getProxyData#3d7758e1 = help.ProxyData;
message TL_help_getProxyData {
}

///////////////////////////////////////////////////////////////////////////////
// help.getTermsOfServiceUpdate#2ca51fd1 = help.TermsOfServiceUpdate;
message TL_help_getTermsOfServiceUpdate {
}

///////////////////////////////////////////////////////////////////////////////
// help.acceptTermsOfService#ee72f79a id:DataJSON = Bool;
message TL_help_acceptTermsOfService {
    DataJSON id = 1;
}

///////////////////////////////////////////////////////////////////////////////
// help.getDeepLinkInfo#3fedc75f path:string = help.DeepLinkInfo;
message TL_help_getDeepLinkInfo {
    string path = 1;
}

///////////////////////////////////////////////////////////////////////////////
// help.getPassportConfig#c661ad08 hash:int = help.PassportConfig;
message TL_help_getPassportConfig {
    int32 hash = 1;
}

///////////////////////////////////////////////////////////////////////////////
// channels.readHistory#cc104937 channel:InputChannel max_id:int = Bool;
message TL_channels_readHistory {
    InputChannel channel = 1;
    int32 max_id = 2;
}

///////////////////////////////////////////////////////////////////////////////
// channels.deleteMessages#84c1fd4e channel:InputChannel id:Vector<int> = messages.AffectedMessages;
message TL_channels_deleteMessages {
    InputChannel channel = 1;
    repeated int32 id = 2;
}

///////////////////////////////////////////////////////////////////////////////
// channels.deleteUserHistory#d10dd71b channel:InputChannel user_id:InputUser = messages.AffectedHistory;
message TL_channels_deleteUserHistory {
    InputChannel channel = 1;
    InputUser user_id = 2;
}

///////////////////////////////////////////////////////////////////////////////
// channels.reportSpam#fe087810 channel:InputChannel user_id:InputUser id:Vector<int> = Bool;
message TL_channels_reportSpam {
    InputChannel channel = 1;
    InputUser user_id = 2;
    repeated int32 id = 3;
}

///////////////////////////////////////////////////////////////////////////////
// channels.getMessages#ad8c9a23 channel:InputChannel id:Vector<InputMessage> = messages.Messages;
message TL_channels_getMessages {
    InputChannel channel = 1;
    repeated InputMessage id = 2;
}

///////////////////////////////////////////////////////////////////////////////
// channels.getParticipants#123e05e9 channel:InputChannel filter:ChannelParticipantsFilter offset:int limit:int hash:int = channels.ChannelParticipants;
message TL_channels_getParticipants {
    InputChannel channel = 1;
    ChannelParticipantsFilter filter = 2;
    int32 offset = 3;
    int32 limit = 4;
    int32 hash = 5;
}

///////////////////////////////////////////////////////////////////////////////
// channels.getParticipant#546dd7a6 channel:InputChannel user_id:InputUser = channels.ChannelParticipant;
message TL_channels_getParticipant {
    InputChannel channel = 1;
    InputUser user_id = 2;
}

///////////////////////////////////////////////////////////////////////////////
// channels.getChannels#a7f6bbb id:Vector<InputChannel> = messages.Chats;
message TL_channels_getChannels {
    repeated InputChannel id = 1;
}

///////////////////////////////////////////////////////////////////////////////
// channels.getFullChannel#8736a09 channel:InputChannel = messages.ChatFull;
message TL_channels_getFullChannel {
    InputChannel channel = 1;
}

///////////////////////////////////////////////////////////////////////////////
// channels.createChannel#f4893d7f flags:# broadcast:flags.0?true megagroup:flags.1?true title:string about:string = Updates;
message TL_channels_createChannel {
    bool broadcast = 2;
    bool megagroup = 3;
    string title = 4;
    string about = 5;
}

///////////////////////////////////////////////////////////////////////////////
// channels.editAbout#13e27f1e channel:InputChannel about:string = Bool;
message TL_channels_editAbout {
    InputChannel channel = 1;
    string about = 2;
}

///////////////////////////////////////////////////////////////////////////////
// channels.editAdmin#20b88214 channel:InputChannel user_id:InputUser admin_rights:ChannelAdminRights = Updates;
message TL_channels_editAdmin {
    InputChannel channel = 1;
    InputUser user_id = 2;
    ChannelAdminRights admin_rights = 3;
}

///////////////////////////////////////////////////////////////////////////////
// channels.editTitle#566decd0 channel:InputChannel title:string = Updates;
message TL_channels_editTitle {
    InputChannel channel = 1;
    string title = 2;
}

///////////////////////////////////////////////////////////////////////////////
// channels.editPhoto#f12e57c9 channel:InputChannel photo:InputChatPhoto = Updates;
message TL_channels_editPhoto {
    InputChannel channel = 1;
    InputChatPhoto photo = 2;
}

///////////////////////////////////////////////////////////////////////////////
// channels.checkUsername#10e6bd2c channel:InputChannel username:string = Bool;
message TL_channels_checkUsername {
    InputChannel channel = 1;
    string username = 2;
}

///////////////////////////////////////////////////////////////////////////////
// channels.updateUsername#3514b3de channel:InputChannel username:string = Bool;
message TL_channels_updateUsername {
    InputChannel channel = 1;
    string username = 2;
}

///////////////////////////////////////////////////////////////////////////////
// channels.joinChannel#24b524c5 channel:InputChannel = Updates;
message TL_channels_joinChannel {
    InputChannel channel = 1;
}

///////////////////////////////////////////////////////////////////////////////
// channels.leaveChannel#f836aa95 channel:InputChannel = Updates;
message TL_channels_leaveChannel {
    InputChannel channel = 1;
}

///////////////////////////////////////////////////////////////////////////////
// channels.inviteToChannel#199f3a6c channel:InputChannel users:Vector<InputUser> = Updates;
message TL_channels_inviteToChannel {
    InputChannel channel = 1;
    repeated InputUser users = 2;
}

///////////////////////////////////////////////////////////////////////////////
// channels.exportInvite#c7560885 channel:InputChannel = ExportedChatInvite;
message TL_channels_exportInvite {
    InputChannel channel = 1;
}

///////////////////////////////////////////////////////////////////////////////
// channels.deleteChannel#c0111fe3 channel:InputChannel = Updates;
message TL_channels_deleteChannel {
    InputChannel channel = 1;
}

///////////////////////////////////////////////////////////////////////////////
// channels.toggleInvites#49609307 channel:InputChannel enabled:Bool = Updates;
message TL_channels_toggleInvites {
    InputChannel channel = 1;
    Bool enabled = 2;
}

///////////////////////////////////////////////////////////////////////////////
// channels.exportMessageLink#ceb77163 channel:InputChannel id:int grouped:Bool = ExportedMessageLink;
message TL_channels_exportMessageLink {
    InputChannel channel = 1;
    int32 id = 2;
    Bool grouped = 3;
}

///////////////////////////////////////////////////////////////////////////////
// channels.toggleSignatures#1f69b606 channel:InputChannel enabled:Bool = Updates;
message TL_channels_toggleSignatures {
    InputChannel channel = 1;
    Bool enabled = 2;
}

///////////////////////////////////////////////////////////////////////////////
// channels.updatePinnedMessage#a72ded52 flags:# silent:flags.0?true channel:InputChannel id:int = Updates;
message TL_channels_updatePinnedMessage {
    bool silent = 2;
    InputChannel channel = 3;
    int32 id = 4;
}

///////////////////////////////////////////////////////////////////////////////
// channels.getAdminedPublicChannels#8d8d82d7 = messages.Chats;
message TL_channels_getAdminedPublicChannels {
}

///////////////////////////////////////////////////////////////////////////////
// channels.editBanned#bfd915cd channel:InputChannel user_id:InputUser banned_rights:ChannelBannedRights = Updates;
message TL_channels_editBanned {
    InputChannel channel = 1;
    InputUser user_id = 2;
    ChannelBannedRights banned_rights = 3;
}

///////////////////////////////////////////////////////////////////////////////
// channels.getAdminLog#33ddf480 flags:# channel:InputChannel q:string events_filter:flags.0?ChannelAdminLogEventsFilter admins:flags.1?Vector<InputUser> max_id:long min_id:long limit:int = channels.AdminLogResults;
message TL_channels_getAdminLog {
    InputChannel channel = 2;
    string q = 3;
    ChannelAdminLogEventsFilter events_filter = 4;
    repeated InputUser admins = 5;
    int64 max_id = 6;
    int64 min_id = 7;
    int32 limit = 8;
}

///////////////////////////////////////////////////////////////////////////////
// channels.setStickers#ea8ca4f9 channel:InputChannel stickerset:InputStickerSet = Bool;
message TL_channels_setStickers {
    InputChannel channel = 1;
    InputStickerSet stickerset = 2;
}

///////////////////////////////////////////////////////////////////////////////
// channels.readMessageContents#eab5dc38 channel:InputChannel id:Vector<int> = Bool;
message TL_channels_readMessageContents {
    InputChannel channel = 1;
    repeated int32 id = 2;
}

///////////////////////////////////////////////////////////////////////////////
// channels.deleteHistory#af369d42 channel:InputChannel max_id:int = Bool;
message TL_channels_deleteHistory {
    InputChannel channel = 1;
    int32 max_id = 2;
}

///////////////////////////////////////////////////////////////////////////////
// channels.togglePreHistoryHidden#eabbb94c channel:InputChannel enabled:Bool = Updates;
message TL_channels_togglePreHistoryHidden {
    InputChannel channel = 1;
    Bool enabled = 2;
}

///////////////////////////////////////////////////////////////////////////////
// channels.getLeftChannels#8341ecc0 offset:int = messages.Chats;
message TL_channels_getLeftChannels {
    int32 offset = 1;
}

///////////////////////////////////////////////////////////////////////////////
// bots.sendCustomRequest#aa2769ed custom_method:string params:DataJSON = DataJSON;
message TL_bots_sendCustomRequest {
    string custom_method = 1;
    DataJSON params = 2;
}

///////////////////////////////////////////////////////////////////////////////
// bots.answerWebhookJSONQuery#e6213f4d query_id:long data:DataJSON = Bool;
message TL_bots_answerWebhookJSONQuery {
    int64 query_id = 1;
    DataJSON data = 2;
}

///////////////////////////////////////////////////////////////////////////////
// payments.getPaymentForm#99f09745 msg_id:int = payments.PaymentForm;
message TL_payments_getPaymentForm {
    int32 msg_id = 1;
}

///////////////////////////////////////////////////////////////////////////////
// payments.getPaymentReceipt#a092a980 msg_id:int = payments.PaymentReceipt;
message TL_payments_getPaymentReceipt {
    int32 msg_id = 1;
}

///////////////////////////////////////////////////////////////////////////////
// payments.validateRequestedInfo#770a8e74 flags:# save:flags.0?true msg_id:int info:PaymentRequestedInfo = payments.ValidatedRequestedInfo;
message TL_payments_validateRequestedInfo {
    bool save = 2;
    int32 msg_id = 3;
    PaymentRequestedInfo info = 4;
}

///////////////////////////////////////////////////////////////////////////////
// payments.sendPaymentForm#2b8879b3 flags:# msg_id:int requested_info_id:flags.0?string shipping_option_id:flags.1?string credentials:InputPaymentCredentials = payments.PaymentResult;
message TL_payments_sendPaymentForm {
    int32 msg_id = 2;
    string requested_info_id = 3;
    string shipping_option_id = 4;
    InputPaymentCredentials credentials = 5;
}

///////////////////////////////////////////////////////////////////////////////
// payments.getSavedInfo#227d824b = payments.SavedInfo;
message TL_payments_getSavedInfo {
}

///////////////////////////////////////////////////////////////////////////////
// payments.clearSavedInfo#d83d70c1 flags:# credentials:flags.0?true info:flags.1?true = Bool;
message TL_payments_clearSavedInfo {
    bool credentials = 2;
    bool info = 3;
}

///////////////////////////////////////////////////////////////////////////////
// stickers.createStickerSet#9bd86e6a flags:# masks:flags.0?true user_id:InputUser title:string short_name:string stickers:Vector<InputStickerSetItem> = messages.StickerSet;
message TL_stickers_createStickerSet {
    bool masks = 2;
    InputUser user_id = 3;
    string title = 4;
    string short_name = 5;
    repeated InputStickerSetItem stickers = 6;
}

///////////////////////////////////////////////////////////////////////////////
// stickers.removeStickerFromSet#f7760f51 sticker:InputDocument = messages.StickerSet;
message TL_stickers_removeStickerFromSet {
    InputDocument sticker = 1;
}

///////////////////////////////////////////////////////////////////////////////
// stickers.changeStickerPosition#ffb6d4ca sticker:InputDocument position:int = messages.StickerSet;
message TL_stickers_changeStickerPosition {
    InputDocument sticker = 1;
    int32 position = 2;
}

///////////////////////////////////////////////////////////////////////////////
// stickers.addStickerToSet#8653febe stickerset:InputStickerSet sticker:InputStickerSetItem = messages.StickerSet;
message TL_stickers_addStickerToSet {
    InputStickerSet stickerset = 1;
    InputStickerSetItem sticker = 2;
}

///////////////////////////////////////////////////////////////////////////////
// phone.getCallConfig#55451fa9 = DataJSON;
message TL_phone_getCallConfig {
}

///////////////////////////////////////////////////////////////////////////////
// phone.requestCall#5b95b3d4 user_id:InputUser random_id:int g_a_hash:bytes protocol:PhoneCallProtocol = phone.PhoneCall;
message TL_phone_requestCall {
    InputUser user_id = 1;
    int32 random_id = 2;
    bytes g_a_hash = 3;
    PhoneCallProtocol protocol = 4;
}

///////////////////////////////////////////////////////////////////////////////
// phone.acceptCall#3bd2b4a0 peer:InputPhoneCall g_b:bytes protocol:PhoneCallProtocol = phone.PhoneCall;
message TL_phone_acceptCall {
    InputPhoneCall peer = 1;
    bytes g_b = 2;
    PhoneCallProtocol protocol = 3;
}

///////////////////////////////////////////////////////////////////////////////
// phone.confirmCall#2efe1722 peer:InputPhoneCall g_a:bytes key_fingerprint:long protocol:PhoneCallProtocol = phone.PhoneCall;
message TL_phone_confirmCall {
    InputPhoneCall peer = 1;
    bytes g_a = 2;
    int64 key_fingerprint = 3;
    PhoneCallProtocol protocol = 4;
}

///////////////////////////////////////////////////////////////////////////////
// phone.receivedCall#17d54f61 peer:InputPhoneCall = Bool;
message TL_phone_receivedCall {
    InputPhoneCall peer = 1;
}

///////////////////////////////////////////////////////////////////////////////
// phone.discardCall#78d413a6 peer:InputPhoneCall duration:int reason:PhoneCallDiscardReason connection_id:long = Updates;
message TL_phone_discardCall {
    InputPhoneCall peer = 1;
    int32 duration = 2;
    PhoneCallDiscardReason reason = 3;
    int64 connection_id = 4;
}

///////////////////////////////////////////////////////////////////////////////
// phone.setCallRating#1c536a34 peer:InputPhoneCall rating:int comment:string = Updates;
message TL_phone_setCallRating {
    InputPhoneCall peer = 1;
    int32 rating = 2;
    string comment = 3;
}

///////////////////////////////////////////////////////////////////////////////
// phone.saveCallDebug#277add7e peer:InputPhoneCall debug:DataJSON = Bool;
message TL_phone_saveCallDebug {
    InputPhoneCall peer = 1;
    DataJSON debug = 2;
}

///////////////////////////////////////////////////////////////////////////////
// langpack.getLangPack#f2f2330a lang_pack:string lang_code:string = LangPackDifference;
message TL_langpack_getLangPack {
    string lang_pack = 1;
    string lang_code = 2;
}

///////////////////////////////////////////////////////////////////////////////
// langpack.getStrings#efea3803 lang_pack:string lang_code:string keys:Vector<string> = Vector<LangPackString>;
message TL_langpack_getStrings {
    string lang_pack = 1;
    string lang_code = 2;
    repeated string keys = 3;
}

///////////////////////////////////////////////////////////////////////////////
// langpack.getDifference#b2e4d7d from_version:int = LangPackDifference;
message TL_langpack_getDifference {
    int32 from_version = 1;
}

///////////////////////////////////////////////////////////////////////////////
// langpack.getLanguages#42c6978f lang_pack:string = Vector<LangPackLanguage>;
message TL_langpack_getLanguages {
    string lang_pack = 1;
}


///////////////////////////////////////////////////////////////////////////////
// Vector api result type
message Vector_LangPackLanguage {
    repeated LangPackLanguage datas = 1;
}
message Vector_WallPaper {
    repeated WallPaper datas = 1;
}
message Vector_SecureValue {
    repeated SecureValue datas = 1;
}
message Vector_User {
    repeated User datas = 1;
}
message Vector_ContactStatus {
    repeated ContactStatus datas = 1;
}
message Vector_int {
    repeated int32 datas = 1;
}
message Vector_SavedContact {
    repeated SavedContact datas = 1;
}
message Vector_ReceivedNotifyMessage {
    repeated ReceivedNotifyMessage datas = 1;
}
message Vector_long {
    repeated int64 datas = 1;
}
message Vector_StickerSetCovered {
    repeated StickerSetCovered datas = 1;
}
message Vector_MessageRange {
    repeated MessageRange datas = 1;
}
message Vector_DialogPeer {
    repeated DialogPeer datas = 1;
}
message Vector_FileHash {
    repeated FileHash datas = 1;
}
message Vector_LangPackString {
    repeated LangPackString datas = 1;
}


///////////////////////////////////////////////////////////////////////////////
// rpc

service RPCPhotos {
    // photos.updateProfilePhoto#f0bb5152 id:InputPhoto = UserProfilePhoto;
    rpc photos_updateProfilePhoto(TL_photos_updateProfilePhoto) returns (UserProfilePhoto) {}
    // photos.uploadProfilePhoto#4f32c098 file:InputFile = photos.Photo;
    rpc photos_uploadProfilePhoto(TL_photos_uploadProfilePhoto) returns (photos_Photo) {}
    // photos.deletePhotos#87cf7f2f id:Vector<InputPhoto> = Vector<long>;
    rpc photos_deletePhotos(TL_photos_deletePhotos) returns (Vector_long) {}
    // photos.getUserPhotos#91cd32a8 user_id:InputUser offset:int max_id:long limit:int = photos.Photos;
    rpc photos_getUserPhotos(TL_photos_getUserPhotos) returns (photos_Photos) {}
}

service RPCBots {
    // bots.sendCustomRequest#aa2769ed custom_method:string params:DataJSON = DataJSON;
    rpc bots_sendCustomRequest(TL_bots_sendCustomRequest) returns (DataJSON) {}
    // bots.answerWebhookJSONQuery#e6213f4d query_id:long data:DataJSON = Bool;
    rpc bots_answerWebhookJSONQuery(TL_bots_answerWebhookJSONQuery) returns (Bool) {}
}

service RPCStickers {
    // stickers.createStickerSet#9bd86e6a flags:# masks:flags.0?true user_id:InputUser title:string short_name:string stickers:Vector<InputStickerSetItem> = messages.StickerSet;
    rpc stickers_createStickerSet(TL_stickers_createStickerSet) returns (messages_StickerSet) {}
    // stickers.removeStickerFromSet#f7760f51 sticker:InputDocument = messages.StickerSet;
    rpc stickers_removeStickerFromSet(TL_stickers_removeStickerFromSet) returns (messages_StickerSet) {}
    // stickers.changeStickerPosition#ffb6d4ca sticker:InputDocument position:int = messages.StickerSet;
    rpc stickers_changeStickerPosition(TL_stickers_changeStickerPosition) returns (messages_StickerSet) {}
    // stickers.addStickerToSet#8653febe stickerset:InputStickerSet sticker:InputStickerSetItem = messages.StickerSet;
    rpc stickers_addStickerToSet(TL_stickers_addStickerToSet) returns (messages_StickerSet) {}
}

service RPCPhone {
    // phone.getCallConfig#55451fa9 = DataJSON;
    rpc phone_getCallConfig(TL_phone_getCallConfig) returns (DataJSON) {}
    // phone.requestCall#5b95b3d4 user_id:InputUser random_id:int g_a_hash:bytes protocol:PhoneCallProtocol = phone.PhoneCall;
    rpc phone_requestCall(TL_phone_requestCall) returns (phone_PhoneCall) {}
    // phone.acceptCall#3bd2b4a0 peer:InputPhoneCall g_b:bytes protocol:PhoneCallProtocol = phone.PhoneCall;
    rpc phone_acceptCall(TL_phone_acceptCall) returns (phone_PhoneCall) {}
    // phone.confirmCall#2efe1722 peer:InputPhoneCall g_a:bytes key_fingerprint:long protocol:PhoneCallProtocol = phone.PhoneCall;
    rpc phone_confirmCall(TL_phone_confirmCall) returns (phone_PhoneCall) {}
    // phone.receivedCall#17d54f61 peer:InputPhoneCall = Bool;
    rpc phone_receivedCall(TL_phone_receivedCall) returns (Bool) {}
    // phone.discardCall#78d413a6 peer:InputPhoneCall duration:int reason:PhoneCallDiscardReason connection_id:long = Updates;
    rpc phone_discardCall(TL_phone_discardCall) returns (Updates) {}
    // phone.setCallRating#1c536a34 peer:InputPhoneCall rating:int comment:string = Updates;
    rpc phone_setCallRating(TL_phone_setCallRating) returns (Updates) {}
    // phone.saveCallDebug#277add7e peer:InputPhoneCall debug:DataJSON = Bool;
    rpc phone_saveCallDebug(TL_phone_saveCallDebug) returns (Bool) {}
}

service RPCMessages {
    // messages.readHistory#b04f2510 peer:InputPeer max_id:int offset:int = messages.AffectedHistory;
    rpc messages_readHistoryLayer2(TL_messages_readHistoryLayer2) returns (messages_AffectedHistory) {}
    // messages.getHistory#afa92846 peer:InputPeer offset_id:int offset_date:int add_offset:int limit:int max_id:int min_id:int = messages.Messages;
    rpc messages_getHistoryLayer51(TL_messages_getHistoryLayer51) returns (messages_Messages) {}
    // messages.search#f288a275 flags:# peer:InputPeer q:string from_id:flags.0?InputUser filter:MessagesFilter min_date:int max_date:int offset:int max_id:int limit:int = messages.Messages;
    rpc messages_searchLayer68(TL_messages_searchLayer68) returns (messages_Messages) {}
    // messages.getMessages#4222fa74 id:Vector<int> = messages.Messages;
    rpc messages_getMessagesLayer71(TL_messages_getMessagesLayer71) returns (messages_Messages) {}
    // messages.getMessages#63c66506 id:Vector<InputMessage> = messages.Messages;
    rpc messages_getMessages(TL_messages_getMessages) returns (messages_Messages) {}
    // messages.getDialogs#b098aee6 flags:# exclude_pinned:flags.0?true offset_date:int offset_id:int offset_peer:InputPeer limit:int hash:int = messages.Dialogs;
    rpc messages_getDialogs(TL_messages_getDialogs) returns (messages_Dialogs) {}
    // messages.getHistory#dcbb8260 peer:InputPeer offset_id:int offset_date:int add_offset:int limit:int max_id:int min_id:int hash:int = messages.Messages;
    rpc messages_getHistory(TL_messages_getHistory) returns (messages_Messages) {}
    // messages.search#8614ef68 flags:# peer:InputPeer q:string from_id:flags.0?InputUser filter:MessagesFilter min_date:int max_date:int offset_id:int add_offset:int limit:int max_id:int min_id:int hash:int = messages.Messages;
    rpc messages_search(TL_messages_search) returns (messages_Messages) {}
    // messages.readHistory#e306d3a peer:InputPeer max_id:int = messages.AffectedMessages;
    rpc messages_readHistory(TL_messages_readHistory) returns (messages_AffectedMessages) {}
    // messages.deleteHistory#1c015b09 flags:# just_clear:flags.0?true peer:InputPeer max_id:int = messages.AffectedHistory;
    rpc messages_deleteHistory(TL_messages_deleteHistory) returns (messages_AffectedHistory) {}
    // messages.deleteMessages#e58e95d2 flags:# revoke:flags.0?true id:Vector<int> = messages.AffectedMessages;
    rpc messages_deleteMessages(TL_messages_deleteMessages) returns (messages_AffectedMessages) {}
    // messages.receivedMessages#5a954c0 max_id:int = Vector<ReceivedNotifyMessage>;
    rpc messages_receivedMessages(TL_messages_receivedMessages) returns (Vector_ReceivedNotifyMessage) {}
    // messages.setTyping#a3825e50 peer:InputPeer action:SendMessageAction = Bool;
    rpc messages_setTyping(TL_messages_setTyping) returns (Bool) {}
    // messages.sendMessage#fa88427a flags:# no_webpage:flags.1?true silent:flags.5?true background:flags.6?true clear_draft:flags.7?true peer:InputPeer reply_to_msg_id:flags.0?int message:string random_id:long reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> = Updates;
    rpc messages_sendMessage(TL_messages_sendMessage) returns (Updates) {}
    // messages.sendMedia#b8d1262b flags:# silent:flags.5?true background:flags.6?true clear_draft:flags.7?true peer:InputPeer reply_to_msg_id:flags.0?int media:InputMedia message:string random_id:long reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> = Updates;
    rpc messages_sendMedia(TL_messages_sendMedia) returns (Updates) {}
    // messages.forwardMessages#708e0195 flags:# silent:flags.5?true background:flags.6?true with_my_score:flags.8?true grouped:flags.9?true from_peer:InputPeer id:Vector<int> random_id:Vector<long> to_peer:InputPeer = Updates;
    rpc messages_forwardMessages(TL_messages_forwardMessages) returns (Updates) {}
    // messages.reportSpam#cf1592db peer:InputPeer = Bool;
    rpc messages_reportSpam(TL_messages_reportSpam) returns (Bool) {}
    // messages.hideReportSpam#a8f1709b peer:InputPeer = Bool;
    rpc messages_hideReportSpam(TL_messages_hideReportSpam) returns (Bool) {}
    // messages.getPeerSettings#3672e09c peer:InputPeer = PeerSettings;
    rpc messages_getPeerSettings(TL_messages_getPeerSettings) returns (PeerSettings) {}
    // messages.report#bd82b658 peer:InputPeer id:Vector<int> reason:ReportReason = Bool;
    rpc messages_report(TL_messages_report) returns (Bool) {}
    // messages.getChats#3c6aa187 id:Vector<int> = messages.Chats;
    rpc messages_getChats(TL_messages_getChats) returns (messages_Chats) {}
    // messages.getFullChat#3b831c66 chat_id:int = messages.ChatFull;
    rpc messages_getFullChat(TL_messages_getFullChat) returns (messages_ChatFull) {}
    // messages.editChatTitle#dc452855 chat_id:int title:string = Updates;
    rpc messages_editChatTitle(TL_messages_editChatTitle) returns (Updates) {}
    // messages.editChatPhoto#ca4c79d8 chat_id:int photo:InputChatPhoto = Updates;
    rpc messages_editChatPhoto(TL_messages_editChatPhoto) returns (Updates) {}
    // messages.addChatUser#f9a0aa09 chat_id:int user_id:InputUser fwd_limit:int = Updates;
    rpc messages_addChatUser(TL_messages_addChatUser) returns (Updates) {}
    // messages.deleteChatUser#e0611f16 chat_id:int user_id:InputUser = Updates;
    rpc messages_deleteChatUser(TL_messages_deleteChatUser) returns (Updates) {}
    // messages.createChat#9cb126e users:Vector<InputUser> title:string = Updates;
    rpc messages_createChat(TL_messages_createChat) returns (Updates) {}
    // messages.getDhConfig#26cf8950 version:int random_length:int = messages.DhConfig;
    rpc messages_getDhConfig(TL_messages_getDhConfig) returns (messages_DhConfig) {}
    // messages.requestEncryption#f64daf43 user_id:InputUser random_id:int g_a:bytes = EncryptedChat;
    rpc messages_requestEncryption(TL_messages_requestEncryption) returns (EncryptedChat) {}
    // messages.acceptEncryption#3dbc0415 peer:InputEncryptedChat g_b:bytes key_fingerprint:long = EncryptedChat;
    rpc messages_acceptEncryption(TL_messages_acceptEncryption) returns (EncryptedChat) {}
    // messages.discardEncryption#edd923c5 chat_id:int = Bool;
    rpc messages_discardEncryption(TL_messages_discardEncryption) returns (Bool) {}
    // messages.setEncryptedTyping#791451ed peer:InputEncryptedChat typing:Bool = Bool;
    rpc messages_setEncryptedTyping(TL_messages_setEncryptedTyping) returns (Bool) {}
    // messages.readEncryptedHistory#7f4b690a peer:InputEncryptedChat max_date:int = Bool;
    rpc messages_readEncryptedHistory(TL_messages_readEncryptedHistory) returns (Bool) {}
    // messages.sendEncrypted#a9776773 peer:InputEncryptedChat random_id:long data:bytes = messages.SentEncryptedMessage;
    rpc messages_sendEncrypted(TL_messages_sendEncrypted) returns (messages_SentEncryptedMessage) {}
    // messages.sendEncryptedFile#9a901b66 peer:InputEncryptedChat random_id:long data:bytes file:InputEncryptedFile = messages.SentEncryptedMessage;
    rpc messages_sendEncryptedFile(TL_messages_sendEncryptedFile) returns (messages_SentEncryptedMessage) {}
    // messages.sendEncryptedService#32d439a4 peer:InputEncryptedChat random_id:long data:bytes = messages.SentEncryptedMessage;
    rpc messages_sendEncryptedService(TL_messages_sendEncryptedService) returns (messages_SentEncryptedMessage) {}
    // messages.receivedQueue#55a5bb66 max_qts:int = Vector<long>;
    rpc messages_receivedQueue(TL_messages_receivedQueue) returns (Vector_long) {}
    // messages.reportEncryptedSpam#4b0c8c0f peer:InputEncryptedChat = Bool;
    rpc messages_reportEncryptedSpam(TL_messages_reportEncryptedSpam) returns (Bool) {}
    // messages.readMessageContents#36a73f77 id:Vector<int> = messages.AffectedMessages;
    rpc messages_readMessageContents(TL_messages_readMessageContents) returns (messages_AffectedMessages) {}
    // messages.getStickers#43d4f2c emoticon:string hash:int = messages.Stickers;
    rpc messages_getStickers(TL_messages_getStickers) returns (messages_Stickers) {}
    // messages.getAllStickers#1c9618b1 hash:int = messages.AllStickers;
    rpc messages_getAllStickers(TL_messages_getAllStickers) returns (messages_AllStickers) {}
    // messages.getWebPagePreview#8b68b0cc flags:# message:string entities:flags.3?Vector<MessageEntity> = MessageMedia;
    rpc messages_getWebPagePreview(TL_messages_getWebPagePreview) returns (MessageMedia) {}
    // messages.exportChatInvite#7d885289 chat_id:int = ExportedChatInvite;
    rpc messages_exportChatInvite(TL_messages_exportChatInvite) returns (ExportedChatInvite) {}
    // messages.checkChatInvite#3eadb1bb hash:string = ChatInvite;
    rpc messages_checkChatInvite(TL_messages_checkChatInvite) returns (ChatInvite) {}
    // messages.importChatInvite#6c50051c hash:string = Updates;
    rpc messages_importChatInvite(TL_messages_importChatInvite) returns (Updates) {}
    // messages.getStickerSet#2619a90e stickerset:InputStickerSet = messages.StickerSet;
    rpc messages_getStickerSet(TL_messages_getStickerSet) returns (messages_StickerSet) {}
    // messages.installStickerSet#c78fe460 stickerset:InputStickerSet archived:Bool = messages.StickerSetInstallResult;
    rpc messages_installStickerSet(TL_messages_installStickerSet) returns (messages_StickerSetInstallResult) {}
    // messages.uninstallStickerSet#f96e55de stickerset:InputStickerSet = Bool;
    rpc messages_uninstallStickerSet(TL_messages_uninstallStickerSet) returns (Bool) {}
    // messages.startBot#e6df7378 bot:InputUser peer:InputPeer random_id:long start_param:string = Updates;
    rpc messages_startBot(TL_messages_startBot) returns (Updates) {}
    // messages.getMessagesViews#c4c8a55d peer:InputPeer id:Vector<int> increment:Bool = Vector<int>;
    rpc messages_getMessagesViews(TL_messages_getMessagesViews) returns (Vector_int) {}
    // messages.toggleChatAdmins#ec8bd9e1 chat_id:int enabled:Bool = Updates;
    rpc messages_toggleChatAdmins(TL_messages_toggleChatAdmins) returns (Updates) {}
    // messages.editChatAdmin#a9e69f2e chat_id:int user_id:InputUser is_admin:Bool = Bool;
    rpc messages_editChatAdmin(TL_messages_editChatAdmin) returns (Bool) {}
    // messages.migrateChat#15a3b8e3 chat_id:int = Updates;
    rpc messages_migrateChat(TL_messages_migrateChat) returns (Updates) {}
    // messages.searchGlobal#9e3cacb0 q:string offset_date:int offset_peer:InputPeer offset_id:int limit:int = messages.Messages;
    rpc messages_searchGlobal(TL_messages_searchGlobal) returns (messages_Messages) {}
    // messages.reorderStickerSets#78337739 flags:# masks:flags.0?true order:Vector<long> = Bool;
    rpc messages_reorderStickerSets(TL_messages_reorderStickerSets) returns (Bool) {}
    // messages.getDocumentByHash#338e2464 sha256:bytes size:int mime_type:string = Document;
    rpc messages_getDocumentByHash(TL_messages_getDocumentByHash) returns (Document) {}
    // messages.searchGifs#bf9a776b q:string offset:int = messages.FoundGifs;
    rpc messages_searchGifs(TL_messages_searchGifs) returns (messages_FoundGifs) {}
    // messages.getSavedGifs#83bf3d52 hash:int = messages.SavedGifs;
    rpc messages_getSavedGifs(TL_messages_getSavedGifs) returns (messages_SavedGifs) {}
    // messages.saveGif#327a30cb id:InputDocument unsave:Bool = Bool;
    rpc messages_saveGif(TL_messages_saveGif) returns (Bool) {}
    // messages.getInlineBotResults#514e999d flags:# bot:InputUser peer:InputPeer geo_point:flags.0?InputGeoPoint query:string offset:string = messages.BotResults;
    rpc messages_getInlineBotResults(TL_messages_getInlineBotResults) returns (messages_BotResults) {}
    // messages.setInlineBotResults#eb5ea206 flags:# gallery:flags.0?true private:flags.1?true query_id:long results:Vector<InputBotInlineResult> cache_time:int next_offset:flags.2?string switch_pm:flags.3?InlineBotSwitchPM = Bool;
    rpc messages_setInlineBotResults(TL_messages_setInlineBotResults) returns (Bool) {}
    // messages.sendInlineBotResult#b16e06fe flags:# silent:flags.5?true background:flags.6?true clear_draft:flags.7?true peer:InputPeer reply_to_msg_id:flags.0?int random_id:long query_id:long id:string = Updates;
    rpc messages_sendInlineBotResult(TL_messages_sendInlineBotResult) returns (Updates) {}
    // messages.getMessageEditData#fda68d36 peer:InputPeer id:int = messages.MessageEditData;
    rpc messages_getMessageEditData(TL_messages_getMessageEditData) returns (messages_MessageEditData) {}
    // messages.editMessage#c000e4c8 flags:# no_webpage:flags.1?true stop_geo_live:flags.12?true peer:InputPeer id:int message:flags.11?string media:flags.14?InputMedia reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> geo_point:flags.13?InputGeoPoint = Updates;
    rpc messages_editMessage(TL_messages_editMessage) returns (Updates) {}
    // messages.editInlineBotMessage#adc3e828 flags:# no_webpage:flags.1?true stop_geo_live:flags.12?true id:InputBotInlineMessageID message:flags.11?string media:flags.14?InputMedia reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> geo_point:flags.13?InputGeoPoint = Bool;
    rpc messages_editInlineBotMessage(TL_messages_editInlineBotMessage) returns (Bool) {}
    // messages.getBotCallbackAnswer#810a9fec flags:# game:flags.1?true peer:InputPeer msg_id:int data:flags.0?bytes = messages.BotCallbackAnswer;
    rpc messages_getBotCallbackAnswer(TL_messages_getBotCallbackAnswer) returns (messages_BotCallbackAnswer) {}
    // messages.setBotCallbackAnswer#d58f130a flags:# alert:flags.1?true query_id:long message:flags.0?string url:flags.2?string cache_time:int = Bool;
    rpc messages_setBotCallbackAnswer(TL_messages_setBotCallbackAnswer) returns (Bool) {}
    // messages.getPeerDialogs#e470bcfd peers:Vector<InputDialogPeer> = messages.PeerDialogs;
    rpc messages_getPeerDialogs(TL_messages_getPeerDialogs) returns (messages_PeerDialogs) {}
    // messages.saveDraft#bc39e14b flags:# no_webpage:flags.1?true reply_to_msg_id:flags.0?int peer:InputPeer message:string entities:flags.3?Vector<MessageEntity> = Bool;
    rpc messages_saveDraft(TL_messages_saveDraft) returns (Bool) {}
    // messages.getAllDrafts#6a3f8d65 = Updates;
    rpc messages_getAllDrafts(TL_messages_getAllDrafts) returns (Updates) {}
    // messages.getFeaturedStickers#2dacca4f hash:int = messages.FeaturedStickers;
    rpc messages_getFeaturedStickers(TL_messages_getFeaturedStickers) returns (messages_FeaturedStickers) {}
    // messages.readFeaturedStickers#5b118126 id:Vector<long> = Bool;
    rpc messages_readFeaturedStickers(TL_messages_readFeaturedStickers) returns (Bool) {}
    // messages.getRecentStickers#5ea192c9 flags:# attached:flags.0?true hash:int = messages.RecentStickers;
    rpc messages_getRecentStickers(TL_messages_getRecentStickers) returns (messages_RecentStickers) {}
    // messages.saveRecentSticker#392718f8 flags:# attached:flags.0?true id:InputDocument unsave:Bool = Bool;
    rpc messages_saveRecentSticker(TL_messages_saveRecentSticker) returns (Bool) {}
    // messages.clearRecentStickers#8999602d flags:# attached:flags.0?true = Bool;
    rpc messages_clearRecentStickers(TL_messages_clearRecentStickers) returns (Bool) {}
    // messages.getArchivedStickers#57f17692 flags:# masks:flags.0?true offset_id:long limit:int = messages.ArchivedStickers;
    rpc messages_getArchivedStickers(TL_messages_getArchivedStickers) returns (messages_ArchivedStickers) {}
    // messages.getMaskStickers#65b8c79f hash:int = messages.AllStickers;
    rpc messages_getMaskStickers(TL_messages_getMaskStickers) returns (messages_AllStickers) {}
    // messages.getAttachedStickers#cc5b67cc media:InputStickeredMedia = Vector<StickerSetCovered>;
    rpc messages_getAttachedStickers(TL_messages_getAttachedStickers) returns (Vector_StickerSetCovered) {}
    // messages.setGameScore#8ef8ecc0 flags:# edit_message:flags.0?true force:flags.1?true peer:InputPeer id:int user_id:InputUser score:int = Updates;
    rpc messages_setGameScore(TL_messages_setGameScore) returns (Updates) {}
    // messages.setInlineGameScore#15ad9f64 flags:# edit_message:flags.0?true force:flags.1?true id:InputBotInlineMessageID user_id:InputUser score:int = Bool;
    rpc messages_setInlineGameScore(TL_messages_setInlineGameScore) returns (Bool) {}
    // messages.getGameHighScores#e822649d peer:InputPeer id:int user_id:InputUser = messages.HighScores;
    rpc messages_getGameHighScores(TL_messages_getGameHighScores) returns (messages_HighScores) {}
    // messages.getInlineGameHighScores#f635e1b id:InputBotInlineMessageID user_id:InputUser = messages.HighScores;
    rpc messages_getInlineGameHighScores(TL_messages_getInlineGameHighScores) returns (messages_HighScores) {}
    // messages.getCommonChats#d0a48c4 user_id:InputUser max_id:int limit:int = messages.Chats;
    rpc messages_getCommonChats(TL_messages_getCommonChats) returns (messages_Chats) {}
    // messages.getAllChats#eba80ff0 except_ids:Vector<int> = messages.Chats;
    rpc messages_getAllChats(TL_messages_getAllChats) returns (messages_Chats) {}
    // messages.getWebPage#32ca8f91 url:string hash:int = WebPage;
    rpc messages_getWebPage(TL_messages_getWebPage) returns (WebPage) {}
    // messages.toggleDialogPin#a731e257 flags:# pinned:flags.0?true peer:InputDialogPeer = Bool;
    rpc messages_toggleDialogPin(TL_messages_toggleDialogPin) returns (Bool) {}
    // messages.reorderPinnedDialogs#5b51d63f flags:# force:flags.0?true order:Vector<InputDialogPeer> = Bool;
    rpc messages_reorderPinnedDialogs(TL_messages_reorderPinnedDialogs) returns (Bool) {}
    // messages.getPinnedDialogs#e254d64e = messages.PeerDialogs;
    rpc messages_getPinnedDialogs(TL_messages_getPinnedDialogs) returns (messages_PeerDialogs) {}
    // messages.setBotShippingResults#e5f672fa flags:# query_id:long error:flags.0?string shipping_options:flags.1?Vector<ShippingOption> = Bool;
    rpc messages_setBotShippingResults(TL_messages_setBotShippingResults) returns (Bool) {}
    // messages.setBotPrecheckoutResults#9c2dd95 flags:# success:flags.1?true query_id:long error:flags.0?string = Bool;
    rpc messages_setBotPrecheckoutResults(TL_messages_setBotPrecheckoutResults) returns (Bool) {}
    // messages.uploadMedia#519bc2b1 peer:InputPeer media:InputMedia = MessageMedia;
    rpc messages_uploadMedia(TL_messages_uploadMedia) returns (MessageMedia) {}
    // messages.sendScreenshotNotification#c97df020 peer:InputPeer reply_to_msg_id:int random_id:long = Updates;
    rpc messages_sendScreenshotNotification(TL_messages_sendScreenshotNotification) returns (Updates) {}
    // messages.getFavedStickers#21ce0b0e hash:int = messages.FavedStickers;
    rpc messages_getFavedStickers(TL_messages_getFavedStickers) returns (messages_FavedStickers) {}
    // messages.faveSticker#b9ffc55b id:InputDocument unfave:Bool = Bool;
    rpc messages_faveSticker(TL_messages_faveSticker) returns (Bool) {}
    // messages.getUnreadMentions#46578472 peer:InputPeer offset_id:int add_offset:int limit:int max_id:int min_id:int = messages.Messages;
    rpc messages_getUnreadMentions(TL_messages_getUnreadMentions) returns (messages_Messages) {}
    // messages.readMentions#f0189d3 peer:InputPeer = messages.AffectedHistory;
    rpc messages_readMentions(TL_messages_readMentions) returns (messages_AffectedHistory) {}
    // messages.getRecentLocations#bbc45b09 peer:InputPeer limit:int hash:int = messages.Messages;
    rpc messages_getRecentLocations(TL_messages_getRecentLocations) returns (messages_Messages) {}
    // messages.sendMultiMedia#2095512f flags:# silent:flags.5?true background:flags.6?true clear_draft:flags.7?true peer:InputPeer reply_to_msg_id:flags.0?int multi_media:Vector<InputSingleMedia> = Updates;
    rpc messages_sendMultiMedia(TL_messages_sendMultiMedia) returns (Updates) {}
    // messages.uploadEncryptedFile#5057c497 peer:InputEncryptedChat file:InputEncryptedFile = EncryptedFile;
    rpc messages_uploadEncryptedFile(TL_messages_uploadEncryptedFile) returns (EncryptedFile) {}
    // messages.searchStickerSets#c2b7d08b flags:# exclude_featured:flags.0?true q:string hash:int = messages.FoundStickerSets;
    rpc messages_searchStickerSets(TL_messages_searchStickerSets) returns (messages_FoundStickerSets) {}
    // messages.getSplitRanges#1cff7e08 = Vector<MessageRange>;
    rpc messages_getSplitRanges(TL_messages_getSplitRanges) returns (Vector_MessageRange) {}
    // messages.markDialogUnread#c286d98f flags:# unread:flags.0?true peer:InputDialogPeer = Bool;
    rpc messages_markDialogUnread(TL_messages_markDialogUnread) returns (Bool) {}
    // messages.getDialogUnreadMarks#22e24e22 = Vector<DialogPeer>;
    rpc messages_getDialogUnreadMarks(TL_messages_getDialogUnreadMarks) returns (Vector_DialogPeer) {}
    // messages.clearAllDrafts#7e58ee9c = Bool;
    rpc messages_clearAllDrafts(TL_messages_clearAllDrafts) returns (Bool) {}
}

service RPCUpdates {
    // updates.getChannelDifference#bb32d7c0 channel:InputChannel filter:ChannelMessagesFilter pts:int limit:int = updates.ChannelDifference;
    rpc updates_getChannelDifferenceLayer46(TL_updates_getChannelDifferenceLayer46) returns (updates_ChannelDifference) {}
    // updates.getState#edd4882a = updates.State;
    rpc updates_getState(TL_updates_getState) returns (updates_State) {}
    // updates.getDifference#25939651 flags:# pts:int pts_total_limit:flags.0?int date:int qts:int = updates.Difference;
    rpc updates_getDifference(TL_updates_getDifference) returns (updates_Difference) {}
    // updates.getChannelDifference#3173d78 flags:# force:flags.0?true channel:InputChannel filter:ChannelMessagesFilter pts:int limit:int = updates.ChannelDifference;
    rpc updates_getChannelDifference(TL_updates_getChannelDifference) returns (updates_ChannelDifference) {}
}

service RPCAuth {
    // auth.sendCode#ccfd70cf flags:# allow_flashcall:flags.0?true phone_number:string current_number:flags.0?Bool api_id:int api_hash:string lang_code:string = auth.SentCode;
    rpc auth_sendCodeLayer51(TL_auth_sendCodeLayer51) returns (auth_SentCode) {}
    // auth.sendCode#86aef0ec flags:# allow_flashcall:flags.0?true phone_number:string current_number:flags.0?Bool api_id:int api_hash:string = auth.SentCode;
    rpc auth_sendCode(TL_auth_sendCode) returns (auth_SentCode) {}
    // auth.signUp#1b067634 phone_number:string phone_code_hash:string phone_code:string first_name:string last_name:string = auth.Authorization;
    rpc auth_signUp(TL_auth_signUp) returns (auth_Authorization) {}
    // auth.signIn#bcd51581 phone_number:string phone_code_hash:string phone_code:string = auth.Authorization;
    rpc auth_signIn(TL_auth_signIn) returns (auth_Authorization) {}
    // auth.logOut#5717da40 = Bool;
    rpc auth_logOut(TL_auth_logOut) returns (Bool) {}
    // auth.resetAuthorizations#9fab0d1a = Bool;
    rpc auth_resetAuthorizations(TL_auth_resetAuthorizations) returns (Bool) {}
    // auth.exportAuthorization#e5bfffcd dc_id:int = auth.ExportedAuthorization;
    rpc auth_exportAuthorization(TL_auth_exportAuthorization) returns (auth_ExportedAuthorization) {}
    // auth.importAuthorization#e3ef9613 id:int bytes:bytes = auth.Authorization;
    rpc auth_importAuthorization(TL_auth_importAuthorization) returns (auth_Authorization) {}
    // auth.bindTempAuthKey#cdd42a05 perm_auth_key_id:long nonce:long expires_at:int encrypted_message:bytes = Bool;
    rpc auth_bindTempAuthKey(TL_auth_bindTempAuthKey) returns (Bool) {}
    // auth.importBotAuthorization#67a3ff2c flags:int api_id:int api_hash:string bot_auth_token:string = auth.Authorization;
    rpc auth_importBotAuthorization(TL_auth_importBotAuthorization) returns (auth_Authorization) {}
    // auth.checkPassword#d18b4d16 password:InputCheckPasswordSRP = auth.Authorization;
    rpc auth_checkPassword(TL_auth_checkPassword) returns (auth_Authorization) {}
    // auth.requestPasswordRecovery#d897bc66 = auth.PasswordRecovery;
    rpc auth_requestPasswordRecovery(TL_auth_requestPasswordRecovery) returns (auth_PasswordRecovery) {}
    // auth.recoverPassword#4ea56e92 code:string = auth.Authorization;
    rpc auth_recoverPassword(TL_auth_recoverPassword) returns (auth_Authorization) {}
    // auth.resendCode#3ef1a9bf phone_number:string phone_code_hash:string = auth.SentCode;
    rpc auth_resendCode(TL_auth_resendCode) returns (auth_SentCode) {}
    // auth.cancelCode#1f040578 phone_number:string phone_code_hash:string = Bool;
    rpc auth_cancelCode(TL_auth_cancelCode) returns (Bool) {}
    // auth.dropTempAuthKeys#8e48a188 except_auth_keys:Vector<long> = Bool;
    rpc auth_dropTempAuthKeys(TL_auth_dropTempAuthKeys) returns (Bool) {}
}

service RPCContacts {
    // contacts.getStatuses#c4a353ee = Vector<ContactStatus>;
    rpc contacts_getStatuses(TL_contacts_getStatuses) returns (Vector_ContactStatus) {}
    // contacts.getContacts#c023849f hash:int = contacts.Contacts;
    rpc contacts_getContacts(TL_contacts_getContacts) returns (contacts_Contacts) {}
    // contacts.importContacts#2c800be5 contacts:Vector<InputContact> = contacts.ImportedContacts;
    rpc contacts_importContacts(TL_contacts_importContacts) returns (contacts_ImportedContacts) {}
    // contacts.deleteContact#8e953744 id:InputUser = contacts.Link;
    rpc contacts_deleteContact(TL_contacts_deleteContact) returns (contacts_Link) {}
    // contacts.deleteContacts#59ab389e id:Vector<InputUser> = Bool;
    rpc contacts_deleteContacts(TL_contacts_deleteContacts) returns (Bool) {}
    // contacts.block#332b49fc id:InputUser = Bool;
    rpc contacts_block(TL_contacts_block) returns (Bool) {}
    // contacts.unblock#e54100bd id:InputUser = Bool;
    rpc contacts_unblock(TL_contacts_unblock) returns (Bool) {}
    // contacts.getBlocked#f57c350f offset:int limit:int = contacts.Blocked;
    rpc contacts_getBlocked(TL_contacts_getBlocked) returns (contacts_Blocked) {}
    // contacts.exportCard#84e53737 = Vector<int>;
    rpc contacts_exportCard(TL_contacts_exportCard) returns (Vector_int) {}
    // contacts.importCard#4fe196fe export_card:Vector<int> = User;
    rpc contacts_importCard(TL_contacts_importCard) returns (User) {}
    // contacts.search#11f812d8 q:string limit:int = contacts.Found;
    rpc contacts_search(TL_contacts_search) returns (contacts_Found) {}
    // contacts.resolveUsername#f93ccba3 username:string = contacts.ResolvedPeer;
    rpc contacts_resolveUsername(TL_contacts_resolveUsername) returns (contacts_ResolvedPeer) {}
    // contacts.getTopPeers#d4982db5 flags:# correspondents:flags.0?true bots_pm:flags.1?true bots_inline:flags.2?true phone_calls:flags.3?true groups:flags.10?true channels:flags.15?true offset:int limit:int hash:int = contacts.TopPeers;
    rpc contacts_getTopPeers(TL_contacts_getTopPeers) returns (contacts_TopPeers) {}
    // contacts.resetTopPeerRating#1ae373ac category:TopPeerCategory peer:InputPeer = Bool;
    rpc contacts_resetTopPeerRating(TL_contacts_resetTopPeerRating) returns (Bool) {}
    // contacts.resetSaved#879537f1 = Bool;
    rpc contacts_resetSaved(TL_contacts_resetSaved) returns (Bool) {}
    // contacts.getSaved#82f1e39f = Vector<SavedContact>;
    rpc contacts_getSaved(TL_contacts_getSaved) returns (Vector_SavedContact) {}
    // contacts.toggleTopPeers#8514bdda enabled:Bool = Bool;
    rpc contacts_toggleTopPeers(TL_contacts_toggleTopPeers) returns (Bool) {}
}

service RPCPayments {
    // payments.getPaymentForm#99f09745 msg_id:int = payments.PaymentForm;
    rpc payments_getPaymentForm(TL_payments_getPaymentForm) returns (payments_PaymentForm) {}
    // payments.getPaymentReceipt#a092a980 msg_id:int = payments.PaymentReceipt;
    rpc payments_getPaymentReceipt(TL_payments_getPaymentReceipt) returns (payments_PaymentReceipt) {}
    // payments.validateRequestedInfo#770a8e74 flags:# save:flags.0?true msg_id:int info:PaymentRequestedInfo = payments.ValidatedRequestedInfo;
    rpc payments_validateRequestedInfo(TL_payments_validateRequestedInfo) returns (payments_ValidatedRequestedInfo) {}
    // payments.sendPaymentForm#2b8879b3 flags:# msg_id:int requested_info_id:flags.0?string shipping_option_id:flags.1?string credentials:InputPaymentCredentials = payments.PaymentResult;
    rpc payments_sendPaymentForm(TL_payments_sendPaymentForm) returns (payments_PaymentResult) {}
    // payments.getSavedInfo#227d824b = payments.SavedInfo;
    rpc payments_getSavedInfo(TL_payments_getSavedInfo) returns (payments_SavedInfo) {}
    // payments.clearSavedInfo#d83d70c1 flags:# credentials:flags.0?true info:flags.1?true = Bool;
    rpc payments_clearSavedInfo(TL_payments_clearSavedInfo) returns (Bool) {}
}

service RPCAccount {
    // account.registerDevice#637ea878 token_type:int token:string = Bool;
    rpc account_registerDeviceLayer71(TL_account_registerDeviceLayer71) returns (Bool) {}
    // account.unregisterDevice#65c55b40 token_type:int token:string = Bool;
    rpc account_unregisterDeviceLayer71(TL_account_unregisterDeviceLayer71) returns (Bool) {}
    // account.registerDevice#5cbea590 token_type:int token:string app_sandbox:Bool secret:bytes other_uids:Vector<int> = Bool;
    rpc account_registerDevice(TL_account_registerDevice) returns (Bool) {}
    // account.unregisterDevice#3076c4bf token_type:int token:string other_uids:Vector<int> = Bool;
    rpc account_unregisterDevice(TL_account_unregisterDevice) returns (Bool) {}
    // account.updateNotifySettings#84be5b93 peer:InputNotifyPeer settings:InputPeerNotifySettings = Bool;
    rpc account_updateNotifySettings(TL_account_updateNotifySettings) returns (Bool) {}
    // account.getNotifySettings#12b3ad31 peer:InputNotifyPeer = PeerNotifySettings;
    rpc account_getNotifySettings(TL_account_getNotifySettings) returns (PeerNotifySettings) {}
    // account.resetNotifySettings#db7e1747 = Bool;
    rpc account_resetNotifySettings(TL_account_resetNotifySettings) returns (Bool) {}
    // account.updateProfile#78515775 flags:# first_name:flags.0?string last_name:flags.1?string about:flags.2?string = User;
    rpc account_updateProfile(TL_account_updateProfile) returns (User) {}
    // account.updateStatus#6628562c offline:Bool = Bool;
    rpc account_updateStatus(TL_account_updateStatus) returns (Bool) {}
    // account.getWallPapers#c04cfac2 = Vector<WallPaper>;
    rpc account_getWallPapers(TL_account_getWallPapers) returns (Vector_WallPaper) {}
    // account.reportPeer#ae189d5f peer:InputPeer reason:ReportReason = Bool;
    rpc account_reportPeer(TL_account_reportPeer) returns (Bool) {}
    // account.checkUsername#2714d86c username:string = Bool;
    rpc account_checkUsername(TL_account_checkUsername) returns (Bool) {}
    // account.updateUsername#3e0bdd7c username:string = User;
    rpc account_updateUsername(TL_account_updateUsername) returns (User) {}
    // account.getPrivacy#dadbc950 key:InputPrivacyKey = account.PrivacyRules;
    rpc account_getPrivacy(TL_account_getPrivacy) returns (account_PrivacyRules) {}
    // account.setPrivacy#c9f81ce8 key:InputPrivacyKey rules:Vector<InputPrivacyRule> = account.PrivacyRules;
    rpc account_setPrivacy(TL_account_setPrivacy) returns (account_PrivacyRules) {}
    // account.deleteAccount#418d4e0b reason:string = Bool;
    rpc account_deleteAccount(TL_account_deleteAccount) returns (Bool) {}
    // account.getAccountTTL#8fc711d = AccountDaysTTL;
    rpc account_getAccountTTL(TL_account_getAccountTTL) returns (AccountDaysTTL) {}
    // account.setAccountTTL#2442485e ttl:AccountDaysTTL = Bool;
    rpc account_setAccountTTL(TL_account_setAccountTTL) returns (Bool) {}
    // account.sendChangePhoneCode#8e57deb flags:# allow_flashcall:flags.0?true phone_number:string current_number:flags.0?Bool = auth.SentCode;
    rpc account_sendChangePhoneCode(TL_account_sendChangePhoneCode) returns (auth_SentCode) {}
    // account.changePhone#70c32edb phone_number:string phone_code_hash:string phone_code:string = User;
    rpc account_changePhone(TL_account_changePhone) returns (User) {}
    // account.updateDeviceLocked#38df3532 period:int = Bool;
    rpc account_updateDeviceLocked(TL_account_updateDeviceLocked) returns (Bool) {}
    // account.getAuthorizations#e320c158 = account.Authorizations;
    rpc account_getAuthorizations(TL_account_getAuthorizations) returns (account_Authorizations) {}
    // account.resetAuthorization#df77f3bc hash:long = Bool;
    rpc account_resetAuthorization(TL_account_resetAuthorization) returns (Bool) {}
    // account.getPassword#548a30f5 = account.Password;
    rpc account_getPassword(TL_account_getPassword) returns (account_Password) {}
    // account.getPasswordSettings#9cd4eaf9 password:InputCheckPasswordSRP = account.PasswordSettings;
    rpc account_getPasswordSettings(TL_account_getPasswordSettings) returns (account_PasswordSettings) {}
    // account.updatePasswordSettings#a59b102f password:InputCheckPasswordSRP new_settings:account.PasswordInputSettings = Bool;
    rpc account_updatePasswordSettings(TL_account_updatePasswordSettings) returns (Bool) {}
    // account.sendConfirmPhoneCode#1516d7bd flags:# allow_flashcall:flags.0?true hash:string current_number:flags.0?Bool = auth.SentCode;
    rpc account_sendConfirmPhoneCode(TL_account_sendConfirmPhoneCode) returns (auth_SentCode) {}
    // account.confirmPhone#5f2178c3 phone_code_hash:string phone_code:string = Bool;
    rpc account_confirmPhone(TL_account_confirmPhone) returns (Bool) {}
    // account.getTmpPassword#449e0b51 password:InputCheckPasswordSRP period:int = account.TmpPassword;
    rpc account_getTmpPassword(TL_account_getTmpPassword) returns (account_TmpPassword) {}
    // account.getWebAuthorizations#182e6d6f = account.WebAuthorizations;
    rpc account_getWebAuthorizations(TL_account_getWebAuthorizations) returns (account_WebAuthorizations) {}
    // account.resetWebAuthorization#2d01b9ef hash:long = Bool;
    rpc account_resetWebAuthorization(TL_account_resetWebAuthorization) returns (Bool) {}
    // account.resetWebAuthorizations#682d2594 = Bool;
    rpc account_resetWebAuthorizations(TL_account_resetWebAuthorizations) returns (Bool) {}
    // account.getAllSecureValues#b288bc7d = Vector<SecureValue>;
    rpc account_getAllSecureValues(TL_account_getAllSecureValues) returns (Vector_SecureValue) {}
    // account.getSecureValue#73665bc2 types:Vector<SecureValueType> = Vector<SecureValue>;
    rpc account_getSecureValue(TL_account_getSecureValue) returns (Vector_SecureValue) {}
    // account.saveSecureValue#899fe31d value:InputSecureValue secure_secret_id:long = SecureValue;
    rpc account_saveSecureValue(TL_account_saveSecureValue) returns (SecureValue) {}
    // account.deleteSecureValue#b880bc4b types:Vector<SecureValueType> = Bool;
    rpc account_deleteSecureValue(TL_account_deleteSecureValue) returns (Bool) {}
    // account.getAuthorizationForm#b86ba8e1 bot_id:int scope:string public_key:string = account.AuthorizationForm;
    rpc account_getAuthorizationForm(TL_account_getAuthorizationForm) returns (account_AuthorizationForm) {}
    // account.acceptAuthorization#e7027c94 bot_id:int scope:string public_key:string value_hashes:Vector<SecureValueHash> credentials:SecureCredentialsEncrypted = Bool;
    rpc account_acceptAuthorization(TL_account_acceptAuthorization) returns (Bool) {}
    // account.sendVerifyPhoneCode#823380b4 flags:# allow_flashcall:flags.0?true phone_number:string current_number:flags.0?Bool = auth.SentCode;
    rpc account_sendVerifyPhoneCode(TL_account_sendVerifyPhoneCode) returns (auth_SentCode) {}
    // account.verifyPhone#4dd3a7f6 phone_number:string phone_code_hash:string phone_code:string = Bool;
    rpc account_verifyPhone(TL_account_verifyPhone) returns (Bool) {}
    // account.sendVerifyEmailCode#7011509f email:string = account.SentEmailCode;
    rpc account_sendVerifyEmailCode(TL_account_sendVerifyEmailCode) returns (account_SentEmailCode) {}
    // account.verifyEmail#ecba39db email:string code:string = Bool;
    rpc account_verifyEmail(TL_account_verifyEmail) returns (Bool) {}
    // account.initTakeoutSession#f05b4804 flags:# contacts:flags.0?true message_users:flags.1?true message_chats:flags.2?true message_megagroups:flags.3?true message_channels:flags.4?true files:flags.5?true file_max_size:flags.5?int = account.Takeout;
    rpc account_initTakeoutSession(TL_account_initTakeoutSession) returns (account_Takeout) {}
    // account.finishTakeoutSession#1d2652ee flags:# success:flags.0?true = Bool;
    rpc account_finishTakeoutSession(TL_account_finishTakeoutSession) returns (Bool) {}
}

service RPCUsers {
    // users.getUsers#d91a548 id:Vector<InputUser> = Vector<User>;
    rpc users_getUsers(TL_users_getUsers) returns (Vector_User) {}
    // users.getFullUser#ca30a5b1 id:InputUser = UserFull;
    rpc users_getFullUser(TL_users_getFullUser) returns (UserFull) {}
    // users.setSecureValueErrors#90c894b5 id:InputUser errors:Vector<SecureValueError> = Bool;
    rpc users_setSecureValueErrors(TL_users_setSecureValueErrors) returns (Bool) {}
}

service RPCUpload {
    // upload.saveFilePart#b304a621 file_id:long file_part:int bytes:bytes = Bool;
    rpc upload_saveFilePart(TL_upload_saveFilePart) returns (Bool) {}
    // upload.getFile#e3a6cfb5 location:InputFileLocation offset:int limit:int = upload.File;
    rpc upload_getFile(TL_upload_getFile) returns (upload_File) {}
    // upload.saveBigFilePart#de7b673d file_id:long file_part:int file_total_parts:int bytes:bytes = Bool;
    rpc upload_saveBigFilePart(TL_upload_saveBigFilePart) returns (Bool) {}
    // upload.getWebFile#24e6818d location:InputWebFileLocation offset:int limit:int = upload.WebFile;
    rpc upload_getWebFile(TL_upload_getWebFile) returns (upload_WebFile) {}
    // upload.getCdnFile#2000bcc3 file_token:bytes offset:int limit:int = upload.CdnFile;
    rpc upload_getCdnFile(TL_upload_getCdnFile) returns (upload_CdnFile) {}
    // upload.reuploadCdnFile#9b2754a8 file_token:bytes request_token:bytes = Vector<FileHash>;
    rpc upload_reuploadCdnFile(TL_upload_reuploadCdnFile) returns (Vector_FileHash) {}
    // upload.getCdnFileHashes#4da54231 file_token:bytes offset:int = Vector<FileHash>;
    rpc upload_getCdnFileHashes(TL_upload_getCdnFileHashes) returns (Vector_FileHash) {}
    // upload.getFileHashes#c7025931 location:InputFileLocation offset:int = Vector<FileHash>;
    rpc upload_getFileHashes(TL_upload_getFileHashes) returns (Vector_FileHash) {}
}

service RPCHelp {
    // help.getScheme#dbb69a9e version:int = Scheme;
    rpc help_getScheme(TL_help_getScheme) returns (Scheme) {}
    // help.getInviteText#a4a95186 lang_code:string = help.InviteText;
    rpc help_getInviteTextLayer46(TL_help_getInviteTextLayer46) returns (help_InviteText) {}
    // help.getAppUpdate#c812ac7e device_model:string system_version:string app_version:string lang_code:string = help.AppUpdate;
    rpc help_getAppUpdateLayer46(TL_help_getAppUpdateLayer46) returns (help_AppUpdate) {}
    // help.getConfig#c4f9186b = Config;
    rpc help_getConfig(TL_help_getConfig) returns (Config) {}
    // help.getNearestDc#1fb33026 = NearestDc;
    rpc help_getNearestDc(TL_help_getNearestDc) returns (NearestDc) {}
    // help.getAppUpdate#522d5a7d source:string = help.AppUpdate;
    rpc help_getAppUpdate(TL_help_getAppUpdate) returns (help_AppUpdate) {}
    // help.saveAppLog#6f02f748 events:Vector<InputAppEvent> = Bool;
    rpc help_saveAppLog(TL_help_saveAppLog) returns (Bool) {}
    // help.getInviteText#4d392343 = help.InviteText;
    rpc help_getInviteText(TL_help_getInviteText) returns (help_InviteText) {}
    // help.getSupport#9cdf08cd = help.Support;
    rpc help_getSupport(TL_help_getSupport) returns (help_Support) {}
    // help.getAppChangelog#9010ef6f prev_app_version:string = Updates;
    rpc help_getAppChangelog(TL_help_getAppChangelog) returns (Updates) {}
    // help.setBotUpdatesStatus#ec22cfcd pending_updates_count:int message:string = Bool;
    rpc help_setBotUpdatesStatus(TL_help_setBotUpdatesStatus) returns (Bool) {}
    // help.getCdnConfig#52029342 = CdnConfig;
    rpc help_getCdnConfig(TL_help_getCdnConfig) returns (CdnConfig) {}
    // help.getRecentMeUrls#3dc0f114 referer:string = help.RecentMeUrls;
    rpc help_getRecentMeUrls(TL_help_getRecentMeUrls) returns (help_RecentMeUrls) {}
    // help.getProxyData#3d7758e1 = help.ProxyData;
    rpc help_getProxyData(TL_help_getProxyData) returns (help_ProxyData) {}
    // help.getTermsOfServiceUpdate#2ca51fd1 = help.TermsOfServiceUpdate;
    rpc help_getTermsOfServiceUpdate(TL_help_getTermsOfServiceUpdate) returns (help_TermsOfServiceUpdate) {}
    // help.acceptTermsOfService#ee72f79a id:DataJSON = Bool;
    rpc help_acceptTermsOfService(TL_help_acceptTermsOfService) returns (Bool) {}
    // help.getDeepLinkInfo#3fedc75f path:string = help.DeepLinkInfo;
    rpc help_getDeepLinkInfo(TL_help_getDeepLinkInfo) returns (help_DeepLinkInfo) {}
    // help.getPassportConfig#c661ad08 hash:int = help.PassportConfig;
    rpc help_getPassportConfig(TL_help_getPassportConfig) returns (help_PassportConfig) {}
}

service RPCLangpack {
    // langpack.getLanguages#800fd57d = Vector<LangPackLanguage>;
    rpc langpack_getLanguagesLayer70(TL_langpack_getLanguagesLayer70) returns (Vector_LangPackLanguage) {}
    // langpack.getLangPack#9ab5c58e lang_code:string = LangPackDifference;
    rpc langpack_getLangPackLayer71(TL_langpack_getLangPackLayer71) returns (LangPackDifference) {}
    // langpack.getLangPack#f2f2330a lang_pack:string lang_code:string = LangPackDifference;
    rpc langpack_getLangPack(TL_langpack_getLangPack) returns (LangPackDifference) {}
    // langpack.getStrings#efea3803 lang_pack:string lang_code:string keys:Vector<string> = Vector<LangPackString>;
    rpc langpack_getStrings(TL_langpack_getStrings) returns (Vector_LangPackString) {}
    // langpack.getDifference#b2e4d7d from_version:int = LangPackDifference;
    rpc langpack_getDifference(TL_langpack_getDifference) returns (LangPackDifference) {}
    // langpack.getLanguages#42c6978f lang_pack:string = Vector<LangPackLanguage>;
    rpc langpack_getLanguages(TL_langpack_getLanguages) returns (Vector_LangPackLanguage) {}
}

service RPCChannels {
    // channels.readHistory#cc104937 channel:InputChannel max_id:int = Bool;
    rpc channels_readHistory(TL_channels_readHistory) returns (Bool) {}
    // channels.deleteMessages#84c1fd4e channel:InputChannel id:Vector<int> = messages.AffectedMessages;
    rpc channels_deleteMessages(TL_channels_deleteMessages) returns (messages_AffectedMessages) {}
    // channels.deleteUserHistory#d10dd71b channel:InputChannel user_id:InputUser = messages.AffectedHistory;
    rpc channels_deleteUserHistory(TL_channels_deleteUserHistory) returns (messages_AffectedHistory) {}
    // channels.reportSpam#fe087810 channel:InputChannel user_id:InputUser id:Vector<int> = Bool;
    rpc channels_reportSpam(TL_channels_reportSpam) returns (Bool) {}
    // channels.getMessages#ad8c9a23 channel:InputChannel id:Vector<InputMessage> = messages.Messages;
    rpc channels_getMessages(TL_channels_getMessages) returns (messages_Messages) {}
    // channels.getParticipants#123e05e9 channel:InputChannel filter:ChannelParticipantsFilter offset:int limit:int hash:int = channels.ChannelParticipants;
    rpc channels_getParticipants(TL_channels_getParticipants) returns (channels_ChannelParticipants) {}
    // channels.getParticipant#546dd7a6 channel:InputChannel user_id:InputUser = channels.ChannelParticipant;
    rpc channels_getParticipant(TL_channels_getParticipant) returns (channels_ChannelParticipant) {}
    // channels.getChannels#a7f6bbb id:Vector<InputChannel> = messages.Chats;
    rpc channels_getChannels(TL_channels_getChannels) returns (messages_Chats) {}
    // channels.getFullChannel#8736a09 channel:InputChannel = messages.ChatFull;
    rpc channels_getFullChannel(TL_channels_getFullChannel) returns (messages_ChatFull) {}
    // channels.createChannel#f4893d7f flags:# broadcast:flags.0?true megagroup:flags.1?true title:string about:string = Updates;
    rpc channels_createChannel(TL_channels_createChannel) returns (Updates) {}
    // channels.editAbout#13e27f1e channel:InputChannel about:string = Bool;
    rpc channels_editAbout(TL_channels_editAbout) returns (Bool) {}
    // channels.editAdmin#20b88214 channel:InputChannel user_id:InputUser admin_rights:ChannelAdminRights = Updates;
    rpc channels_editAdmin(TL_channels_editAdmin) returns (Updates) {}
    // channels.editTitle#566decd0 channel:InputChannel title:string = Updates;
    rpc channels_editTitle(TL_channels_editTitle) returns (Updates) {}
    // channels.editPhoto#f12e57c9 channel:InputChannel photo:InputChatPhoto = Updates;
    rpc channels_editPhoto(TL_channels_editPhoto) returns (Updates) {}
    // channels.checkUsername#10e6bd2c channel:InputChannel username:string = Bool;
    rpc channels_checkUsername(TL_channels_checkUsername) returns (Bool) {}
    // channels.updateUsername#3514b3de channel:InputChannel username:string = Bool;
    rpc channels_updateUsername(TL_channels_updateUsername) returns (Bool) {}
    // channels.joinChannel#24b524c5 channel:InputChannel = Updates;
    rpc channels_joinChannel(TL_channels_joinChannel) returns (Updates) {}
    // channels.leaveChannel#f836aa95 channel:InputChannel = Updates;
    rpc channels_leaveChannel(TL_channels_leaveChannel) returns (Updates) {}
    // channels.inviteToChannel#199f3a6c channel:InputChannel users:Vector<InputUser> = Updates;
    rpc channels_inviteToChannel(TL_channels_inviteToChannel) returns (Updates) {}
    // channels.exportInvite#c7560885 channel:InputChannel = ExportedChatInvite;
    rpc channels_exportInvite(TL_channels_exportInvite) returns (ExportedChatInvite) {}
    // channels.deleteChannel#c0111fe3 channel:InputChannel = Updates;
    rpc channels_deleteChannel(TL_channels_deleteChannel) returns (Updates) {}
    // channels.toggleInvites#49609307 channel:InputChannel enabled:Bool = Updates;
    rpc channels_toggleInvites(TL_channels_toggleInvites) returns (Updates) {}
    // channels.exportMessageLink#ceb77163 channel:InputChannel id:int grouped:Bool = ExportedMessageLink;
    rpc channels_exportMessageLink(TL_channels_exportMessageLink) returns (ExportedMessageLink) {}
    // channels.toggleSignatures#1f69b606 channel:InputChannel enabled:Bool = Updates;
    rpc channels_toggleSignatures(TL_channels_toggleSignatures) returns (Updates) {}
    // channels.updatePinnedMessage#a72ded52 flags:# silent:flags.0?true channel:InputChannel id:int = Updates;
    rpc channels_updatePinnedMessage(TL_channels_updatePinnedMessage) returns (Updates) {}
    // channels.getAdminedPublicChannels#8d8d82d7 = messages.Chats;
    rpc channels_getAdminedPublicChannels(TL_channels_getAdminedPublicChannels) returns (messages_Chats) {}
    // channels.editBanned#bfd915cd channel:InputChannel user_id:InputUser banned_rights:ChannelBannedRights = Updates;
    rpc channels_editBanned(TL_channels_editBanned) returns (Updates) {}
    // channels.getAdminLog#33ddf480 flags:# channel:InputChannel q:string events_filter:flags.0?ChannelAdminLogEventsFilter admins:flags.1?Vector<InputUser> max_id:long min_id:long limit:int = channels.AdminLogResults;
    rpc channels_getAdminLog(TL_channels_getAdminLog) returns (channels_AdminLogResults) {}
    // channels.setStickers#ea8ca4f9 channel:InputChannel stickerset:InputStickerSet = Bool;
    rpc channels_setStickers(TL_channels_setStickers) returns (Bool) {}
    // channels.readMessageContents#eab5dc38 channel:InputChannel id:Vector<int> = Bool;
    rpc channels_readMessageContents(TL_channels_readMessageContents) returns (Bool) {}
    // channels.deleteHistory#af369d42 channel:InputChannel max_id:int = Bool;
    rpc channels_deleteHistory(TL_channels_deleteHistory) returns (Bool) {}
    // channels.togglePreHistoryHidden#eabbb94c channel:InputChannel enabled:Bool = Updates;
    rpc channels_togglePreHistoryHidden(TL_channels_togglePreHistoryHidden) returns (Updates) {}
    // channels.getLeftChannels#8341ecc0 offset:int = messages.Chats;
    rpc channels_getLeftChannels(TL_channels_getLeftChannels) returns (messages_Chats) {}
}

