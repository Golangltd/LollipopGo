// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth_key_service.proto

package mtproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AuthKeyMetadata struct {
	Nonce                []byte   `protobuf:"bytes,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	ServerNonce          []byte   `protobuf:"bytes,2,opt,name=server_nonce,json=serverNonce,proto3" json:"server_nonce,omitempty"`
	NewNonce             []byte   `protobuf:"bytes,3,opt,name=new_nonce,json=newNonce,proto3" json:"new_nonce,omitempty"`
	A                    []byte   `protobuf:"bytes,4,opt,name=a,proto3" json:"a,omitempty"`
	P                    []byte   `protobuf:"bytes,5,opt,name=p,proto3" json:"p,omitempty"`
	AuthKeyId            int64    `protobuf:"varint,6,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id,omitempty"`
	AuthKey              []byte   `protobuf:"bytes,7,opt,name=auth_key,json=authKey,proto3" json:"auth_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthKeyMetadata) Reset()         { *m = AuthKeyMetadata{} }
func (m *AuthKeyMetadata) String() string { return proto.CompactTextString(m) }
func (*AuthKeyMetadata) ProtoMessage()    {}
func (*AuthKeyMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_key_service_1f78725018aa9ed6, []int{0}
}
func (m *AuthKeyMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthKeyMetadata.Unmarshal(m, b)
}
func (m *AuthKeyMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthKeyMetadata.Marshal(b, m, deterministic)
}
func (dst *AuthKeyMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthKeyMetadata.Merge(dst, src)
}
func (m *AuthKeyMetadata) XXX_Size() int {
	return xxx_messageInfo_AuthKeyMetadata.Size(m)
}
func (m *AuthKeyMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthKeyMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_AuthKeyMetadata proto.InternalMessageInfo

func (m *AuthKeyMetadata) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

func (m *AuthKeyMetadata) GetServerNonce() []byte {
	if m != nil {
		return m.ServerNonce
	}
	return nil
}

func (m *AuthKeyMetadata) GetNewNonce() []byte {
	if m != nil {
		return m.NewNonce
	}
	return nil
}

func (m *AuthKeyMetadata) GetA() []byte {
	if m != nil {
		return m.A
	}
	return nil
}

func (m *AuthKeyMetadata) GetP() []byte {
	if m != nil {
		return m.P
	}
	return nil
}

func (m *AuthKeyMetadata) GetAuthKeyId() int64 {
	if m != nil {
		return m.AuthKeyId
	}
	return 0
}

func (m *AuthKeyMetadata) GetAuthKey() []byte {
	if m != nil {
		return m.AuthKey
	}
	return nil
}

type AuthKeyRequest struct {
	AuthKeyId            int64    `protobuf:"varint,1,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthKeyRequest) Reset()         { *m = AuthKeyRequest{} }
func (m *AuthKeyRequest) String() string { return proto.CompactTextString(m) }
func (*AuthKeyRequest) ProtoMessage()    {}
func (*AuthKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_key_service_1f78725018aa9ed6, []int{1}
}
func (m *AuthKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthKeyRequest.Unmarshal(m, b)
}
func (m *AuthKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthKeyRequest.Marshal(b, m, deterministic)
}
func (dst *AuthKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthKeyRequest.Merge(dst, src)
}
func (m *AuthKeyRequest) XXX_Size() int {
	return xxx_messageInfo_AuthKeyRequest.Size(m)
}
func (m *AuthKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthKeyRequest proto.InternalMessageInfo

func (m *AuthKeyRequest) GetAuthKeyId() int64 {
	if m != nil {
		return m.AuthKeyId
	}
	return 0
}

type AuthKeyData struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	AuthKeyId            int64    `protobuf:"varint,2,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id,omitempty"`
	AuthKey              []byte   `protobuf:"bytes,3,opt,name=auth_key,json=authKey,proto3" json:"auth_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthKeyData) Reset()         { *m = AuthKeyData{} }
func (m *AuthKeyData) String() string { return proto.CompactTextString(m) }
func (*AuthKeyData) ProtoMessage()    {}
func (*AuthKeyData) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_key_service_1f78725018aa9ed6, []int{2}
}
func (m *AuthKeyData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthKeyData.Unmarshal(m, b)
}
func (m *AuthKeyData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthKeyData.Marshal(b, m, deterministic)
}
func (dst *AuthKeyData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthKeyData.Merge(dst, src)
}
func (m *AuthKeyData) XXX_Size() int {
	return xxx_messageInfo_AuthKeyData.Size(m)
}
func (m *AuthKeyData) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthKeyData.DiscardUnknown(m)
}

var xxx_messageInfo_AuthKeyData proto.InternalMessageInfo

func (m *AuthKeyData) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *AuthKeyData) GetAuthKeyId() int64 {
	if m != nil {
		return m.AuthKeyId
	}
	return 0
}

func (m *AuthKeyData) GetAuthKey() []byte {
	if m != nil {
		return m.AuthKey
	}
	return nil
}

// TODO(@benqi): remove to biz_auth service
type AuthKeyIdRequest struct {
	AuthKeyId            int64    `protobuf:"varint,1,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthKeyIdRequest) Reset()         { *m = AuthKeyIdRequest{} }
func (m *AuthKeyIdRequest) String() string { return proto.CompactTextString(m) }
func (*AuthKeyIdRequest) ProtoMessage()    {}
func (*AuthKeyIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_key_service_1f78725018aa9ed6, []int{3}
}
func (m *AuthKeyIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthKeyIdRequest.Unmarshal(m, b)
}
func (m *AuthKeyIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthKeyIdRequest.Marshal(b, m, deterministic)
}
func (dst *AuthKeyIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthKeyIdRequest.Merge(dst, src)
}
func (m *AuthKeyIdRequest) XXX_Size() int {
	return xxx_messageInfo_AuthKeyIdRequest.Size(m)
}
func (m *AuthKeyIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthKeyIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthKeyIdRequest proto.InternalMessageInfo

func (m *AuthKeyIdRequest) GetAuthKeyId() int64 {
	if m != nil {
		return m.AuthKeyId
	}
	return 0
}

type UserIdResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	AuthKeyId            int64    `protobuf:"varint,2,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id,omitempty"`
	UserId               int32    `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserIdResponse) Reset()         { *m = UserIdResponse{} }
func (m *UserIdResponse) String() string { return proto.CompactTextString(m) }
func (*UserIdResponse) ProtoMessage()    {}
func (*UserIdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_key_service_1f78725018aa9ed6, []int{4}
}
func (m *UserIdResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserIdResponse.Unmarshal(m, b)
}
func (m *UserIdResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserIdResponse.Marshal(b, m, deterministic)
}
func (dst *UserIdResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserIdResponse.Merge(dst, src)
}
func (m *UserIdResponse) XXX_Size() int {
	return xxx_messageInfo_UserIdResponse.Size(m)
}
func (m *UserIdResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserIdResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserIdResponse proto.InternalMessageInfo

func (m *UserIdResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *UserIdResponse) GetAuthKeyId() int64 {
	if m != nil {
		return m.AuthKeyId
	}
	return 0
}

func (m *UserIdResponse) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func init() {
	proto.RegisterType((*AuthKeyMetadata)(nil), "mtproto.AuthKeyMetadata")
	proto.RegisterType((*AuthKeyRequest)(nil), "mtproto.AuthKeyRequest")
	proto.RegisterType((*AuthKeyData)(nil), "mtproto.AuthKeyData")
	proto.RegisterType((*AuthKeyIdRequest)(nil), "mtproto.AuthKeyIdRequest")
	proto.RegisterType((*UserIdResponse)(nil), "mtproto.UserIdResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ZRPCAuthKeyClient is the client API for ZRPCAuthKey service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ZRPCAuthKeyClient interface {
	QueryAuthKey(ctx context.Context, in *AuthKeyRequest, opts ...grpc.CallOption) (*AuthKeyData, error)
	// TODO(@benqi): remove to biz_auth service
	QueryUserId(ctx context.Context, in *AuthKeyIdRequest, opts ...grpc.CallOption) (*UserIdResponse, error)
}

type zRPCAuthKeyClient struct {
	cc *grpc.ClientConn
}

func NewZRPCAuthKeyClient(cc *grpc.ClientConn) ZRPCAuthKeyClient {
	return &zRPCAuthKeyClient{cc}
}

func (c *zRPCAuthKeyClient) QueryAuthKey(ctx context.Context, in *AuthKeyRequest, opts ...grpc.CallOption) (*AuthKeyData, error) {
	out := new(AuthKeyData)
	err := c.cc.Invoke(ctx, "/mtproto.ZRPCAuthKey/QueryAuthKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zRPCAuthKeyClient) QueryUserId(ctx context.Context, in *AuthKeyIdRequest, opts ...grpc.CallOption) (*UserIdResponse, error) {
	out := new(UserIdResponse)
	err := c.cc.Invoke(ctx, "/mtproto.ZRPCAuthKey/QueryUserId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ZRPCAuthKeyServer is the server API for ZRPCAuthKey service.
type ZRPCAuthKeyServer interface {
	QueryAuthKey(context.Context, *AuthKeyRequest) (*AuthKeyData, error)
	// TODO(@benqi): remove to biz_auth service
	QueryUserId(context.Context, *AuthKeyIdRequest) (*UserIdResponse, error)
}

func RegisterZRPCAuthKeyServer(s *grpc.Server, srv ZRPCAuthKeyServer) {
	s.RegisterService(&_ZRPCAuthKey_serviceDesc, srv)
}

func _ZRPCAuthKey_QueryAuthKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZRPCAuthKeyServer).QueryAuthKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.ZRPCAuthKey/QueryAuthKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZRPCAuthKeyServer).QueryAuthKey(ctx, req.(*AuthKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZRPCAuthKey_QueryUserId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthKeyIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZRPCAuthKeyServer).QueryUserId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.ZRPCAuthKey/QueryUserId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZRPCAuthKeyServer).QueryUserId(ctx, req.(*AuthKeyIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ZRPCAuthKey_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.ZRPCAuthKey",
	HandlerType: (*ZRPCAuthKeyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryAuthKey",
			Handler:    _ZRPCAuthKey_QueryAuthKey_Handler,
		},
		{
			MethodName: "QueryUserId",
			Handler:    _ZRPCAuthKey_QueryUserId_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth_key_service.proto",
}

func init() {
	proto.RegisterFile("auth_key_service.proto", fileDescriptor_auth_key_service_1f78725018aa9ed6)
}

var fileDescriptor_auth_key_service_1f78725018aa9ed6 = []byte{
	// 358 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0x4f, 0x4f, 0xea, 0x40,
	0x14, 0xc5, 0x33, 0xf4, 0x41, 0xe1, 0xb6, 0xe1, 0xbd, 0xd7, 0x47, 0xa0, 0xf0, 0x12, 0x83, 0xac,
	0x58, 0x98, 0xc6, 0xe0, 0xda, 0x05, 0xe8, 0x42, 0x63, 0x34, 0xd8, 0xc4, 0x0d, 0x1b, 0x1c, 0xca,
	0x4d, 0x20, 0x42, 0x5b, 0xe7, 0x8f, 0x04, 0xbf, 0x84, 0xdf, 0xc8, 0xcf, 0x66, 0xe6, 0x0f, 0x18,
	0xba, 0x30, 0xc6, 0x15, 0xdc, 0xf9, 0x9d, 0x73, 0x7a, 0xee, 0x64, 0xa0, 0x49, 0xa5, 0x58, 0x4c,
	0x9f, 0x70, 0x3b, 0xe5, 0xc8, 0x5e, 0x96, 0x09, 0x46, 0x39, 0xcb, 0x44, 0x16, 0xb8, 0x6b, 0xa1,
	0xff, 0xf4, 0xde, 0x09, 0xfc, 0x1e, 0x4a, 0xb1, 0xb8, 0xc1, 0xed, 0x2d, 0x0a, 0x3a, 0xa7, 0x82,
	0x06, 0x0d, 0x28, 0xa7, 0x59, 0x9a, 0x60, 0x48, 0xba, 0xa4, 0xef, 0xc7, 0x66, 0x08, 0x8e, 0xc1,
	0x57, 0x19, 0xc8, 0xa6, 0x06, 0x96, 0x34, 0xf4, 0xcc, 0xd9, 0x9d, 0x96, 0xfc, 0x87, 0x5a, 0x8a,
	0x1b, 0xcb, 0x1d, 0xcd, 0xab, 0x29, 0x6e, 0x0c, 0xf4, 0x81, 0xd0, 0xf0, 0x97, 0x3e, 0x24, 0x54,
	0x4d, 0x79, 0x58, 0x36, 0x53, 0x1e, 0x1c, 0x81, 0xb7, 0x2f, 0xba, 0x9c, 0x87, 0x95, 0x2e, 0xe9,
	0x3b, 0x71, 0x8d, 0x9a, 0x5e, 0xd7, 0xf3, 0xa0, 0x0d, 0xd5, 0x1d, 0x0f, 0x5d, 0x6d, 0x72, 0x2d,
	0xec, 0x9d, 0x42, 0xdd, 0xf6, 0x8f, 0xf1, 0x59, 0x22, 0x17, 0xc5, 0x30, 0x52, 0x08, 0xeb, 0x3d,
	0x82, 0x67, 0x1d, 0x97, 0x6a, 0xdb, 0x26, 0x54, 0x18, 0x72, 0xb9, 0x12, 0x5a, 0x59, 0x8e, 0xed,
	0x54, 0x8c, 0x29, 0x7d, 0xd5, 0xc9, 0x39, 0xec, 0x34, 0x80, 0x3f, 0xc3, 0x9d, 0xee, 0xbb, 0xad,
	0x28, 0xd4, 0x1f, 0x38, 0x32, 0x65, 0xe0, 0x79, 0x96, 0x72, 0xfc, 0x71, 0xb1, 0x16, 0xb8, 0x92,
	0x23, 0x53, 0xcc, 0x31, 0x46, 0xa9, 0x83, 0x07, 0x6f, 0x04, 0xbc, 0x49, 0x3c, 0xbe, 0xb0, 0xdd,
	0x82, 0x73, 0xf0, 0xef, 0x25, 0xb2, 0xed, 0x6e, 0x6e, 0x45, 0xf6, 0x55, 0x44, 0x87, 0x37, 0xda,
	0x69, 0x14, 0x81, 0xbe, 0xb8, 0x21, 0x78, 0xda, 0x6e, 0x6a, 0x07, 0xed, 0xa2, 0x68, 0xbf, 0x7b,
	0xe7, 0x33, 0xf8, 0x70, 0xc5, 0xd1, 0x09, 0xfc, 0x4b, 0xb2, 0x75, 0x94, 0xe2, 0x4c, 0xae, 0xe8,
	0x72, 0x1d, 0xbd, 0x6a, 0xd5, 0xe8, 0xef, 0x64, 0xac, 0x7e, 0xe3, 0x3c, 0x51, 0x6f, 0x52, 0x7d,
	0xec, 0xaa, 0x34, 0x26, 0xb3, 0x8a, 0xa6, 0x67, 0x1f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x36, 0x67,
	0xa5, 0xfb, 0xd5, 0x02, 0x00, 0x00,
}
