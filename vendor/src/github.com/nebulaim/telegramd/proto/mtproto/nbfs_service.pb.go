// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nbfs_service.proto

package mtproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UploadPhotoFileRequest struct {
	OwnerId              int64      `protobuf:"varint,1,opt,name=ownerId,proto3" json:"ownerId,omitempty"`
	File                 *InputFile `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UploadPhotoFileRequest) Reset()         { *m = UploadPhotoFileRequest{} }
func (m *UploadPhotoFileRequest) String() string { return proto.CompactTextString(m) }
func (*UploadPhotoFileRequest) ProtoMessage()    {}
func (*UploadPhotoFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nbfs_service_1b164656045c9a7e, []int{0}
}
func (m *UploadPhotoFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadPhotoFileRequest.Unmarshal(m, b)
}
func (m *UploadPhotoFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadPhotoFileRequest.Marshal(b, m, deterministic)
}
func (dst *UploadPhotoFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadPhotoFileRequest.Merge(dst, src)
}
func (m *UploadPhotoFileRequest) XXX_Size() int {
	return xxx_messageInfo_UploadPhotoFileRequest.Size(m)
}
func (m *UploadPhotoFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadPhotoFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UploadPhotoFileRequest proto.InternalMessageInfo

func (m *UploadPhotoFileRequest) GetOwnerId() int64 {
	if m != nil {
		return m.OwnerId
	}
	return 0
}

func (m *UploadPhotoFileRequest) GetFile() *InputFile {
	if m != nil {
		return m.File
	}
	return nil
}

type GetPhotoFileDataRequest struct {
	PhotoId              int64    `protobuf:"varint,1,opt,name=photo_id,json=photoId,proto3" json:"photo_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPhotoFileDataRequest) Reset()         { *m = GetPhotoFileDataRequest{} }
func (m *GetPhotoFileDataRequest) String() string { return proto.CompactTextString(m) }
func (*GetPhotoFileDataRequest) ProtoMessage()    {}
func (*GetPhotoFileDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nbfs_service_1b164656045c9a7e, []int{1}
}
func (m *GetPhotoFileDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPhotoFileDataRequest.Unmarshal(m, b)
}
func (m *GetPhotoFileDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPhotoFileDataRequest.Marshal(b, m, deterministic)
}
func (dst *GetPhotoFileDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPhotoFileDataRequest.Merge(dst, src)
}
func (m *GetPhotoFileDataRequest) XXX_Size() int {
	return xxx_messageInfo_GetPhotoFileDataRequest.Size(m)
}
func (m *GetPhotoFileDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPhotoFileDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPhotoFileDataRequest proto.InternalMessageInfo

func (m *GetPhotoFileDataRequest) GetPhotoId() int64 {
	if m != nil {
		return m.PhotoId
	}
	return 0
}

type PhotoDataRsp struct {
	PhotoId              int64        `protobuf:"varint,1,opt,name=photo_id,json=photoId,proto3" json:"photo_id,omitempty"`
	AccessHash           int64        `protobuf:"varint,2,opt,name=access_hash,json=accessHash,proto3" json:"access_hash,omitempty"`
	Date                 int32        `protobuf:"varint,3,opt,name=date,proto3" json:"date,omitempty"`
	SizeList             []*PhotoSize `protobuf:"bytes,4,rep,name=size_list,json=sizeList,proto3" json:"size_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PhotoDataRsp) Reset()         { *m = PhotoDataRsp{} }
func (m *PhotoDataRsp) String() string { return proto.CompactTextString(m) }
func (*PhotoDataRsp) ProtoMessage()    {}
func (*PhotoDataRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_nbfs_service_1b164656045c9a7e, []int{2}
}
func (m *PhotoDataRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PhotoDataRsp.Unmarshal(m, b)
}
func (m *PhotoDataRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PhotoDataRsp.Marshal(b, m, deterministic)
}
func (dst *PhotoDataRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhotoDataRsp.Merge(dst, src)
}
func (m *PhotoDataRsp) XXX_Size() int {
	return xxx_messageInfo_PhotoDataRsp.Size(m)
}
func (m *PhotoDataRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_PhotoDataRsp.DiscardUnknown(m)
}

var xxx_messageInfo_PhotoDataRsp proto.InternalMessageInfo

func (m *PhotoDataRsp) GetPhotoId() int64 {
	if m != nil {
		return m.PhotoId
	}
	return 0
}

func (m *PhotoDataRsp) GetAccessHash() int64 {
	if m != nil {
		return m.AccessHash
	}
	return 0
}

func (m *PhotoDataRsp) GetDate() int32 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *PhotoDataRsp) GetSizeList() []*PhotoSize {
	if m != nil {
		return m.SizeList
	}
	return nil
}

type NbfsUploadedPhotoMedia struct {
	OwnerId              int64                      `protobuf:"varint,1,opt,name=ownerId,proto3" json:"ownerId,omitempty"`
	Media                *TLInputMediaUploadedPhoto `protobuf:"bytes,2,opt,name=media,proto3" json:"media,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *NbfsUploadedPhotoMedia) Reset()         { *m = NbfsUploadedPhotoMedia{} }
func (m *NbfsUploadedPhotoMedia) String() string { return proto.CompactTextString(m) }
func (*NbfsUploadedPhotoMedia) ProtoMessage()    {}
func (*NbfsUploadedPhotoMedia) Descriptor() ([]byte, []int) {
	return fileDescriptor_nbfs_service_1b164656045c9a7e, []int{3}
}
func (m *NbfsUploadedPhotoMedia) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NbfsUploadedPhotoMedia.Unmarshal(m, b)
}
func (m *NbfsUploadedPhotoMedia) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NbfsUploadedPhotoMedia.Marshal(b, m, deterministic)
}
func (dst *NbfsUploadedPhotoMedia) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NbfsUploadedPhotoMedia.Merge(dst, src)
}
func (m *NbfsUploadedPhotoMedia) XXX_Size() int {
	return xxx_messageInfo_NbfsUploadedPhotoMedia.Size(m)
}
func (m *NbfsUploadedPhotoMedia) XXX_DiscardUnknown() {
	xxx_messageInfo_NbfsUploadedPhotoMedia.DiscardUnknown(m)
}

var xxx_messageInfo_NbfsUploadedPhotoMedia proto.InternalMessageInfo

func (m *NbfsUploadedPhotoMedia) GetOwnerId() int64 {
	if m != nil {
		return m.OwnerId
	}
	return 0
}

func (m *NbfsUploadedPhotoMedia) GetMedia() *TLInputMediaUploadedPhoto {
	if m != nil {
		return m.Media
	}
	return nil
}

type NbfsUploadedDocumentMedia struct {
	OwnerId              int64                         `protobuf:"varint,1,opt,name=ownerId,proto3" json:"ownerId,omitempty"`
	Media                *TLInputMediaUploadedDocument `protobuf:"bytes,2,opt,name=media,proto3" json:"media,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *NbfsUploadedDocumentMedia) Reset()         { *m = NbfsUploadedDocumentMedia{} }
func (m *NbfsUploadedDocumentMedia) String() string { return proto.CompactTextString(m) }
func (*NbfsUploadedDocumentMedia) ProtoMessage()    {}
func (*NbfsUploadedDocumentMedia) Descriptor() ([]byte, []int) {
	return fileDescriptor_nbfs_service_1b164656045c9a7e, []int{4}
}
func (m *NbfsUploadedDocumentMedia) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NbfsUploadedDocumentMedia.Unmarshal(m, b)
}
func (m *NbfsUploadedDocumentMedia) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NbfsUploadedDocumentMedia.Marshal(b, m, deterministic)
}
func (dst *NbfsUploadedDocumentMedia) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NbfsUploadedDocumentMedia.Merge(dst, src)
}
func (m *NbfsUploadedDocumentMedia) XXX_Size() int {
	return xxx_messageInfo_NbfsUploadedDocumentMedia.Size(m)
}
func (m *NbfsUploadedDocumentMedia) XXX_DiscardUnknown() {
	xxx_messageInfo_NbfsUploadedDocumentMedia.DiscardUnknown(m)
}

var xxx_messageInfo_NbfsUploadedDocumentMedia proto.InternalMessageInfo

func (m *NbfsUploadedDocumentMedia) GetOwnerId() int64 {
	if m != nil {
		return m.OwnerId
	}
	return 0
}

func (m *NbfsUploadedDocumentMedia) GetMedia() *TLInputMediaUploadedDocument {
	if m != nil {
		return m.Media
	}
	return nil
}

type DocumentId struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AccessHash           int64    `protobuf:"varint,2,opt,name=access_hash,json=accessHash,proto3" json:"access_hash,omitempty"`
	Version              int32    `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DocumentId) Reset()         { *m = DocumentId{} }
func (m *DocumentId) String() string { return proto.CompactTextString(m) }
func (*DocumentId) ProtoMessage()    {}
func (*DocumentId) Descriptor() ([]byte, []int) {
	return fileDescriptor_nbfs_service_1b164656045c9a7e, []int{5}
}
func (m *DocumentId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DocumentId.Unmarshal(m, b)
}
func (m *DocumentId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DocumentId.Marshal(b, m, deterministic)
}
func (dst *DocumentId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DocumentId.Merge(dst, src)
}
func (m *DocumentId) XXX_Size() int {
	return xxx_messageInfo_DocumentId.Size(m)
}
func (m *DocumentId) XXX_DiscardUnknown() {
	xxx_messageInfo_DocumentId.DiscardUnknown(m)
}

var xxx_messageInfo_DocumentId proto.InternalMessageInfo

func (m *DocumentId) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DocumentId) GetAccessHash() int64 {
	if m != nil {
		return m.AccessHash
	}
	return 0
}

func (m *DocumentId) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

type DocumentAttributeList struct {
	Attributes           []*DocumentAttribute `protobuf:"bytes,1,rep,name=attributes,proto3" json:"attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DocumentAttributeList) Reset()         { *m = DocumentAttributeList{} }
func (m *DocumentAttributeList) String() string { return proto.CompactTextString(m) }
func (*DocumentAttributeList) ProtoMessage()    {}
func (*DocumentAttributeList) Descriptor() ([]byte, []int) {
	return fileDescriptor_nbfs_service_1b164656045c9a7e, []int{6}
}
func (m *DocumentAttributeList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DocumentAttributeList.Unmarshal(m, b)
}
func (m *DocumentAttributeList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DocumentAttributeList.Marshal(b, m, deterministic)
}
func (dst *DocumentAttributeList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DocumentAttributeList.Merge(dst, src)
}
func (m *DocumentAttributeList) XXX_Size() int {
	return xxx_messageInfo_DocumentAttributeList.Size(m)
}
func (m *DocumentAttributeList) XXX_DiscardUnknown() {
	xxx_messageInfo_DocumentAttributeList.DiscardUnknown(m)
}

var xxx_messageInfo_DocumentAttributeList proto.InternalMessageInfo

func (m *DocumentAttributeList) GetAttributes() []*DocumentAttribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

type DocumentIdList struct {
	IdList               []int64  `protobuf:"varint,1,rep,packed,name=id_list,json=idList,proto3" json:"id_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DocumentIdList) Reset()         { *m = DocumentIdList{} }
func (m *DocumentIdList) String() string { return proto.CompactTextString(m) }
func (*DocumentIdList) ProtoMessage()    {}
func (*DocumentIdList) Descriptor() ([]byte, []int) {
	return fileDescriptor_nbfs_service_1b164656045c9a7e, []int{7}
}
func (m *DocumentIdList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DocumentIdList.Unmarshal(m, b)
}
func (m *DocumentIdList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DocumentIdList.Marshal(b, m, deterministic)
}
func (dst *DocumentIdList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DocumentIdList.Merge(dst, src)
}
func (m *DocumentIdList) XXX_Size() int {
	return xxx_messageInfo_DocumentIdList.Size(m)
}
func (m *DocumentIdList) XXX_DiscardUnknown() {
	xxx_messageInfo_DocumentIdList.DiscardUnknown(m)
}

var xxx_messageInfo_DocumentIdList proto.InternalMessageInfo

func (m *DocumentIdList) GetIdList() []int64 {
	if m != nil {
		return m.IdList
	}
	return nil
}

type DocumentList struct {
	Documents            []*Document `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DocumentList) Reset()         { *m = DocumentList{} }
func (m *DocumentList) String() string { return proto.CompactTextString(m) }
func (*DocumentList) ProtoMessage()    {}
func (*DocumentList) Descriptor() ([]byte, []int) {
	return fileDescriptor_nbfs_service_1b164656045c9a7e, []int{8}
}
func (m *DocumentList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DocumentList.Unmarshal(m, b)
}
func (m *DocumentList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DocumentList.Marshal(b, m, deterministic)
}
func (dst *DocumentList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DocumentList.Merge(dst, src)
}
func (m *DocumentList) XXX_Size() int {
	return xxx_messageInfo_DocumentList.Size(m)
}
func (m *DocumentList) XXX_DiscardUnknown() {
	xxx_messageInfo_DocumentList.DiscardUnknown(m)
}

var xxx_messageInfo_DocumentList proto.InternalMessageInfo

func (m *DocumentList) GetDocuments() []*Document {
	if m != nil {
		return m.Documents
	}
	return nil
}

func init() {
	proto.RegisterType((*UploadPhotoFileRequest)(nil), "mtproto.UploadPhotoFileRequest")
	proto.RegisterType((*GetPhotoFileDataRequest)(nil), "mtproto.GetPhotoFileDataRequest")
	proto.RegisterType((*PhotoDataRsp)(nil), "mtproto.PhotoDataRsp")
	proto.RegisterType((*NbfsUploadedPhotoMedia)(nil), "mtproto.NbfsUploadedPhotoMedia")
	proto.RegisterType((*NbfsUploadedDocumentMedia)(nil), "mtproto.NbfsUploadedDocumentMedia")
	proto.RegisterType((*DocumentId)(nil), "mtproto.DocumentId")
	proto.RegisterType((*DocumentAttributeList)(nil), "mtproto.DocumentAttributeList")
	proto.RegisterType((*DocumentIdList)(nil), "mtproto.DocumentIdList")
	proto.RegisterType((*DocumentList)(nil), "mtproto.DocumentList")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RPCNbfsClient is the client API for RPCNbfs service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCNbfsClient interface {
	NbfsUploadPhotoFile(ctx context.Context, in *UploadPhotoFileRequest, opts ...grpc.CallOption) (*PhotoDataRsp, error)
	NbfsGetPhotoFileData(ctx context.Context, in *GetPhotoFileDataRequest, opts ...grpc.CallOption) (*PhotoDataRsp, error)
	NbfsUploadedPhotoMedia(ctx context.Context, in *NbfsUploadedPhotoMedia, opts ...grpc.CallOption) (*TLMessageMediaPhoto, error)
	NbfsUploadedDocumentMedia(ctx context.Context, in *NbfsUploadedDocumentMedia, opts ...grpc.CallOption) (*TLMessageMediaDocument, error)
	NbfsGetDocument(ctx context.Context, in *DocumentId, opts ...grpc.CallOption) (*Document, error)
	NbfsGetDocumentList(ctx context.Context, in *DocumentIdList, opts ...grpc.CallOption) (*DocumentList, error)
}

type rPCNbfsClient struct {
	cc *grpc.ClientConn
}

func NewRPCNbfsClient(cc *grpc.ClientConn) RPCNbfsClient {
	return &rPCNbfsClient{cc}
}

func (c *rPCNbfsClient) NbfsUploadPhotoFile(ctx context.Context, in *UploadPhotoFileRequest, opts ...grpc.CallOption) (*PhotoDataRsp, error) {
	out := new(PhotoDataRsp)
	err := c.cc.Invoke(ctx, "/mtproto.RPCNbfs/nbfs_uploadPhotoFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCNbfsClient) NbfsGetPhotoFileData(ctx context.Context, in *GetPhotoFileDataRequest, opts ...grpc.CallOption) (*PhotoDataRsp, error) {
	out := new(PhotoDataRsp)
	err := c.cc.Invoke(ctx, "/mtproto.RPCNbfs/nbfs_getPhotoFileData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCNbfsClient) NbfsUploadedPhotoMedia(ctx context.Context, in *NbfsUploadedPhotoMedia, opts ...grpc.CallOption) (*TLMessageMediaPhoto, error) {
	out := new(TLMessageMediaPhoto)
	err := c.cc.Invoke(ctx, "/mtproto.RPCNbfs/nbfs_uploadedPhotoMedia", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCNbfsClient) NbfsUploadedDocumentMedia(ctx context.Context, in *NbfsUploadedDocumentMedia, opts ...grpc.CallOption) (*TLMessageMediaDocument, error) {
	out := new(TLMessageMediaDocument)
	err := c.cc.Invoke(ctx, "/mtproto.RPCNbfs/nbfs_uploadedDocumentMedia", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCNbfsClient) NbfsGetDocument(ctx context.Context, in *DocumentId, opts ...grpc.CallOption) (*Document, error) {
	out := new(Document)
	err := c.cc.Invoke(ctx, "/mtproto.RPCNbfs/nbfs_getDocument", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCNbfsClient) NbfsGetDocumentList(ctx context.Context, in *DocumentIdList, opts ...grpc.CallOption) (*DocumentList, error) {
	out := new(DocumentList)
	err := c.cc.Invoke(ctx, "/mtproto.RPCNbfs/nbfs_getDocumentList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCNbfsServer is the server API for RPCNbfs service.
type RPCNbfsServer interface {
	NbfsUploadPhotoFile(context.Context, *UploadPhotoFileRequest) (*PhotoDataRsp, error)
	NbfsGetPhotoFileData(context.Context, *GetPhotoFileDataRequest) (*PhotoDataRsp, error)
	NbfsUploadedPhotoMedia(context.Context, *NbfsUploadedPhotoMedia) (*TLMessageMediaPhoto, error)
	NbfsUploadedDocumentMedia(context.Context, *NbfsUploadedDocumentMedia) (*TLMessageMediaDocument, error)
	NbfsGetDocument(context.Context, *DocumentId) (*Document, error)
	NbfsGetDocumentList(context.Context, *DocumentIdList) (*DocumentList, error)
}

func RegisterRPCNbfsServer(s *grpc.Server, srv RPCNbfsServer) {
	s.RegisterService(&_RPCNbfs_serviceDesc, srv)
}

func _RPCNbfs_NbfsUploadPhotoFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadPhotoFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCNbfsServer).NbfsUploadPhotoFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCNbfs/NbfsUploadPhotoFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCNbfsServer).NbfsUploadPhotoFile(ctx, req.(*UploadPhotoFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCNbfs_NbfsGetPhotoFileData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPhotoFileDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCNbfsServer).NbfsGetPhotoFileData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCNbfs/NbfsGetPhotoFileData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCNbfsServer).NbfsGetPhotoFileData(ctx, req.(*GetPhotoFileDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCNbfs_NbfsUploadedPhotoMedia_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NbfsUploadedPhotoMedia)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCNbfsServer).NbfsUploadedPhotoMedia(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCNbfs/NbfsUploadedPhotoMedia",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCNbfsServer).NbfsUploadedPhotoMedia(ctx, req.(*NbfsUploadedPhotoMedia))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCNbfs_NbfsUploadedDocumentMedia_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NbfsUploadedDocumentMedia)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCNbfsServer).NbfsUploadedDocumentMedia(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCNbfs/NbfsUploadedDocumentMedia",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCNbfsServer).NbfsUploadedDocumentMedia(ctx, req.(*NbfsUploadedDocumentMedia))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCNbfs_NbfsGetDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DocumentId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCNbfsServer).NbfsGetDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCNbfs/NbfsGetDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCNbfsServer).NbfsGetDocument(ctx, req.(*DocumentId))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPCNbfs_NbfsGetDocumentList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DocumentIdList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCNbfsServer).NbfsGetDocumentList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtproto.RPCNbfs/NbfsGetDocumentList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCNbfsServer).NbfsGetDocumentList(ctx, req.(*DocumentIdList))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCNbfs_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtproto.RPCNbfs",
	HandlerType: (*RPCNbfsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "nbfs_uploadPhotoFile",
			Handler:    _RPCNbfs_NbfsUploadPhotoFile_Handler,
		},
		{
			MethodName: "nbfs_getPhotoFileData",
			Handler:    _RPCNbfs_NbfsGetPhotoFileData_Handler,
		},
		{
			MethodName: "nbfs_uploadedPhotoMedia",
			Handler:    _RPCNbfs_NbfsUploadedPhotoMedia_Handler,
		},
		{
			MethodName: "nbfs_uploadedDocumentMedia",
			Handler:    _RPCNbfs_NbfsUploadedDocumentMedia_Handler,
		},
		{
			MethodName: "nbfs_getDocument",
			Handler:    _RPCNbfs_NbfsGetDocument_Handler,
		},
		{
			MethodName: "nbfs_getDocumentList",
			Handler:    _RPCNbfs_NbfsGetDocumentList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nbfs_service.proto",
}

func init() { proto.RegisterFile("nbfs_service.proto", fileDescriptor_nbfs_service_1b164656045c9a7e) }

var fileDescriptor_nbfs_service_1b164656045c9a7e = []byte{
	// 573 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0xdb, 0x6e, 0xd3, 0x40,
	0x10, 0x95, 0xe3, 0xb4, 0x69, 0xa7, 0x55, 0x05, 0xdb, 0xa6, 0x71, 0x2d, 0xa1, 0x5a, 0x46, 0x54,
	0xe1, 0xc5, 0x95, 0x0a, 0x2f, 0x54, 0x48, 0x88, 0x52, 0x95, 0x46, 0x2a, 0x55, 0xb4, 0x05, 0x21,
	0xfa, 0x12, 0xad, 0xed, 0x4d, 0xb3, 0x92, 0x2f, 0x21, 0xbb, 0x2e, 0x22, 0x3f, 0xc1, 0x9f, 0xf2,
	0x0d, 0xc8, 0xe3, 0xac, 0x63, 0x93, 0x0b, 0x3c, 0x25, 0x3b, 0x73, 0xe6, 0x9c, 0xf1, 0x99, 0x19,
	0x20, 0x89, 0x3f, 0x94, 0x03, 0xc9, 0x27, 0x8f, 0x22, 0xe0, 0xde, 0x78, 0x92, 0xaa, 0x94, 0xb4,
	0x62, 0x85, 0x7f, 0xec, 0x03, 0x19, 0x8c, 0x78, 0xcc, 0x3c, 0x15, 0x79, 0xf2, 0x67, 0x12, 0x14,
	0x69, 0xf7, 0x1e, 0x0e, 0xbf, 0x8c, 0xa3, 0x94, 0x85, 0xfd, 0x51, 0xaa, 0xd2, 0x2b, 0x11, 0x71,
	0xca, 0xbf, 0x67, 0x5c, 0x2a, 0x62, 0x41, 0x2b, 0xfd, 0x91, 0xf0, 0x49, 0x2f, 0xb4, 0x0c, 0xc7,
	0xe8, 0x9a, 0x54, 0x3f, 0xc9, 0x09, 0x34, 0x87, 0x22, 0xe2, 0x56, 0xc3, 0x31, 0xba, 0x3b, 0x67,
	0xc4, 0x9b, 0x29, 0x78, 0xbd, 0x64, 0x9c, 0x29, 0xa4, 0xc0, 0xbc, 0xfb, 0x1a, 0x3a, 0x1f, 0xb9,
	0x2a, 0x89, 0x2f, 0x99, 0x62, 0x9a, 0xfc, 0x08, 0xb6, 0xc6, 0x79, 0x7c, 0x20, 0x4a, 0x76, 0x7c,
	0xf7, 0x42, 0xf7, 0x97, 0x01, 0xbb, 0x58, 0x83, 0x78, 0x39, 0x5e, 0x83, 0x25, 0xc7, 0xb0, 0xc3,
	0x82, 0x80, 0x4b, 0x39, 0x18, 0x31, 0x39, 0xc2, 0x86, 0x4c, 0x0a, 0x45, 0xe8, 0x9a, 0xc9, 0x11,
	0x21, 0xd0, 0x0c, 0x99, 0xe2, 0x96, 0xe9, 0x18, 0xdd, 0x0d, 0x8a, 0xff, 0xc9, 0x29, 0x6c, 0x4b,
	0x31, 0xe5, 0x83, 0x48, 0x48, 0x65, 0x35, 0x1d, 0xb3, 0xf6, 0x0d, 0xa8, 0x7c, 0x27, 0xa6, 0x9c,
	0x6e, 0xe5, 0xa0, 0x1b, 0x21, 0x95, 0x1b, 0xc3, 0xe1, 0xad, 0x3f, 0x94, 0x85, 0x4f, 0xbc, 0x70,
	0xea, 0x13, 0x0f, 0x05, 0x5b, 0xe3, 0xd1, 0x1b, 0xd8, 0x88, 0x73, 0xc8, 0xcc, 0xa4, 0xe7, 0xa5,
	0xc0, 0xe7, 0x9b, 0x81, 0xc8, 0x7d, 0x42, 0x82, 0x1a, 0x25, 0x2d, 0x2a, 0x5c, 0x09, 0x47, 0x55,
	0xb9, 0xcb, 0x34, 0xc8, 0x62, 0x9e, 0xa8, 0x7f, 0x29, 0xbe, 0xad, 0x2b, 0x9e, 0xac, 0x57, 0xd4,
	0xac, 0x5a, 0xf4, 0x2b, 0x80, 0x0e, 0xf5, 0x42, 0xb2, 0x07, 0x8d, 0xd2, 0xec, 0x86, 0xf8, 0x0f,
	0x9f, 0x2d, 0x68, 0x3d, 0xf2, 0x89, 0x14, 0x69, 0x32, 0xb3, 0x5a, 0x3f, 0xdd, 0x3b, 0x68, 0x6b,
	0xe2, 0xf7, 0x4a, 0x4d, 0x84, 0x9f, 0x29, 0x74, 0x95, 0x9c, 0x03, 0x30, 0x1d, 0x90, 0x96, 0x81,
	0x73, 0xb0, 0xcb, 0xa6, 0x17, 0x6a, 0x68, 0x05, 0xed, 0xbe, 0x84, 0xbd, 0x79, 0xb7, 0xc8, 0xd6,
	0x81, 0x96, 0x08, 0x8b, 0x91, 0xe6, 0x54, 0x26, 0xdd, 0x14, 0x98, 0x70, 0xdf, 0xc1, 0xae, 0x86,
	0x22, 0xf0, 0x14, 0xb6, 0xc3, 0xd9, 0x5b, 0xab, 0x3e, 0x5d, 0x50, 0xa5, 0x73, 0xcc, 0xd9, 0x6f,
	0x13, 0x5a, 0xb4, 0xff, 0x21, 0x1f, 0x09, 0xb9, 0x85, 0x03, 0x3c, 0xb1, 0xac, 0x7e, 0x32, 0xe4,
	0xb8, 0x64, 0x58, 0x7e, 0x4c, 0x76, 0xbb, 0xbe, 0x60, 0x7a, 0xb5, 0xfb, 0xd0, 0x46, 0xbe, 0x87,
	0xbf, 0xce, 0x84, 0x38, 0x25, 0x7e, 0xc5, 0x05, 0xad, 0x62, 0xfc, 0x06, 0x9d, 0x4a, 0x87, 0xb5,
	0x65, 0x9d, 0x37, 0xb9, 0x7c, 0x9b, 0xed, 0x67, 0xd5, 0x95, 0x89, 0xb9, 0x94, 0xec, 0x81, 0x63,
	0x06, 0x31, 0xc4, 0x07, 0xbb, 0x46, 0x5d, 0x5f, 0x4c, 0x77, 0x29, 0x7b, 0x0d, 0x63, 0x3b, 0xab,
	0x04, 0x34, 0x8c, 0x9c, 0xc3, 0x13, 0x6d, 0x48, 0x19, 0xdb, 0x5f, 0x18, 0x4f, 0x2f, 0xb4, 0x17,
	0x67, 0x46, 0xae, 0x66, 0xc3, 0xa9, 0xd4, 0x16, 0xab, 0xb1, 0xa4, 0x3e, 0x4f, 0x54, 0x2c, 0xac,
	0xe2, 0x2f, 0x5e, 0xc0, 0x7e, 0x90, 0xc6, 0x5e, 0xc2, 0xfd, 0x2c, 0x62, 0x22, 0xf6, 0xa6, 0x88,
	0xb9, 0x80, 0xfb, 0x7e, 0xfe, 0x9b, 0x7f, 0xdd, 0x75, 0xa3, 0x6f, 0xf8, 0x9b, 0x18, 0x7e, 0xf5,
	0x27, 0x00, 0x00, 0xff, 0xff, 0x4b, 0x08, 0x25, 0x2b, 0x75, 0x05, 0x00, 0x00,
}
