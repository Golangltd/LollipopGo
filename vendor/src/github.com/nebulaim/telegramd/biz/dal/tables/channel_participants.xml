<?xml version="1.0" encoding="UTF-8"?>
<table sqlname="channel_participants">
    <operation name="Insert">
        <sql>
            INSERT INTO channel_participants
                (channel_id, user_id, is_creator, inviter_user_id, invited_at, joined_at, promoted_by, admin_rights, promoted_at, kicked_by, banned_rights, banned_until_date, banned_at)
            VALUES
                (:channel_id, :user_id, :is_creator, :inviter_user_id, :invited_at, :joined_at, :promoted_by, :admin_rights, :promoted_at, :kicked_by, :banned_rights, :banned_until_date, :banned_at)
        </sql>
    </operation>

    <operation name="InsertOrUpdate">
        <sql>
            INSERT INTO channel_participants
                (channel_id, user_id, inviter_user_id, invited_at, joined_at)
            VALUES
                (:channel_id, :user_id, :inviter_user_id, :invited_at, :joined_at)
            ON DUPLICATE KEY UPDATE
                participant_type = VALUES(participant_type),
                inviter_user_id = VALUES(inviter_user_id),
                invited_at=VALUES(inviter_user_id),
                joined_at=VALUES(joined_at),
                promoted_by = 0, admin_rights = 0, promoted_at = 0, is_left = 0, left_at = 0, kicked_by = 0, banned_rights = 0, banned_until_date = 0, banned_at = 0
        </sql>
    </operation>

    <operation name="SelectByChannelId" result_set="list">
        <sql>
            SELECT
                channel_id, user_id, is_creator, inviter_user_id, invited_at, joined_at, promoted_by, admin_rights, promoted_at, is_left, left_at, kicked_by, banned_rights, banned_until_date, banned_at
            FROM
                channel_participants
            WHERE
                channel_id = :channel_id
        </sql>
    </operation>

    <operation name="SelectByUserIdList" result_set="list">
        <params>
            <param name="idList" type="[]int32" />
        </params>
        <sql>
            SELECT
                channel_id, user_id, is_creator, inviter_user_id, invited_at, joined_at, promoted_by, admin_rights, promoted_at, is_left, left_at, kicked_by, banned_rights, banned_until_date, banned_at
            FROM
                channel_participants
            WHERE
                channel_id = :channel_id AND user_id IN(:idList)
        </sql>
    </operation>

    <operation name="SelectByUserId">
        <sql>
            SELECT
                channel_id, user_id, is_creator, inviter_user_id, invited_at, joined_at, promoted_by, admin_rights, promoted_at, is_left, left_at, kicked_by, banned_rights, banned_until_date, banned_at
            FROM
                channel_participants
            WHERE
                channel_id = :channel_id AND user_id = :user_id
        </sql>
    </operation>

    <operation name="UpdateBannedRights">
        <sql>
            UPDATE
                channel_participants
            SET
                banned_rights = :banned_rights, banned_until_date = :banned_until_date
            WHERE
                channel_id = :channel_id AND user_id = :user_id
        </sql>
    </operation>

    <operation name="UpdateAdminRights">
        <sql>
            UPDATE
                channel_participants
            SET
                admin_rights = :admin_rights
            WHERE
                channel_id = :channel_id AND user_id = :user_id
        </sql>
    </operation>

    <operation name="UpdateLeave">
        <sql>
            UPDATE
                channel_participants
            SET
                is_left = 1, left_at = :left_at
            WHERE
                channel_id = :channel_id AND user_id = :user_id
        </sql>
    </operation>

    <operation name="UpdateReadInboxMaxId">
        <sql>
            UPDATE
                channel_participants
            SET
                read_inbox_max_id = :read_inbox_max_id
            WHERE
                channel_id = :channel_id AND user_id = :user_id
        </sql>
    </operation>

    <operation name="UpdateReadOutboxMaxId">
        <sql>
            UPDATE
                channel_participants
            SET
                read_outbox_max_id = :read_inbox_max_id
            WHERE
                channel_id = :channel_id AND user_id = :user_id
        </sql>
    </operation>

    <!-- operation name="Update">
        <sql>
            UPDATE
                channel_participants
            SET
                inviter_user_id=:inviter_user_id, invited_at=:invited_at, joined_at=:joined_at, state=0
            WHERE
                id=:id
        </sql>
    </operation>

    <operation name="UpdateParticipantType">
        <sql>
            UPDATE
                channel_participants
            SET
                participant_type=:participant_type
            WHERE
                id=:id
        </sql>
    </operation -->
</table>
