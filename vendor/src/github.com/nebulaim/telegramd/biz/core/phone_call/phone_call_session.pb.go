// Code generated by protoc-gen-go. DO NOT EDIT.
// source: phone_call_session.proto

/*
Package phone_call is a generated protocol buffer package.

It is generated from these files:
	phone_call_session.proto

It has these top-level messages:
	PhoneCallSession
*/
package phone_call

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PhoneCallSession struct {
	Id                    int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	AdminId               int32  `protobuf:"varint,2,opt,name=admin_id,json=adminId" json:"admin_id,omitempty"`
	AdminAccessHash       int64  `protobuf:"varint,3,opt,name=admin_access_hash,json=adminAccessHash" json:"admin_access_hash,omitempty"`
	ParticipantId         int32  `protobuf:"varint,4,opt,name=participant_id,json=participantId" json:"participant_id,omitempty"`
	ParticipantAccessHash int64  `protobuf:"varint,5,opt,name=participant_access_hash,json=participantAccessHash" json:"participant_access_hash,omitempty"`
	UdpP2P                bool   `protobuf:"varint,6,opt,name=udp_p2p,json=udpP2p" json:"udp_p2p,omitempty"`
	UdpReflector          bool   `protobuf:"varint,7,opt,name=udp_reflector,json=udpReflector" json:"udp_reflector,omitempty"`
	MinLayer              int32  `protobuf:"varint,8,opt,name=min_layer,json=minLayer" json:"min_layer,omitempty"`
	MaxLayer              int32  `protobuf:"varint,9,opt,name=max_layer,json=maxLayer" json:"max_layer,omitempty"`
	GA                    []byte `protobuf:"bytes,10,opt,name=g_a,json=gA,proto3" json:"g_a,omitempty"`
	GB                    []byte `protobuf:"bytes,11,opt,name=g_b,json=gB,proto3" json:"g_b,omitempty"`
	State                 int32  `protobuf:"varint,12,opt,name=state" json:"state,omitempty"`
	Date                  int64  `protobuf:"varint,13,opt,name=date" json:"date,omitempty"`
}

func (m *PhoneCallSession) Reset()                    { *m = PhoneCallSession{} }
func (m *PhoneCallSession) String() string            { return proto.CompactTextString(m) }
func (*PhoneCallSession) ProtoMessage()               {}
func (*PhoneCallSession) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PhoneCallSession) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PhoneCallSession) GetAdminId() int32 {
	if m != nil {
		return m.AdminId
	}
	return 0
}

func (m *PhoneCallSession) GetAdminAccessHash() int64 {
	if m != nil {
		return m.AdminAccessHash
	}
	return 0
}

func (m *PhoneCallSession) GetParticipantId() int32 {
	if m != nil {
		return m.ParticipantId
	}
	return 0
}

func (m *PhoneCallSession) GetParticipantAccessHash() int64 {
	if m != nil {
		return m.ParticipantAccessHash
	}
	return 0
}

func (m *PhoneCallSession) GetUdpP2P() bool {
	if m != nil {
		return m.UdpP2P
	}
	return false
}

func (m *PhoneCallSession) GetUdpReflector() bool {
	if m != nil {
		return m.UdpReflector
	}
	return false
}

func (m *PhoneCallSession) GetMinLayer() int32 {
	if m != nil {
		return m.MinLayer
	}
	return 0
}

func (m *PhoneCallSession) GetMaxLayer() int32 {
	if m != nil {
		return m.MaxLayer
	}
	return 0
}

func (m *PhoneCallSession) GetGA() []byte {
	if m != nil {
		return m.GA
	}
	return nil
}

func (m *PhoneCallSession) GetGB() []byte {
	if m != nil {
		return m.GB
	}
	return nil
}

func (m *PhoneCallSession) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *PhoneCallSession) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func init() {
	proto.RegisterType((*PhoneCallSession)(nil), "phone_call.PhoneCallSession")
}

func init() { proto.RegisterFile("phone_call_session.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 332 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x91, 0xcd, 0x4b, 0xf3, 0x40,
	0x10, 0xc6, 0x49, 0xd2, 0x8f, 0x74, 0xde, 0x7e, 0xbc, 0xef, 0xf6, 0x95, 0xae, 0x78, 0x09, 0x8a,
	0x10, 0x3c, 0xe4, 0x50, 0xc1, 0x7b, 0xab, 0x87, 0x16, 0x3c, 0x84, 0x78, 0xf3, 0x12, 0xa6, 0xd9,
	0xb5, 0x59, 0xc8, 0xc7, 0x92, 0x4d, 0xa0, 0xfa, 0x37, 0xf8, 0x47, 0x4b, 0x26, 0x55, 0x73, 0xda,
	0x7d, 0x9e, 0xdf, 0xcc, 0xc3, 0x0c, 0x03, 0x5c, 0xa7, 0x65, 0x21, 0xe3, 0x04, 0xb3, 0x2c, 0x36,
	0xd2, 0x18, 0x55, 0x16, 0x81, 0xae, 0xca, 0xba, 0x64, 0xf0, 0x4b, 0xae, 0x3f, 0x1d, 0xf8, 0x1b,
	0xb6, 0xf2, 0x11, 0xb3, 0xec, 0xa5, 0x2b, 0x63, 0x73, 0xb0, 0x95, 0xe0, 0x96, 0x67, 0xf9, 0x4e,
	0x64, 0x2b, 0xc1, 0x2e, 0xc1, 0x45, 0x91, 0xab, 0x22, 0x56, 0x82, 0xdb, 0x9e, 0xe5, 0x0f, 0xa3,
	0x31, 0xe9, 0xbd, 0x60, 0x77, 0xf0, 0xaf, 0x43, 0x98, 0x24, 0xd2, 0x98, 0x38, 0x45, 0x93, 0x72,
	0x87, 0x3a, 0x17, 0x04, 0x36, 0xe4, 0xef, 0xd0, 0xa4, 0xec, 0x16, 0xe6, 0x1a, 0xab, 0x5a, 0x25,
	0x4a, 0x63, 0x51, 0xb7, 0x61, 0x03, 0x0a, 0x9b, 0xf5, 0xdc, 0xbd, 0x60, 0x0f, 0xb0, 0xea, 0x97,
	0xf5, 0x83, 0x87, 0x14, 0x7c, 0xd1, 0xc3, 0xbd, 0xf8, 0x15, 0x8c, 0x1b, 0xa1, 0x63, 0xbd, 0xd6,
	0x7c, 0xe4, 0x59, 0xbe, 0x1b, 0x8d, 0x1a, 0xa1, 0xc3, 0xb5, 0x66, 0x37, 0x30, 0x6b, 0x41, 0x25,
	0xdf, 0x32, 0x99, 0xd4, 0x65, 0xc5, 0xc7, 0x84, 0xa7, 0x8d, 0xd0, 0xd1, 0xb7, 0xc7, 0xae, 0x60,
	0xd2, 0xae, 0x91, 0xe1, 0xbb, 0xac, 0xb8, 0x4b, 0x73, 0xb9, 0xb9, 0x2a, 0x9e, 0x5b, 0x4d, 0x10,
	0x4f, 0x67, 0x38, 0x39, 0x43, 0x3c, 0x75, 0x70, 0x01, 0xce, 0x31, 0x46, 0x0e, 0x9e, 0xe5, 0x4f,
	0x23, 0xfb, 0xb8, 0xe9, 0x8c, 0x03, 0xff, 0x73, 0x36, 0xb6, 0xec, 0x3f, 0x0c, 0x4d, 0x8d, 0xb5,
	0xe4, 0x53, 0x6a, 0xed, 0x04, 0x63, 0x30, 0x10, 0xad, 0x39, 0xa3, 0xa5, 0xe8, 0xbf, 0x0d, 0x60,
	0x99, 0x94, 0x79, 0x50, 0xc8, 0x43, 0x93, 0xa1, 0xca, 0x83, 0x0f, 0xba, 0xd8, 0x76, 0xf9, 0x1a,
	0xb6, 0xef, 0xcf, 0xa1, 0x9e, 0xb0, 0xc6, 0x9d, 0x1d, 0x5a, 0x87, 0x11, 0xf1, 0xfb, 0xaf, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x09, 0x2a, 0x8e, 0x85, 0xed, 0x01, 0x00, 0x00,
}
