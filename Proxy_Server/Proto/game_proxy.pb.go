// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.2
// source: game_proxy.proto

package Proto_Proxy

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Proxy_CMD int32

const (
	Proxy_C2P_Connect  Proxy_CMD = 0 // 客户端链接代理
	Proxy_P2C_Connect  Proxy_CMD = 1 // 代理确认链接客户端
	Proxy_C2P_SendData Proxy_CMD = 2 // 客户端向代理发送消息
	Proxy_P2C_SendData Proxy_CMD = 3 // 代理向客户端发送消息
	Proxy_S2P_Connect  Proxy_CMD = 4 // 服务器连接代理
	Proxy_P2S_Connect  Proxy_CMD = 5 // 代理确认链接服务器
	Proxy_S2P_SendData Proxy_CMD = 6 // 服务器向代理发数据
	Proxy_P2S_SendData Proxy_CMD = 7 // 代理向服务器发送
)

// Enum value maps for Proxy_CMD.
var (
	Proxy_CMD_name = map[int32]string{
		0: "C2P_Connect",
		1: "P2C_Connect",
		2: "C2P_SendData",
		3: "P2C_SendData",
		4: "S2P_Connect",
		5: "P2S_Connect",
		6: "S2P_SendData",
		7: "P2S_SendData",
	}
	Proxy_CMD_value = map[string]int32{
		"C2P_Connect":  0,
		"P2C_Connect":  1,
		"C2P_SendData": 2,
		"P2C_SendData": 3,
		"S2P_Connect":  4,
		"P2S_Connect":  5,
		"S2P_SendData": 6,
		"P2S_SendData": 7,
	}
)

func (x Proxy_CMD) Enum() *Proxy_CMD {
	p := new(Proxy_CMD)
	*p = x
	return p
}

func (x Proxy_CMD) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Proxy_CMD) Descriptor() protoreflect.EnumDescriptor {
	return file_game_proxy_proto_enumTypes[0].Descriptor()
}

func (Proxy_CMD) Type() protoreflect.EnumType {
	return &file_game_proxy_proto_enumTypes[0]
}

func (x Proxy_CMD) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Proxy_CMD.Descriptor instead.
func (Proxy_CMD) EnumDescriptor() ([]byte, []int) {
	return file_game_proxy_proto_rawDescGZIP(), []int{0, 0}
}

type Proxy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Proxy) Reset() {
	*x = Proxy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proxy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Proxy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Proxy) ProtoMessage() {}

func (x *Proxy) ProtoReflect() protoreflect.Message {
	mi := &file_game_proxy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Proxy.ProtoReflect.Descriptor instead.
func (*Proxy) Descriptor() ([]byte, []int) {
	return file_game_proxy_proto_rawDescGZIP(), []int{0}
}

// (client/server)向代理服发送数据
type ProxyC2S_SendData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Protocol    int32  `protobuf:"varint,1,opt,name=protocol,proto3" json:"protocol,omitempty"`   // 协议
	Protocol2   int32  `protobuf:"varint,2,opt,name=protocol2,proto3" json:"protocol2,omitempty"` // 协议
	OpenId      string `protobuf:"bytes,3,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`
	ServerId    string `protobuf:"bytes,4,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Token       string `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
	PackageData []byte `protobuf:"bytes,6,opt,name=package_data,json=packageData,proto3" json:"package_data,omitempty"` // 二进制数据类型
}

func (x *ProxyC2S_SendData) Reset() {
	*x = ProxyC2S_SendData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proxy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyC2S_SendData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyC2S_SendData) ProtoMessage() {}

func (x *ProxyC2S_SendData) ProtoReflect() protoreflect.Message {
	mi := &file_game_proxy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyC2S_SendData.ProtoReflect.Descriptor instead.
func (*ProxyC2S_SendData) Descriptor() ([]byte, []int) {
	return file_game_proxy_proto_rawDescGZIP(), []int{1}
}

func (x *ProxyC2S_SendData) GetProtocol() int32 {
	if x != nil {
		return x.Protocol
	}
	return 0
}

func (x *ProxyC2S_SendData) GetProtocol2() int32 {
	if x != nil {
		return x.Protocol2
	}
	return 0
}

func (x *ProxyC2S_SendData) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *ProxyC2S_SendData) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *ProxyC2S_SendData) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ProxyC2S_SendData) GetPackageData() []byte {
	if x != nil {
		return x.PackageData
	}
	return nil
}

// 代理服向(client/server)回数据
type ProxyS2C_SendData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Protocol    int32  `protobuf:"varint,1,opt,name=protocol,proto3" json:"protocol,omitempty"`   // 协议
	Protocol2   int32  `protobuf:"varint,2,opt,name=protocol2,proto3" json:"protocol2,omitempty"` // 协议
	OpenId      string `protobuf:"bytes,3,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`
	PackageData []byte `protobuf:"bytes,4,opt,name=package_data,json=packageData,proto3" json:"package_data,omitempty"` // 二进制数据类型
}

func (x *ProxyS2C_SendData) Reset() {
	*x = ProxyS2C_SendData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proxy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyS2C_SendData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyS2C_SendData) ProtoMessage() {}

func (x *ProxyS2C_SendData) ProtoReflect() protoreflect.Message {
	mi := &file_game_proxy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyS2C_SendData.ProtoReflect.Descriptor instead.
func (*ProxyS2C_SendData) Descriptor() ([]byte, []int) {
	return file_game_proxy_proto_rawDescGZIP(), []int{2}
}

func (x *ProxyS2C_SendData) GetProtocol() int32 {
	if x != nil {
		return x.Protocol
	}
	return 0
}

func (x *ProxyS2C_SendData) GetProtocol2() int32 {
	if x != nil {
		return x.Protocol2
	}
	return 0
}

func (x *ProxyS2C_SendData) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *ProxyS2C_SendData) GetPackageData() []byte {
	if x != nil {
		return x.PackageData
	}
	return nil
}

// 玩家结构
type UserSt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleUid         int64            `protobuf:"varint,1,opt,name=role_uid,json=roleUid,proto3" json:"role_uid,omitempty"`                         // 可用作学号
	RoleName        string           `protobuf:"bytes,2,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`                       // 角色名字
	RoleAvatar      string           `protobuf:"bytes,3,opt,name=role_avatar,json=roleAvatar,proto3" json:"role_avatar,omitempty"`                 // 角色头像
	RoleLev         int32            `protobuf:"varint,4,opt,name=role_lev,json=roleLev,proto3" json:"role_lev,omitempty"`                         // 角色等级
	RoleSex         int32            `protobuf:"varint,5,opt,name=role_sex,json=roleSex,proto3" json:"role_sex,omitempty"`                         // 角色性别
	RoleExp         int32            `protobuf:"varint,6,opt,name=role_exp,json=roleExp,proto3" json:"role_exp,omitempty"`                         // 巫师经验
	Coin            int64            `protobuf:"varint,7,opt,name=coin,proto3" json:"coin,omitempty"`                                              // 金币
	Diamond         int64            `protobuf:"varint,8,opt,name=diamond,proto3" json:"diamond,omitempty"`                                        // 砖石
	TotalPower      int32            `protobuf:"varint,9,opt,name=total_power,json=totalPower,proto3" json:"total_power,omitempty"`                // 总战力
	Association     string           `protobuf:"bytes,10,opt,name=association,proto3" json:"association,omitempty"`                                // 协会
	LatestArea      string           `protobuf:"bytes,11,opt,name=latest_area,json=latestArea,proto3" json:"latest_area,omitempty"`                // 上一次的最新登录的区   区的url：ip+port
	ChannelId       int32            `protobuf:"varint,12,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`                  // 渠道Id
	ServerList      []*ServerList    `protobuf:"bytes,13,rep,name=server_list,json=serverList,proto3" json:"server_list,omitempty"`                // 整个游戏的所有区列表，从上线开始  1-30  29 数据更新操作
	RegisterTime    int64            `protobuf:"varint,14,opt,name=register_time,json=registerTime,proto3" json:"register_time,omitempty"`         // 玩家注册角色时间
	SnakeAttributes *SnakeAttributes `protobuf:"bytes,15,opt,name=snake_attributes,json=snakeAttributes,proto3" json:"snake_attributes,omitempty"` // 蛇的属性
}

func (x *UserSt) Reset() {
	*x = UserSt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proxy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSt) ProtoMessage() {}

func (x *UserSt) ProtoReflect() protoreflect.Message {
	mi := &file_game_proxy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSt.ProtoReflect.Descriptor instead.
func (*UserSt) Descriptor() ([]byte, []int) {
	return file_game_proxy_proto_rawDescGZIP(), []int{3}
}

func (x *UserSt) GetRoleUid() int64 {
	if x != nil {
		return x.RoleUid
	}
	return 0
}

func (x *UserSt) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *UserSt) GetRoleAvatar() string {
	if x != nil {
		return x.RoleAvatar
	}
	return ""
}

func (x *UserSt) GetRoleLev() int32 {
	if x != nil {
		return x.RoleLev
	}
	return 0
}

func (x *UserSt) GetRoleSex() int32 {
	if x != nil {
		return x.RoleSex
	}
	return 0
}

func (x *UserSt) GetRoleExp() int32 {
	if x != nil {
		return x.RoleExp
	}
	return 0
}

func (x *UserSt) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *UserSt) GetDiamond() int64 {
	if x != nil {
		return x.Diamond
	}
	return 0
}

func (x *UserSt) GetTotalPower() int32 {
	if x != nil {
		return x.TotalPower
	}
	return 0
}

func (x *UserSt) GetAssociation() string {
	if x != nil {
		return x.Association
	}
	return ""
}

func (x *UserSt) GetLatestArea() string {
	if x != nil {
		return x.LatestArea
	}
	return ""
}

func (x *UserSt) GetChannelId() int32 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *UserSt) GetServerList() []*ServerList {
	if x != nil {
		return x.ServerList
	}
	return nil
}

func (x *UserSt) GetRegisterTime() int64 {
	if x != nil {
		return x.RegisterTime
	}
	return 0
}

func (x *UserSt) GetSnakeAttributes() *SnakeAttributes {
	if x != nil {
		return x.SnakeAttributes
	}
	return nil
}

// 游戏服务器列表
type ServerList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId   int32  `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	ServerName string `protobuf:"bytes,2,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
	Url        string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	State      int32  `protobuf:"varint,4,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *ServerList) Reset() {
	*x = ServerList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proxy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerList) ProtoMessage() {}

func (x *ServerList) ProtoReflect() protoreflect.Message {
	mi := &file_game_proxy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerList.ProtoReflect.Descriptor instead.
func (*ServerList) Descriptor() ([]byte, []int) {
	return file_game_proxy_proto_rawDescGZIP(), []int{4}
}

func (x *ServerList) GetServerId() int32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *ServerList) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *ServerList) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ServerList) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

// 游戏内数据包
type GamePackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MainCmd     int32  `protobuf:"varint,1,opt,name=main_cmd,json=mainCmd,proto3" json:"main_cmd,omitempty"`            // 主协议, 大厅(10006,大厅主协议) 贪吃蛇(3002,贪吃蛇主协议)
	SubCmd      int32  `protobuf:"varint,2,opt,name=sub_cmd,json=subCmd,proto3" json:"sub_cmd,omitempty"`               // 子协议
	PackageData []byte `protobuf:"bytes,3,opt,name=package_data,json=packageData,proto3" json:"package_data,omitempty"` // 二进制数据类型
	OpenId      string `protobuf:"bytes,4,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`                // 用户Open ID
}

func (x *GamePackage) Reset() {
	*x = GamePackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proxy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GamePackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GamePackage) ProtoMessage() {}

func (x *GamePackage) ProtoReflect() protoreflect.Message {
	mi := &file_game_proxy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GamePackage.ProtoReflect.Descriptor instead.
func (*GamePackage) Descriptor() ([]byte, []int) {
	return file_game_proxy_proto_rawDescGZIP(), []int{5}
}

func (x *GamePackage) GetMainCmd() int32 {
	if x != nil {
		return x.MainCmd
	}
	return 0
}

func (x *GamePackage) GetSubCmd() int32 {
	if x != nil {
		return x.SubCmd
	}
	return 0
}

func (x *GamePackage) GetPackageData() []byte {
	if x != nil {
		return x.PackageData
	}
	return nil
}

func (x *GamePackage) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

// 蛇的属性
type SnakeAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnakerSkin string `protobuf:"bytes,1,opt,name=snaker_skin,json=snakerSkin,proto3" json:"snaker_skin,omitempty"` // def
	SnakerLev  int32  `protobuf:"varint,2,opt,name=snaker_lev,json=snakerLev,proto3" json:"snaker_lev,omitempty"`
	SnakerStar int32  `protobuf:"varint,3,opt,name=snaker_star,json=snakerStar,proto3" json:"snaker_star,omitempty"`
	SnakerExp  int32  `protobuf:"varint,4,opt,name=snaker_exp,json=snakerExp,proto3" json:"snaker_exp,omitempty"`
}

func (x *SnakeAttributes) Reset() {
	*x = SnakeAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_proxy_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnakeAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnakeAttributes) ProtoMessage() {}

func (x *SnakeAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_game_proxy_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnakeAttributes.ProtoReflect.Descriptor instead.
func (*SnakeAttributes) Descriptor() ([]byte, []int) {
	return file_game_proxy_proto_rawDescGZIP(), []int{6}
}

func (x *SnakeAttributes) GetSnakerSkin() string {
	if x != nil {
		return x.SnakerSkin
	}
	return ""
}

func (x *SnakeAttributes) GetSnakerLev() int32 {
	if x != nil {
		return x.SnakerLev
	}
	return 0
}

func (x *SnakeAttributes) GetSnakerStar() int32 {
	if x != nil {
		return x.SnakerStar
	}
	return 0
}

func (x *SnakeAttributes) GetSnakerExp() int32 {
	if x != nil {
		return x.SnakerExp
	}
	return 0
}

var File_game_proxy_proto protoreflect.FileDescriptor

var file_game_proxy_proto_rawDesc = []byte{
	0x0a, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x9b, 0x01, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x22, 0x91, 0x01, 0x0a,
	0x03, 0x43, 0x4d, 0x44, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x32, 0x50, 0x5f, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x32, 0x43, 0x5f, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x32, 0x50, 0x5f, 0x53, 0x65,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x32, 0x43, 0x5f,
	0x53, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x32,
	0x50, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x50,
	0x32, 0x53, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c,
	0x53, 0x32, 0x50, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x10, 0x06, 0x12, 0x10,
	0x0a, 0x0c, 0x50, 0x32, 0x53, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x10, 0x07,
	0x22, 0xbc, 0x01, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x32, 0x53, 0x5f, 0x53, 0x65,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x32, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x32,
	0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x89, 0x01, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x32, 0x43, 0x5f, 0x53, 0x65, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x32, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x32, 0x12,
	0x17, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0xf3, 0x03, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x55, 0x69,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x6f, 0x6c, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f,
	0x6c, 0x65, 0x5f, 0x73, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x6f,
	0x6c, 0x65, 0x53, 0x65, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x65, 0x78,
	0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x45, 0x78, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12,
	0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x72, 0x65, 0x61,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x72,
	0x65, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x64, 0x12, 0x2c, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x10, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x5f, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x53, 0x6e, 0x61, 0x6b, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x52, 0x0f, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x22, 0x72, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x7d, 0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6d, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x6d, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x75, 0x62, 0x43, 0x6d, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x6f,
	0x70, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70,
	0x65, 0x6e, 0x49, 0x64, 0x22, 0x91, 0x01, 0x0a, 0x0f, 0x53, 0x6e, 0x61, 0x6b, 0x65, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6e, 0x61, 0x6b,
	0x65, 0x72, 0x5f, 0x73, 0x6b, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x6e, 0x61, 0x6b, 0x65, 0x72, 0x53, 0x6b, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6e, 0x61,
	0x6b, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73,
	0x6e, 0x61, 0x6b, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6e, 0x61, 0x6b,
	0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73,
	0x6e, 0x61, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6e, 0x61,
	0x6b, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73,
	0x6e, 0x61, 0x6b, 0x65, 0x72, 0x45, 0x78, 0x70, 0x42, 0x09, 0x5a, 0x07, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_game_proxy_proto_rawDescOnce sync.Once
	file_game_proxy_proto_rawDescData = file_game_proxy_proto_rawDesc
)

func file_game_proxy_proto_rawDescGZIP() []byte {
	file_game_proxy_proto_rawDescOnce.Do(func() {
		file_game_proxy_proto_rawDescData = protoimpl.X.CompressGZIP(file_game_proxy_proto_rawDescData)
	})
	return file_game_proxy_proto_rawDescData
}

var file_game_proxy_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_game_proxy_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_game_proxy_proto_goTypes = []interface{}{
	(Proxy_CMD)(0),            // 0: Proxy.CMD
	(*Proxy)(nil),             // 1: Proxy
	(*ProxyC2S_SendData)(nil), // 2: ProxyC2S_SendData
	(*ProxyS2C_SendData)(nil), // 3: ProxyS2C_SendData
	(*UserSt)(nil),            // 4: UserSt
	(*ServerList)(nil),        // 5: ServerList
	(*GamePackage)(nil),       // 6: GamePackage
	(*SnakeAttributes)(nil),   // 7: SnakeAttributes
}
var file_game_proxy_proto_depIdxs = []int32{
	5, // 0: UserSt.server_list:type_name -> ServerList
	7, // 1: UserSt.snake_attributes:type_name -> SnakeAttributes
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_game_proxy_proto_init() }
func file_game_proxy_proto_init() {
	if File_game_proxy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_game_proxy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Proxy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proxy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyC2S_SendData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proxy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyS2C_SendData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proxy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proxy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proxy_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GamePackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_proxy_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnakeAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_game_proxy_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_game_proxy_proto_goTypes,
		DependencyIndexes: file_game_proxy_proto_depIdxs,
		EnumInfos:         file_game_proxy_proto_enumTypes,
		MessageInfos:      file_game_proxy_proto_msgTypes,
	}.Build()
	File_game_proxy_proto = out.File
	file_game_proxy_proto_rawDesc = nil
	file_game_proxy_proto_goTypes = nil
	file_game_proxy_proto_depIdxs = nil
}
